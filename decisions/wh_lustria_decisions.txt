decisions = {
	reclaim_the_staff_of_jade = {
		is_high_prio = yes
		only_playable = yes
		ai_check_interval = 60

		potential = {
			has_landed_title = e_lustria
			culture_group = lizardman_group
			NOR = {
				has_global_flag = the_staff_of_jade
				has_global_flag = destroy_the_staff_of_jade
			}
			NOT = { has_artifact = staff_of_jade }
		}
		allow = {
			war = no
			has_landed_title = e_lustria
			culture_group = lizardman_group
		}
		effect = {
			custom_tooltip = { text = reclaim_the_staff_of_jade_TT }
			character_event = { id = antoch.1 }
			set_global_flag = the_staff_of_jade
		}
		ai_will_do = {
			factor = 1
		}
	}
	destroy_the_staff_of_jade = {
		is_high_prio = yes
		only_playable = yes
		ai_check_interval = 60

		potential = {
			culture_group = lizardman_group
			has_artifact = staff_of_jade
		}
		allow = {
			culture_group = lizardman_group
			has_artifact = staff_of_jade
			OR = {
				is_doom_high_trigger = yes
				is_doom_very_high_trigger = yes
			}
		}
		effect = {
			custom_tooltip = { text = destroy_the_staff_of_jade_TT }
			character_event = { id = antoch.4 }
			set_global_flag = destroy_the_staff_of_jade
		}
		ai_will_do = {
			factor = 1
		}
	}
	awaken_slann = {
		ai_check_interval = 12
		is_high_prio = yes
		only_independent = yes
		potential = { ai = no
			trait = creature_skink
			is_ruler = yes
			independent = yes
			war = yes
			any_war = { OR = { is_primary_attacker = yes
					 is_primary_defender = yes } }
			NOT = { trait = incapable }
			NOT = { has_character_modifier = wakeslann_cooldown }
			NOT = { trait = defective }
			any_vassal = { trait = creature_slann
					trait = lizardman_sleepingslann }
		}
		allow = { piety = 400
			NOT = { decadence = 75 }

		}
		effect = { piety = -300
			decadence = 2
			hidden_tooltip = { add_character_modifier = { name = wakeslann_cooldown
						hidden = yes
						duration = 900 }
			random_vassal = { limit = { trait = creature_slann
							trait = lizardman_sleepingslann }
					character_event = { id = slizardmen.34 } } }
		}
		revoke_allowed = {
			always = no
		}
		ai_will_do = {
			factor = 0
		} #closesaiwilldo
	}
	search_youth_fountain = {
		ai_check_interval = 36
		is_high_prio = yes
		only_playable = yes
		potential = {
			OR = { trait = creature_amazon
				trait = creature_skink
				trait = creature_human }
			higher_tier_than = BARON
			is_ruler = yes
			war = no
			prisoner = no
			capital_scope = { location = { region = world_new_world_lustria } }
			NOT = { trait = incapable }
			NOT = { trait = immortal }
			NOT = { has_character_flag = searching_the_fountain }
			NOT = { trait = pregnant }
			custom_tooltip = { text = IS_NOT_INCAPACITATED
					is_incapacitated_trigger = no }
			is_vampire_trigger = no
		}
		allow = { prestige = 50
			wealth = 450
		 	}
		effect = { prestige = -50
			wealth = -450
			if = { limit = { trait = creature_skink }
				decadence = 4 }
		hidden_tooltip = {
			character_event = { id = slizardmen.70 }
			set_character_flag = searching_the_fountain }
		}
		revoke_allowed = {
			always = no
		}
		ai_will_do = {
			factor = 1
			modifier = { factor = 0.001
				 }
			modifier = { factor = 1.5
				 trait = brave }
			modifier = { factor = 1.5
				trait = wroth
				 }
			modifier = { factor = 2.5
				trait = ambitious
				 }
			modifier = { factor = 0.15
				trait = craven
				 }
			modifier = { factor = 0
				trait = maimed
				 }
			modifier = { factor = 0
				trait = wounded
				 }
		} #closesaiwilldo
	}

	reform_tlaqua = {
		is_high_prio = yes
		ai_check_interval = 48

		only_rulers = yes

		potential = {
			has_landed_title = k_tlanqua
			NOT = { has_global_flag = tlaqua_restored }
			capital_scope = {
				location = {
					region = world_greater_araby_southlands
				}
			}
			is_adult = yes
			is_ruler = yes
			independent = yes
			culture_group = lizardman_group
		}

		allow = {
			custom_tooltip = {
				text = IS_NOT_INCAPACITATED
				is_incapacitated_trigger = no
			}
			completely_controls = k_tulwark
			wealth = 500
			prestige = 500
			piety = 500
		}

		effect = {
			set_global_flag = tlaqua_restored
			wealth = -500
			piety = 500
			prestige = 500
			ROOT = {
				character_event = {
					id = gslizard.0
				}
			}
		}
	}
	#Amazon
	hold_fertility_ritual = {
		ai_check_interval = 4
		is_high_prio = yes

		only_playable = yes

		potential = {
			religion = amazon
			trait = creature_amazon
			is_adult = yes
			is_female = yes
			higher_tier_than = BARON
		}

		allow = {
			wealth = 25
			war = no
			custom_tooltip = {
				text = MUST_BE_SPRING
				month > 3
				month < 7
			}
			custom_tooltip = {
				text = IS_NOT_INCAPACITATED
				is_incapacitated_trigger = no
			}
			NOR = {
				trait = pregnant
				trait = disinherited_amazon
				trait = questing
				has_character_flag = holding_amazon_ritual
			}
			any_courtier = {
				is_adult = yes
				is_female = no
				OR = {
					custom_tooltip = {
							text = AMAZON_EXC_REQUIREMENT
							has_character_flag = amazon_exception
						}
						trait = in_stock
					}
				}
			}

		effect = {
			ROOT = {
				# Feast Start Event
				character_event = { id = amazon.6 }
				hidden_tooltip = {
					set_variable = {
						which = "drinking_count"
						value = 0
					}
				}
			}
			any_courtier = {
				is_adult = yes
				is_female = yes
				hidden_tooltip = {
					set_variable = {
						which = "drinking_count"
						value = 0
					}
				}
			}
		}

		ai_will_do = {
			factor = 5
		}
	}
	amazon_brawling_tournament = {
		ai_check_interval = 5
		is_high_prio = yes

		only_playable = yes

		potential = {
			independent = yes
			religion = amazon
			trait = creature_amazon
			is_adult = yes
			is_female = yes
			higher_tier_than = COUNT
			NOR = {
				trait = pregnant
				trait = incapable
				trait = disinherited
				trait = disinherited_amazon
				has_character_flag = brawling_participant
				has_character_modifier = am_brawling_cooldown
			}
			custom_tooltip = {
				text = IS_NOT_INCAPACITATED
				is_incapacitated_trigger = no
			}
			OR = {
				NOT = { age = 45 }
				trait = immortal
			}
			OR = {
				any_courtier = {
					count = 2
					is_adult = yes
					is_female = yes
					prisoner = no
					NOR = {
						trait = pregnant
						trait = incapable
						trait = disinherited
						trait = disinherited_amazon
						has_character_flag = brawling_participant
					}
					custom_tooltip = {
						text = IS_NOT_INCAPACITATED
						is_incapacitated_trigger = no
					}
					OR = {
						NOT = { age = 45 }
						trait = immortal
					}
				}
			 	any_vassal = {
					count = 2
					is_adult = yes
					is_female = yes
					prisoner = no
					NOR = {
						trait = pregnant
						trait = incapable
						trait = disinherited
						trait = disinherited_amazon
						has_character_flag = brawling_participant
					}
					custom_tooltip = {
						text = IS_NOT_INCAPACITATED
						is_incapacitated_trigger = no
					}
					OR = {
						NOT = { age = 45 }
						trait = immortal
					}
				}
			 }
		}

		allow = {
			prestige = 150
			wealth = 50
			war = no
			prisoner = no
			month > 5
			month < 12
		 }

		effect = {
			prestige = -150
			wealth = -50
			decadence = -5
			hidden_tooltip = {
				set_variable = {
					which = "brawl_player"
					value = 0
				}
				set_character_flag = brawling_participant
				set_character_flag = brawling_host
				set_character_flag = do_not_disturb
				diplomatic_immunity = yes
				# Notify Host the event will soon be prepared
				character_event = {
					id = amazon.42
				}
				# Cleanup flags and stuff
				character_event = {
					id = amazon.43
					days = 30
				}
				add_character_modifier = {
					name = am_brawling_cooldown
					hidden = yes
					duration = 1200
				}
				any_vassal = {
					limit = {
						is_adult = yes
						is_female = yes
						prisoner = no
						NOR = {
							trait = pregnant
							trait = incapable
							trait = disinherited
							trait = disinherited_amazon
							has_character_flag = brawling_participant
						}
						custom_tooltip = {
							text = IS_NOT_INCAPACITATED
							is_incapacitated_trigger = no
						}
						OR = {
							NOT = { age = 45 }
							trait = immortal
						}
					}
					# Invitation to Brawling contest
					letter_event = {
						id = amazon.44
						days = 2
						random = 5
					}
					set_character_flag = do_not_disturb
					diplomatic_immunity = yes
					# Cleanup flags and stuff
					character_event = {
						id = amazon.43
						days = 30
					}
				}
				any_courtier = {
					limit = {
						is_adult = yes
						is_female = yes
						prisoner = no
						is_ruler = no
						NOR = {
							trait = pregnant
							trait = incapable
							trait = disinherited
							trait = disinherited_amazon
							has_character_flag = brawling_participant
						}
						custom_tooltip = {
							text = IS_NOT_INCAPACITATED
							is_incapacitated_trigger = no
						}
						OR = {
							NOT = { age = 45 }
							trait = immortal
						}
					}
					# Invitation to Brawling contest
					letter_event = {
						id = amazon.44
						days = 2
						random = 5
					}
					set_character_flag = do_not_disturb
					diplomatic_immunity = yes
					# Cleanup flags and stuff
					character_event = {
						id = amazon.43
						days = 30
					}
				} #Cleanup flags and stuff
			}
		}

		revoke_allowed = {
			always = no
		}

		ai_will_do = {
			factor = 1
			modifier = {
				factor = 0.1
			}
			modifier = {
				factor = 1.5
				trait = brave
			}
			modifier = {
				factor = 1.5
				trait = wroth
			}
			modifier = {
				factor = 0.15
				trait = craven
			}
			modifier = {
				factor = 0
				trait = maimed
			}
			modifier = {
				factor = 0
				trait = wounded
			}
		}
	}
	free_stock_slaves = {
		ai_check_interval = 36
		is_high_prio = yes

		only_playable = yes

		potential = {
			NOT = { trait = creature_amazon }
			OR = {
				trait = in_stock
				any_vassal = {
					trait = in_stock
				}
				any_courtier = {
					trait = in_stock
				}
			}
			OR = {
				independent = yes
				top_liege = {
					NOT = { trait = creature_amazon }
				}
			}
		}

		allow = {
			NOT = { trait = creature_amazon }
			OR = {
				trait = in_stock
				any_vassal = {
					trait = in_stock
				}
				any_courtier = {
					trait = in_stock
				}
			}
			OR = {
				independent = yes
				top_liege = {
					NOT = { trait = creature_amazon }
				}
			}
		}

		effect = {
			remove_trait = in_stock
			any_vassal = {
				remove_trait = in_stock
			}
			any_courtier = {
				remove_trait = in_stock
			}
		}

		ai_will_do = { factor = 2 }
	}
}

targeted_decisions = {
	consume_quango_egg = {
		is_high_prio = yes
		ai_check_interval = 9
		only_playable = yes

		potential = {
			religion_group = old_ones_group
			OR = {
				has_artifact = egg_quango
				has_artifact = egg_quango_lesser
			}
		}

		allow = {
			is_adult = yes
			in_battle = yes
			prisoner = no
			piety = 100
			custom_tooltip = {
				text = "Must possess Quango Egg"
				OR = {
					has_artifact = egg_quango
					has_artifact = egg_quango_lesser
				}
			}
		}
		third_party_potential = {
			FROMFROM = {
				show_scope_change = no
				OR = {
					artifact_type = egg_quango
					artifact_type = egg_quango_lesser
				}
			}
		}


		effect = {
			if = {
				limit = {
					FROMFROM = { artifact_type = egg_quango }
				}
				piety = -250
				random_list = {
					40 = {
						set_character_flag = quango_success
					}
					60 = {
						set_character_flag = quango_great_success
					}
				}
				ROOT = {
					# Egg of Quango hatch event
					character_event = {
						id = lustria.28
					}
				}
			}
			if = {
				limit = {
					FROMFROM = { artifact_type = egg_quango_lesser }
				}
				piety = -100
				random_list = {
					25 = {
					}
					50 = {
						set_character_flag = quango_success
					}
					25 = {
						set_character_flag = quango_great_success
					}
				}
				ROOT = {
					# Egg of Quango hatch event
					character_event = {
						id = lustria.28
					}
				}
			}
		}

		third_party_score = {
			factor = 10
			##quality
			modifier = {
				value = 0.2
				FROMFROM = { artifact_type = egg_quango }
			}
			additive_modifier = {
				value = 5
				FROMFROM = {
					artifact_type = egg_quango_lesser
				}
			}
		}
	}
}

targetted_decisions = {
	give_province_lizardmen_1 = {
		only_playable = yes
		ai_check_interval = 12
		filter = realm
		ai_target_filter = self
		from_potential = {
			ai = no
			always = no #OBSOLETE
			trait = creature_skink
			NOT = { trait = incapable }
			is_ruler = yes
			NOR = { any_vassal = { has_character_modifier = tagged_recipient }
				any_courtier = { has_character_modifier = tagged_recipient }
				 }
		}

		potential = {
			trait = creature_skink
			always = no #OBSOLETE
			NOT = { character = FROM }
			liege = { character = FROM }
			NOT = { trait = incapable }
			custom_tooltip = { text = IS_NOT_INCAPACITATED
					is_incapacitated_trigger = no }
			NOT = { trait = disinherited_amazon }
			NOT = { trait = disinherited }                     # Can't do this decision on yourself...
		}
		allow = {
			FROM = { any_demesne_title = { can_be_given_away = yes } }
		}
		effect = {
			add_character_modifier =  { name = tagged_recipient duration = 30 }
		}
		revoke_allowed = {
			always = no
		}
		ai_will_do = {
			factor = 0
		} #closesaiwilldo
	}
	give_province_amazon_1 = {
		ai = no
		filter = realm
		ai_target_filter = self
		from_potential = {
			trait = creature_amazon
			NOT = { trait = incapable }
			is_ruler = yes
			NOR = { any_vassal = { has_character_modifier = tagged_recipient }
				any_courtier = { has_character_modifier = tagged_recipient }
				 }
		}

		potential = {
			trait = creature_amazon
			NOT = { character = FROM }
			liege = { character = FROM }
					NOT = { trait = disinherited_amazon }
			NOT = { trait = disinherited }
			custom_tooltip = { text = IS_NOT_INCAPACITATED
					is_incapacitated_trigger = no }
		}
		allow = {
			FROM = {
				any_demesne_title = { can_be_given_away = yes }
			}
		}
		effect = {
			add_character_modifier =  { name = tagged_recipient hidden = yes duration = 30 }
		}
		revoke_allowed = {
			always = no
		}
		ai_will_do = {
			factor = 0
		} #closesaiwilldo
	}
	#Amazon - Exile complacent Amazon
	exile_complacent_amazon = {
		ai_check_interval = 6
		filter = dynasty
		ai_target_filter = dynasty
		is_high_prio = yes
		only_rulers = yes
		# hide_in_decisions_list = yes # This decision is shown in the Religion View for each complacent character

		from_potential = {
			is_ruler = yes
			religion = amazon

		}

		potential = {
			is_female = yes
			prisoner = no
			dynasty = FROM
			trait = complacent
			NOT = { trait = disinherited }
			has_regent = no
			OR = { is_ruler = no
				liege = { character = FROM } }
		}

		allow = {
			FROM = {
				piety = 100
				prisoner = no
				NOT = { trait = complacent }
			}
		}
		effect = {
			character_event = { id = slizardmen.44101 }
			FROM = { piety = -100
				decadence = -3 }
		}

		revoke_allowed = {
			always = no
		}
		ai_will_do = {
			factor = 1
			modifier = {
				factor = 0
				any_dynasty_member = {
					ai = no
					higher_tier_than = ROOT
					same_realm = ROOT
				}
			}
		}
	}
	#Decision to eat prisoners for the Miyan
	eat_prisoner_miyan = {
		ai_check_interval = 6
		filter = court
		ai_target_filter = court
		only_rulers = yes
		from_potential = {
			religion = kukaili
			primary_title = { higher_tier_than = BARON }
			custom_tooltip = { text = IS_NOT_INCAPACITATED
					is_incapacitated_trigger = no }
			age = 16
			# trait = creature_halfling
		}

		potential = {
			prisoner = yes
			host = { character = FROM }
			NOT = { trait = khemri_tomb_king }
			# NOT = { religion = FROM }
		}
		allow = {
			prisoner = yes
		}


		effect = {
				hidden_tooltip = { FROM = { character_event = { id = DR_misc.500 } } }
		}


		revoke_allowed = {
			always = no
		}

		ai_will_do = {
			factor = 1
			modifier = {
				factor = 0.25
				}
			modifier = {
				factor = 0.4
				reverse_opinion = { who = FROM value = 20 }
				}
			modifier = {
				factor = 0.25
				reverse_opinion = { who = FROM value = 40 }
				}
			modifier = {
				factor = 5
				NOT = { reverse_opinion = { who = FROM value = -25 } }
				}
			modifier = {
				factor = 0
				FROM = { war = yes }
			}
			modifier = {
				factor = 1.5
				trait = gluttonous
				}
			modifier = {
				factor = 0.75
				prestige = 200
				}
			modifier = {
				factor = 0.05
				prestige = 1000
				}
			modifier = {
				factor = 0
				FROM = { trait = kind }
				}
			modifier = {
				factor = 2
				ROOT = { trait = cruel }
				}
		}
	}
}

title_decisions = {
	give_province_lizardmen_2 = {
		ai = no
		ai_check_interval = 12
		filter = owned
		ai_target_filter = owned

		potential = {
			can_be_given_away = yes
			always = no #OBSOLETE
			FROM = {
				culture_group = lizardman_group
				demesne_size = 2
			}
			holder_scope = {
				always = no #OBSOLETE
				character = FROM
				ai = no
			}
		}
		allow = { FROM = { OR = { any_vassal = { has_character_modifier = tagged_recipient }
					any_courtier = { has_character_modifier = tagged_recipient } } }
		}
		effect = {
			if = {
				limit = { FROM = { any_vassal = { has_character_modifier = tagged_recipient } } }
					FROM = { any_vassal = { limit = { has_character_modifier = tagged_recipient }
							ROOT = { grant_title = PREV
								set_government_type = lizardmen_government
								if = { limit = { higher_tier_than = COUNT }
									add_law = agnatic_succession
									add_law = succ_open_elective } }
							remove_character_modifier = tagged_recipient } }
				break = yes
				}
			if = {
				limit = { FROM = { any_courtier = { has_character_modifier = tagged_recipient } } }
					FROM = { any_courtier = { limit = { has_character_modifier = tagged_recipient }
							ROOT = { grant_title = PREV
								set_government_type = lizardmen_government
								if = { limit = { higher_tier_than = COUNT }
									add_law = agnatic_succession
									add_law = succ_open_elective } }
							remove_character_modifier = tagged_recipient } }
				break = yes
				}
		}

		revoke_allowed = {
			always = no
		}

		ai_will_do = { factor = 0 }
	} #closestitledecision
	give_province_amazon_2 = {
		ai = no
		filter = owned
		only_playable = yes

		potential = {
			can_be_given_away = yes
			FROM = {
				trait = creature_amazon
				demesne_size = 2
			}
			holder_scope = {
				character = FROM
				ai = no
			}
		}
		allow = { FROM = { OR = { any_vassal = { has_character_modifier = tagged_recipient }
					any_courtier = { has_character_modifier = tagged_recipient } } }
		}
		effect = {
			if = {
				limit = { FROM = { any_vassal = { has_character_modifier = tagged_recipient } } }
					FROM = { any_vassal = { limit = { has_character_modifier = tagged_recipient }
							ROOT = { grant_title = PREV
								if = { limit = { higher_tier_than = COUNT }
									add_law = enatic_succession } }
							remove_character_modifier = tagged_recipient } }
				break = yes
				}
			if = {
				limit = { FROM = { any_courtier = { has_character_modifier = tagged_recipient } } }
					FROM = { any_courtier = { limit = { has_character_modifier = tagged_recipient }
							ROOT = { grant_title = PREV
								if = { limit = { higher_tier_than = COUNT }
									add_law = enatic_succession } }
							remove_character_modifier = tagged_recipient } }
				break = yes
				}
		}

		revoke_allowed = {
			always = no
		}

		ai_will_do = { factor = 0 }
	} #closestitledecision
	give_province_lizardmen_ai = {
		ai_check_interval = 6
		filter = owned
		ai_target_filter = owned
		ai = no

		potential = {
			can_be_given_away = yes
			always = no #OBSOLETE
			FROM = { culture_group = lizardman_group
				demesne_size = 2
			}
			holder_scope = {
				always = no #OBSOLETE
				character = FROM
				ai = yes
				OR = { any_courtier = {
						is_female = no
						prisoner = no
						NOT = { character = FROM }
					NOT = { trait = disinherited_amazon }
						NOT = { trait = disinherited }
						trait = creature_skink
						}
					 any_vassal = {
						is_female = no
						prisoner = no
						NOT = { character = FROM }
					NOT = { trait = disinherited_amazon }
						NOT = { trait = disinherited }
						trait = creature_skink
						}
				}
			}
			tier = COUNT
			is_capital = no
		}
		allow = {
			always = yes
		}
		effect = {
			FROM = {
			if = {
				limit = { FROM = { any_vassal = { is_female = no
								prisoner = no
								NOT = { character = FROM }
								NOT = { trait = disinherited_amazon }
								NOT = { trait = disinherited }
								trait = creature_skink } } }
					FROM = { any_vassal = { limit = {
									is_female = no
									prisoner = no
									NOT = { character = FROM }
									NOT = { trait = disinherited_amazon }
									NOT = { trait = disinherited }
									trait = creature_skink }
							ROOT = { grant_title = PREV
								if = { limit = { higher_tier_than = COUNT }
									add_law = succ_appointment } }
							clr_character_flag = tagged_recipient } }
				break = yes
				}
			if = {
				limit = { FROM = { any_courtier = {
									is_female = no
									prisoner = no
									NOT = { character = FROM }
									NOT = { trait = disinherited_amazon }
									NOT = { trait = disinherited }
									trait = creature_skink } } }
					FROM = { any_courtier = { limit = {
									is_female = no
									prisoner = no
									NOT = { character = FROM }
									NOT = { trait = disinherited_amazon }
									NOT = { trait = disinherited }
									trait = creature_skink }
							ROOT = { grant_title = PREV
								if = { limit = { higher_tier_than = COUNT }
									add_law = succ_appointment } }
							clr_character_flag = tagged_recipient } }
				break = yes
				}
			}
		}

		revoke_allowed = {
			always = no
		}

		ai_will_do = {
			factor = 1

			modifier = {
				factor = 0.5
				FROM = { trait = greedy }
			}
			modifier = {
				factor = 0
				FROM = { NOT = { over_max_demesne_size = 1 } }
			}
			modifier = {
				factor = 0
				FROM = { NOT = { any_demesne_title = { tier = DUKE
									count = 3 }
						 }
					 }
				ROOT = { tier = DUKE }
			}
		}
	} #closestitledecision
	give_province_amazon_ai = {
		ai_check_interval = 6
		filter = owned
		ai_target_filter = owned
		only_playable = yes

		potential = {
			can_be_given_away = yes
			FROM = { trait = creature_amazon
				demesne_size = 2
			}
			holder_scope = {
				character = FROM
				ai = yes
				OR = { any_courtier = {
						is_female = yes
						prisoner = no
						NOT = { character = FROM }
									NOT = { trait = disinherited_amazon }
						NOT = { trait = disinherited }
						trait = creature_amazon
						}
					 any_vassal = {
						is_female = yes
						prisoner = no
						NOT = { character = FROM }
						NOT = { trait = disinherited }
									NOT = { trait = disinherited_amazon }
						trait = creature_amazon
						}
				}
			}
			tier = COUNT
			is_capital = no
		}
		allow = {
			always = yes
		}
		effect = {
			FROM = {
			if = {
				limit = { FROM = { any_vassal = {
						is_female = yes
						prisoner = no
						NOT = { character = FROM }
						NOT = { trait = disinherited }
									NOT = { trait = disinherited_amazon }
						trait = creature_amazon } } }
					FROM = { any_vassal = { limit = {
						is_female = yes
						prisoner = no
						NOT = { character = FROM }
						NOT = { trait = disinherited }
									NOT = { trait = disinherited_amazon }
						trait = creature_amazon }
							ROOT = { grant_title = PREV
								if = { limit = { higher_tier_than = COUNT }
									add_law = enatic_succession } }
							clr_character_flag = tagged_recipient } }
				break = yes
				}
			if = {
				limit = { FROM = { any_courtier = {
						is_female = yes
						prisoner = no
						NOT = { character = FROM }
						NOT = { trait = disinherited }
									NOT = { trait = disinherited_amazon }
						trait = creature_amazon } } }
					FROM = { any_courtier = { limit = {
						is_female = yes
						prisoner = no
						NOT = { character = FROM }
						NOT = { trait = disinherited }
									NOT = { trait = disinherited_amazon }
						trait = creature_amazon }
							ROOT = { grant_title = PREV
								if = { limit = { higher_tier_than = COUNT }
									add_law = enatic_succession } }
							clr_character_flag = tagged_recipient } }
				break = yes
				}
			}
		}

		revoke_allowed = {
			always = no
		}

		ai_will_do = {
			factor = 1

			modifier = {
				factor = 0.5
				FROM = { trait = greedy }
			}
			modifier = {
				factor = 0
				NOT = { over_max_demesne_size = 1 }
			}
			modifier = {
				factor = 0
				FROM = { NOT = { any_demesne_title = { tier = DUKE
									count = 3 }
						 }
					 }
				ROOT = { tier = DUKE }
			}
		}
	} #closestitledecision
}

plot_decisions = {
	faction_misaligned_chief_ultimatum = {
		ai_check_interval = 12
		is_high_prio = yes
		only_playable = yes

		potential = {
			leads_faction = faction_misaligned_chief
			OR = {
				NOT = {
					has_character_flag = faction_misaligned_chief_ultimatum_taken
				}
				had_character_flag = {
					flag = faction_misaligned_chief_ultimatum_taken
					days = 7
				}
			}
		}
		allow = {
			war = no
			prisoner = no
			custom_tooltip = {
				text = IS_NOT_INCAPACITATED
				is_incapacitated_trigger = no
			}
			liege = {
				NOR = {
					war_with = ROOT
					reverse_has_truce = ROOT
				}
			}
			capital_holding = {
				controller = {
					character = ROOT
				}
			}
		}
		effect = {
			liege = {
				# Skink Chief receives ultimatum letter
				letter_event = {
					id = lustria.38
					days = 3
				}
			}
			hidden_tooltip = {
				set_character_flag = faction_misaligned_chief_ultimatum_taken
			}
		}
		revoke_allowed = {
			always = no
		}

		ai_will_do = {
			factor = 1

			modifier = {
				factor = 0.5 # Slow it down a little
			}

			modifier = {
				factor = 2.5
				liege = { trait = defective }
			}

			modifier = {
				factor = 0
				NOT = {
					faction_power = {
						faction = faction_misaligned_chief
						power = 0.75
					}
				}
			}
			modifier = {
				factor = 0.1
				NOT = {
					faction_power = {
						faction = faction_misaligned_chief
						power = 1.0
					}
				}
			}
			modifier = {
				factor = 0.1
				NOT = {
					faction_power = {
						faction = faction_misaligned_chief
						power = 1.5
					}
				}
			}

			modifier = {
				factor = 0
				liege = {
					any_war = {
						OR = {
							AND = {
								defender = { character = PREV }
								NOR = {
									using_cb = depose_liege
								 	using_cb = overthrow_ruler
								 	using_cb = overthrow_ruler_no_calls
								}
							}
							AND = {
								attacker = { character = PREV }
								OR = {
									using_cb = invasion
									using_cb = religious
									using_cb = tribal_invasion
									# using_cb = viking_invasion
									using_cb = claim_all
									using_cb = claim
									using_cb = other_claim
								}
							}
						}
					}
				}
			}
		}
	}
	faction_complacent_queen_ultimatum = {
		ai_check_interval = 12
		is_high_prio = yes
		only_playable = yes

		potential = {
			leads_faction = faction_complacent_queen
			OR = {
				NOT = { has_character_flag = faction_complacent_queen_ultimatum_taken }
				had_character_flag = { flag = faction_complacent_queen_ultimatum_taken days = 7 }
			}
		}
		allow = {
			war = no
			prisoner = no
			custom_tooltip = { text = IS_NOT_INCAPACITATED
					is_incapacitated_trigger = no }
			liege = {
				NOT = { war_with = ROOT }
				NOT = { reverse_has_truce = ROOT }
			}
			capital_holding = {
				controller = {
					character = ROOT
				}
			}
		}
		effect = {
			liege = {
				letter_event = { id = slizardmen.45 days = 3 }
			}
			hidden_tooltip = {
				set_character_flag = faction_complacent_queen_ultimatum_taken
			}
		}
		revoke_allowed = {
			always = no
		}

		ai_will_do = {
			factor = 1

			modifier = {
				factor = 0.5 # Slow it down a little
			}

			modifier = {
				factor = 2.5
				liege = { trait = defective }
			}

			modifier = {
				factor = 0
				NOT = {
					faction_power = {
						faction = faction_misaligned_chief
						power = 0.75
					}
				}
			}
			modifier = {
				factor = 0.1
				NOT = {
					faction_power = {
						faction = faction_misaligned_chief
						power = 1.0
					}
				}
			}
			modifier = {
				factor = 0.1
				NOT = {
					faction_power = {
						faction = faction_misaligned_chief
						power = 1.5
					}
				}
			}

			modifier = {
				factor = 0
				liege = {
					any_war = {
						OR = {
							AND = {
								defender = { character = PREV }
								NOT = { using_cb = depose_liege }
								NOT = { using_cb = overthrow_ruler }
								NOT = { using_cb = overthrow_ruler_no_calls }
							}
							AND = {
								attacker = { character = PREV }
								OR = {
									using_cb = invasion
									using_cb = religious
									using_cb = tribal_invasion
									# using_cb = viking_invasion
									using_cb = claim_all
									using_cb = claim
									using_cb = other_claim
								}
							}
						}
					}
				}
			}
		}
	}
}

settlement_decisions = {
	cutback_jungle_decision = {
		filter = realm_owned
		ai = no # Handled by event

		only_playable = yes

		from_potential = {
		}

		potential = {
			is_capital = yes
			location = {
				has_province_modifier = lustria_jungle
			}
			OR = {
				holder_scope = {
					any_liege = { character = FROM }
				}
				holder_scope = { character = FROM }
			}
		}

		allow = {
			location = {
				NOT = { has_province_modifier = recent_cutback }
				OR = {
					has_province_modifier = lustria_medium_jungle
					has_province_modifier = lustria_dense_jungle
					has_province_modifier = lustria_oppressive_jungle
				}
			}
			OR = {
				FROM = {
					in_command = no
					custom_tooltip = {
						text = IS_NOT_INCAPACITATED
						is_incapacitated_trigger = no
					}
				}
				FROM = {
					job_treasurer = {
						character = yes
						is_adult = yes
						in_command = no
						custom_tooltip = {
							text = IS_NOT_INCAPACITATED
							is_incapacitated_trigger = no
						}
					}
				}
			}
		}

		effect = {
			location = {
				add_province_modifier =  {
					name = recent_cutback
					hidden = yes
					duration = 280
				}
			}
			FROM = {
				# Choose who will cut back your jungle
				character_event = {
					id = lustria.10
				}
			}
		}
	}
}
