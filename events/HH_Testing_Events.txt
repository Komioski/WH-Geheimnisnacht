namespace = HH_Debug

#Makes you a mage, for testing battle magic, may have weird results for races that don't support magic
character_event = {
	id = HH_Debug.1

	is_triggered_only = yes
	hide_window = yes


	trigger = {

	}

	immediate = {
		log = "Event: HH_Debug.1 fired. File: HH_Testing_Events.txt"	#$autogen
		random_lore_mage_effect = yes
	}
}

character_event = {
	id = HH_Debug.2

	is_triggered_only = yes
	hide_window = yes


	trigger = {

	}

	immediate = {
		log = "Event: HH_Debug.2 fired. File: HH_Testing_Events.txt"	#$autogen
		add_doom_progress_massive_effect = yes
	}
}

character_event = {
	id = HH_Debug.3

	is_triggered_only = yes
	hide_window = yes


	trigger = {

	}

	immediate = {
		log = "Event: HH_Debug.3 fired. File: HH_Testing_Events.txt"	#$autogen
		reduce_doom_progress_massive_effect = yes
	}
}

character_event = {
	id = HH_Debug.4

	is_triggered_only = yes
	hide_window = yes


	trigger = {

	}

	immediate = {
		log = "Event: HH_Debug.4 fired. File: HH_Testing_Events.txt"	#$autogen
		e_kislev = {
			holder_scope = {
				save_event_target_as = kislev
			}
		}
		any_title = {
			limit = {
				OR = {
					tier = KING
					tier = COUNT
				}
				region = world_norsca
			}
			grant_title = event_target:kislev
		}
	}
}

character_event = {
	id = HH_Debug.5

	is_triggered_only = yes
	hide_window = yes


	trigger = {

	}

	immediate = {
		log = "Event: HH_Debug.5 fired. File: HH_Testing_Events.txt"	#$autogen
		add_offmap_currency = {
			offmap = khorne_warp
			value = 50000
		}
		add_offmap_currency = {
			offmap = nurgle_warp
			value = 50000
		}
		add_offmap_currency = {
			offmap = tzeentch_warp
			value = 50000
		}
		add_offmap_currency = {
			offmap = slaanesh_warp
			value = 50000
		}
	}
}

character_event = {
	id = HH_Debug.7

	is_triggered_only = yes
	hide_window = yes


	trigger = {

	}

	immediate = {
		religion_scope = {
			set_heir_designation = yes
			set_female_temple_holders = yes
		}

	}
}


character_event = {
	id = HH_Debug.8

	is_triggered_only = yes
	hide_window = yes


	trigger = {

	}

	immediate = {
		any_character = {
			limit = {
				NOR = {
					is_married = yes
					is_landed = yes
					has_job_title = yes
					has_minor_title = yes
					AND = {
						NOT = { dynasty = none }
						num_of_dynasty_members = 2
					}
					any_lover = { ai = no }
					any_close_relative = { ai = no }
					any_friend = { ai = no }
					any_rival = { ai = no }
					any_consort = { ai = no }
					num_of_claims = 1
					has_character_flag = eternal_life_mystic
					trait = horse
					has_character_modifier = in_seclusion
					has_character_modifier = elder_long_life_modifier
				}
				is_chaos_champion_chosen_or_prince_trigger = no
				is_in_society = no
				is_lowborn = yes
				age = 50
				has_children = no
			}
			death = {
				death_reason = death_murder_unknown
			}
		}
	}
}

character_event = {
	id = HH_Debug.9

	is_triggered_only = yes
	hide_window = yes


	trigger = {

	}

	immediate = {
		hidden_tooltip = {
				primary_title = {
					add_law = {
						law = magic_law_3
						cooldown = no
						opinion_effect = no
					}
				}

				set_global_flag = college_of_magic_imperial_active
				export_to_variable = {
					which = global_college_of_magic_imperial_year_of_founding
					value = year
				}
				if = {
					limit = { NOT = { has_global_flag = first_college_of_magic_active } }
					set_global_flag = first_college_of_magic_active
				}
				college_of_magic_imperial = {
					save_event_target_as = magic_society_to_join
				}
				capital_scope = {
					d_imperial_college_of_magic = {
						adjective = [Prev.GetName]
						save_persistent_event_target = {
							name = college_of_magic_founder_per
							scope = ROOT
						}
					}
					set_province_flag = houses_college_of_magic
					set_province_flag = houses_college_of_magic_imperial
				}
				if = {
					limit = {
						is_trained_mage_trigger = yes
						NOT = { forbidden_lore_trigger = yes }
						is_in_society = no
					}
					set_character_flag = founder_of_college_of_magic
					join_society = event_target:magic_society_to_join
					save_event_target_as = title_to_get
					set_society_grandmaster = yes
				}
				else = {
					if = {
						limit = {
							any_courtier_or_vassal = {
								OR = {
									trait = creature_elf
									trait = creature_human
								}
								is_in_society = no
								is_ruler = no
								liege = { character = PREVPREV }
								is_trained_mage_trigger = yes
								NOT = { forbidden_lore_trigger = yes }
							}
						}
						random_courtier_or_vassal = {
							limit = {
								OR = {
									trait = creature_elf
									trait = creature_human
								}
								is_in_society = no
								is_ruler = no
								liege = { character = PREVPREV }
								is_trained_mage_trigger = yes
								NOT = { forbidden_lore_trigger = yes }
							}
							preferred_limit = {
								has_character_modifier = magic_power_4
							}
							preferred_limit = {
								trait = magic_potential_4
							}
							preferred_limit = {
								has_character_modifier = magic_power_3
							}
							preferred_limit = {
								trait = magic_potential_3
							}
							preferred_limit = {
								has_character_modifier = magic_power_2
							}
							preferred_limit = {
								trait = magic_potential_2
							}
							set_character_flag = founder_of_college_of_magic
							join_society = college_of_magic_imperial
							save_event_target_as = title_to_get
							set_society_grandmaster = yes
						}
					}
					else = {
						spawn_fantastic_scholar_effect = yes
						new_character = {
							# Set Racial Trait
							character_event = {
							  id = aiclean.31
							}
							random_lore_mage_effect = yes
							set_character_flag = founder_of_college_of_magic
							join_society = college_of_magic_imperial
							save_event_target_as = title_to_get
							set_society_grandmaster = yes
						}
					}
				}
				create_inital_magister_effect = yes
				any_realm_character = {
					limit = {
						ai = yes
						can_join_society = college_of_magic_imperial
						is_ruler = no
					}
					random = { chance = 75 join_society = college_of_magic_imperial character_event = { id = COM.300 days = 10 } }
				}
			}
			college_building_effect = yes
			narrative_event = { id =  COM.200 }
			any_realm_lord = { narrative_event = { id = COM.200 } }
			any_player = {
				if = {
					limit = {
						NOT = { character = ROOT }
					}
					narrative_event = { id = COM.200 }
				}
			}
	}
}

character_event = {
	id = HH_Debug.10

	is_triggered_only = yes
	hide_window = yes


	trigger = {

	}

	immediate = {
		hidden_tooltip = {
				primary_title = {
					add_law = {
						law = magic_law_3
						cooldown = no
						opinion_effect = no
					}
				}

				if = {
					limit = { NOT = { has_global_flag = first_college_of_magic_active } }
					set_global_flag = first_college_of_magic_active
				}
				capital_scope = { save_event_target_as = location_of_new_college }
				#Planning to have multiple icons so pick a random order of founding for variety
				random_list = {
					20 = {
						trigger = {
							NOT = { has_global_flag = college_of_magic_dynamic_1_active }
						}
						set_global_flag = college_of_magic_dynamic_1_active
						export_to_variable = {
							which = global_college_of_magic_dynamic_1_year_of_founding
							value = year
						}
						event_target:location_of_new_college = {
							d_college_of_magic_dynamic_1 = {
								random_college_name_effect = yes
								adjective = [Prev.GetName]
								save_persistent_event_target = {
									name = college_of_magic_founder_per
									scope = ROOT
								}
							}
							set_province_flag = houses_college_of_magic
							set_province_flag = houses_college_of_magic_dynamic_1
						}
						college_of_magic_dynamic_1 = {
							save_event_target_as = magic_society_to_join
						}
					}
					20 = {
						trigger = {
							NOT = { has_global_flag = college_of_magic_dynamic_2_active }
						}
						set_global_flag = college_of_magic_dynamic_2_active
						export_to_variable = {
							which = global_college_of_magic_dynamic_2_year_of_founding
							value = year
						}
						event_target:location_of_new_college = {
							d_college_of_magic_dynamic_2 = {
								random_college_name_effect = yes
								adjective = [Prev.GetName]
								save_persistent_event_target = {
									name = college_of_magic_founder_per
									scope = ROOT
								}
							}
							set_province_flag = houses_college_of_magic
							set_province_flag = houses_college_of_magic_dynamic_2
						}
						college_of_magic_dynamic_2 = {
							save_event_target_as = magic_society_to_join
						}
					}
					20 = {
						trigger = {
							NOT = { has_global_flag = college_of_magic_dynamic_3_active }
						}
						set_global_flag = college_of_magic_dynamic_3_active
						export_to_variable = {
							which = global_college_of_magic_dynamic_3_year_of_founding
							value = year
						}
						event_target:location_of_new_college = {
							d_college_of_magic_dynamic_3 = {
								random_college_name_effect = yes
								adjective = [Prev.GetName]
								save_persistent_event_target = {
									name = college_of_magic_founder_per
									scope = ROOT
								}
							}
							set_province_flag = houses_college_of_magic
							set_province_flag = houses_college_of_magic_dynamic_3
						}
						college_of_magic_dynamic_3 = {
							save_event_target_as = magic_society_to_join
						}
					}
					20 = {
						trigger = {
							NOT = { has_global_flag = college_of_magic_dynamic_4_active }
						}
						set_global_flag = college_of_magic_dynamic_4_active
						export_to_variable = {
							which = global_college_of_magic_dynamic_4_year_of_founding
							value = year
						}
						event_target:location_of_new_college = {
							d_college_of_magic_dynamic_4 = {
								random_college_name_effect = yes
								adjective = [Prev.GetName]
								save_persistent_event_target = {
									name = college_of_magic_founder_per
									scope = ROOT
								}
							}
							set_province_flag = houses_college_of_magic
							set_province_flag = houses_college_of_magic_dynamic_4
						}
						college_of_magic_dynamic_4 = {
							save_event_target_as = magic_society_to_join
						}
					}
					20 = {
						trigger = {
							NOT = { has_global_flag = college_of_magic_dynamic_5_active }
						}
						set_global_flag = college_of_magic_dynamic_5_active
						export_to_variable = {
							which = global_college_of_magic_dynamic_5_year_of_founding
							value = year
						}
						event_target:location_of_new_college = {
							d_college_of_magic_dynamic_5 = {
								random_college_name_effect = yes
								adjective = [Prev.GetName]
								save_persistent_event_target = {
									name = college_of_magic_founder_per
									scope = ROOT
								}
							}
							set_province_flag = houses_college_of_magic
							set_province_flag = houses_college_of_magic_dynamic_5
						}
						college_of_magic_dynamic_5 = {
							save_event_target_as = magic_society_to_join
						}
					}
				}
				if = {
					limit = {
						is_in_society = no
						is_trained_mage_trigger = yes
						NOT = { forbidden_lore_trigger = yes }
					}
					set_character_flag = founder_of_college_of_magic
					join_society = event_target:magic_society_to_join
					set_society_grandmaster = yes
					save_event_target_as = title_to_get
				}
				else = {
					random_courtier_or_vassal = {
						limit = {
							OR = {
								trait = creature_elf
								trait = creature_human
							}
							is_ruler = no
							liege = { character = PREVPREV }
							is_trained_mage_trigger = yes
							NOT = { forbidden_lore_trigger = yes }
							OR = {
								has_character_modifier = magic_power_4
								has_character_modifier = magic_power_3
							}
						}
						preferred_limit = {
							has_character_modifier = magic_power_4
						}
						preferred_limit = {
							trait = magic_potential_4
						}
						preferred_limit = {
							has_character_modifier = magic_power_3
						}
						preferred_limit = {
							trait = magic_potential_3
						}
						set_character_flag = founder_of_college_of_magic
						join_society = event_target:magic_society_to_join
						set_society_grandmaster = yes
						save_event_target_as = title_to_get
					}
				}
				create_inital_magister_effect = yes
				any_realm_character = {
					limit = {
						ai = yes
						can_join_society = event_target:magic_society_to_join
						is_ruler = no
					}
					random = { chance = 75 join_society = event_target:magic_society_to_join character_event = { id = COM.300 days = 10 } }
				}
			}
			college_building_effect = yes
			narrative_event = { id =  COM.200 }
			any_realm_lord = { narrative_event = { id = COM.200 } }
			any_player = {
				if = {
					limit = {
						NOT = { character = ROOT }
					}
					narrative_event = { id = COM.200 }
				}
			}
	}

}
character_event = {
	id = HH_Debug.11
	is_triggered_only = yes
	
	hide_window = yes
	
	immediate = {
	        any_courtier = {
		        limit = {
			        NOR = { 
			        dynasty = ROOT
			        is_married = ROOT
			        is_consort = ROOT
			        is_friend = ROOT
			        is_lover = ROOT
			        is_ruler = yes
			        is_mother = ROOT
			        is_father = ROOT
			        }
		        }
		    death = { death_reason = death_murder_unknown } 
	    }
	}	
}

