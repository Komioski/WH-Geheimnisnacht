#######################
# AMAZON Events
#######################
# amazon.0		# Maintenance event to ensure enatic succession and female barony holders
# amazon.1		# Ping event to clear negative opinion modifiers for succession law change
# amazon.2		# Give Barony to female character if held by man
# amazon.3		# Maintenance event on_bi_yearly_pulse to get rid of the random male courtiers
# amazon.4		# Notification event for males if not AI
# amazon.5		# Maintenance event on_bi_yearly_pulse to get rid of the random male children
#######################
# AMAZON FEASTING Events
#######################
# amazon.6		# In Spring, Amazons have a fertility ritual/feast where they can use their captives to reproduce
# amazon.7		# Amazon ruler chooses a prisoner to mate with (death by SNU SNU)
# amazon.8		# Prisoner is informed he must mate
# amazon.9		# Amazon is not disappointed
# amazon.10		# Amazon is disappointed
# amazon.11		# Prisoner is informed he will live
# amazon.12		# Prisoner is informed he will be sacrificed
# amazon.13		# Ping event to lower decadence after sacrifice
# amazon.14		# Event to remove holding feast flag after 30 days
# amazon.15		# Umbrella event for amazonian feast Flavor events
# amazon.16		# Drinking Contest
# amazon.17		# Second Amazon: Accept drinking contest?
# amazon.18		# Second Amazon is too cowardly
# amazon.19		# Amazon takes drink
# amazon.20		# Amazon takes drink after opponent
# amazon.21		# Other Amazon yields - Notify winner
# amazon.22		# Other Amazon has been defeated - Notify winner
# amazon.23		# You lost
# amazon.24		# Drinking a lot during the festival
# amazon.25		# Taking herbs during the festival and puking
# amazon.26		# Taking herbs during the festival and having a vision
# amazon.27		# Had some good time with your Amazon Sisters while drunk
# amazon.28		# Dancing around the fire
# amazon.29		# Passing the Snake
# amazon.30		# Mud Fighting
# amazon.31		# Second Amazon: Accept brawling?
# amazon.32		# Second Amazon is too cowardly
# amazon.33		# Second Amazon responds
# amazon.34		# Hidden fighting event to determine winner
# amazon.35		# Other Amazon has been defeated - Notify winner
# amazon.36		# Notify Loser
# amazon.37		# Lesbian love event
# amazon.38		# Scope courtier for love event
# amazon.39		# A drunken Amazon kisses you
# amazon.40		# New Lover
# amazon.41		# Just one night
#######################
# AMAZON BRAWL Events
#######################
# amazon.42		# Notify Host the event will soon be prepared
# amazon.43		# General cleanup event to remove flags and other stuff after the tournament has been completed
# amazon.44		# Invitation to Brawling contest
# amazon.45		# Notify Host guest will participate
# amazon.46		# Notify Host guest will not participate
# amazon.47		# The Tournament is about to start
# amazon.48		# The Tournament is about to start - Notify other Amazons
# amazon.49		# Brawl host starts with first fight
# amazon.50		# Second Amazon notified
# amazon.51		# First Amazon notified of who is the second Amazon
# amazon.52		# Not enough challengers, the tournament is cancelled
# amazon.53		# Hidden fighting event to determine winner
# amazon.54		# Winning Brawler event
# amazon.55		# Loser Brawler event
# amazon.56		# You won, but there are other challengers
# amazon.57		# You won the tournament
# amazon.58		# Notify Queen who didn't win about who did win
# amazon.59		# Notify all the losers about who won
# amazon.60		# Became brave during the tournament
# amazon.61		# Became stronger during the tournament
# amazon.62		# Became wroth during the tournament
# amazon.63		# Received Rigg's favour for your prowess
#######################
# amazon.64		# on_siege_over_winner The Amazons capture a good specimen (ROOT is attacker, FROM is province sieged)
# amazon.65		# on_bi_yearly_pulse Maintenance event to ensure that all children of amazon religion women are of their own dynasty and not bastards
# amazon.66		# on_bi_yearly_pulse Male courtier with the amazon_exception flag objects to being imprisoned, when he has been told he can walk freely amongst them
# amazon.67		# Host gets the appeal message
# amazon.68		# Prisoner gets positive reply
# amazon.69		# Prisoner gets negative reply
# amazon.70		# on_bi_yearly_pulse Males outside amazon society can inherit, and lose the trait
#######################
# AMAZON TRAINING Events
#######################
# amazon.71		# on_adolescence, determine which of the three types of Amazon girl is this going to be
# amazon.72		# Little Amazon wants to learn
# amazon.73		# Little Amazon has difficulties in learning
# amazon.74		# Little Amazon doesn't want to learn
# amazon.75		# Notify Guardian - Little Amazon wants to learn
# amazon.76		# Notify Guardian - Little Amazon can't learn
# amazon.77		# Notify Guardian - Little Amazon doesn't want to learn
# amazon.78		# The Amazon girl feels braver
# amazon.79		# Notify Guardian - The Amazon girl feels braver
# amazon.80		# The Amazon girl empowered
# amazon.81		# The Amazon girl berated
# amazon.82		# The Amazon girl ignored
# amazon.83		# The Amazon girl feels more talkative
# amazon.84		# Notify Guardian - The Amazon girl feels more talkative
# amazon.85		# The Amazon girl empowered
# amazon.86		# The Amazon girl berated
# amazon.87		# The Amazon girl ignored
# amazon.88		# The Amazon girl has some lazyness problems
# amazon.89		# Notify Guardian - The Amazon has some lazyness problems
# amazon.90		# The Amazon girl enabled
# amazon.91		# The Amazon girl berated
# amazon.92		# The Amazon girl ignored
# amazon.93		# A year later, lazy girl has grown fat
# amazon.94		# Notify Guardian - lazy girl has grown fat
# amazon.95		# The Amazon girl fights with other girls
# amazon.96		# Notify Guardian - The Amazon girl fights with other girls
# amazon.97		# The Amazon girl encouraged
# amazon.98		# The Amazon girl berated
# amazon.99		# The Amazon girl ignored
# amazon.100	# The Amazon girls get beaten by other girls
# amazon.101	# Notify Guardian - The Amazon is beaten by other girls
# amazon.102	# The Amazon girl enabled
# amazon.103	# The Amazon girl berated
# amazon.104	# The Amazon girl ignored
# amazon.105	# The Amazon girl feels insecure
# amazon.106	# Notify Guardian - The Amazon is insecure
# amazon.107	# The Amazon girl enabled
# amazon.108	# The Amazon girl berated
# amazon.109	# The Amazon girl ignored
# amazon.110	# The Amazon girl wounded herself during the training
# amazon.111	# Notify Guardian - The Amazon has been wounded in training
# amazon.112	# The Amazon girl enabled
# amazon.113	# The Amazon girl berated
# amazon.114	# The Amazon girl ignored
# amazon.115	# The Amazon girl became depressed out of frustration
# amazon.116	# Notify Guardian - The Amazon has become depressed
# amazon.117	# The Amazon girl enabled
# amazon.118	# The Amazon girl berated
# amazon.119	# The Amazon girl ignored
# amazon.120	# A year later, the Amazon girl became undernourished
# amazon.121	# Notify Guardian - The Amazon girl became undernourished
# amazon.122	# The Amazon girl refuses to fight on principle
# amazon.123	# Notify Guardian - The Amazon doesn't want to fight
# amazon.124	# The Amazon girl enabled
# amazon.125	# The Amazon girl berated
# amazon.126	# The Amazon girl ignored
# amazon.127	# The Amazon girl refuses to train at all
# amazon.128	# Notify Guardian - The Amazon doesn't want to fight
# amazon.129	# The Amazon girl enabled
# amazon.130	# The Amazon girl berated
# amazon.131	# The Amazon girl ignored
# amazon.132	# A year later, the Amazon girl has grown fat
# amazon.133	# Notify Guardian - The Amazon girl has grown fat
# amazon.134	# The Amazon girl is found kissing a male
# amazon.135	# Notify Guardian - The Amazon found kissing a male
# amazon.136	# The Amazon girl enabled
# amazon.137	# The Amazon girl berated
# amazon.138	# The Amazon girl ignored
# amazon.139	# The Amazon girl attempts to leave
# amazon.140	# Notify Guardian - The Amazon has escaped
# amazon.141	# The Amazon girl allowed to leave
# amazon.142	# The Amazon girl caught
# amazon.143	# Notify Guardian - The Amazon girl allowed to run away
# amazon.144	# Notify Guardian - The Amazon girl caught
# amazon.145	# On_adulthood check the status of the Amazon and start up the final test
# amazon.146	# Notify Mother - The Amazon girl is not able and cannot perform the trial
# amazon.147	# Trial event to determine if amazon Pass/Fail
# amazon.148	# You lost the trial
# amazon.149	# Inform mother about the daughter losing the trial
# amazon.150	# You won the trial, now for the rite of passage
# amazon.151	# Amazon emerges as strong-dumb
# amazon.152	# Amazon emerges as pretty-dumb
# amazon.153	# Amazon emerges as smart-freak
# amazon.154	# Amazon emerges as immortal
# amazon.155	# Amazon emerges as mage
# amazon.156	# Inform mother daughter came out strong
# amazon.157	# Inform mother daughter came out beautiful
# amazon.158	# Inform mother daughter came out smart
# amazon.159	# Inform mother daughter came out immortal
# amazon.160	# Inform mother daughter came out a shaman
# amazon.161	# Young Amazon child may be induced in finding love elsewhere, do to peer pressure
# amazon.162	# Other amazon girl receives advances
# amazon.163	# The other girl shares your interests
# amazon.164	# The other girl doesn't share your interests
# amazon.165	# Notify mother of revealed sexuality
#######################

namespace = amazon

#######################

# Maintenance event to ensure enatic succession and female barony holders
character_event = {
	id = amazon.0
	desc = amazon0desc
	picture = "GFX_evt_amazon"

	religion = amazon

	is_triggered_only = yes

	trigger = {
		trait = creature_amazon
		primary_title = {
			NOT = {
				has_law = enatic_succession
			}
		}
	}

	immediate = {
		primary_title = {
			add_law = enatic_succession
		}
	}

	option = {
		name = OK
		any_vassal = {
			limit = {
				religion = amazon
				trait = creature_amazon
				has_opinion_modifier = {
					who = ROOT
					modifier = succ_law_change
				}
			}
			# Ping event to clear negative opinion modifiers for succession law change
			character_event = { id = amazon.1 }
		}
	}
}
# Ping event to clear negative opinion modifiers for succession law change
character_event = {
	id = amazon.1
	hide_window = yes

	is_triggered_only = yes

	trigger = {
		OR = {
			has_opinion_modifier = {
				who = FROM
				modifier = succ_law_change
			}
			has_opinion_modifier = {
				who = FROM
				modifier = bad_succ_law_change
			}
			has_opinion_modifier = {
				who = FROM
				modifier = good_succ_law_change
			}
		}
	}

	immediate = {
		remove_opinion = {
			who = FROM
			modifier = good_succ_law_change
		}
		remove_opinion = {
			who = FROM
			modifier = bad_succ_law_change
		}
		remove_opinion = {
			who = FROM
			modifier = succ_law_change
		}
	}

	option = {
		name = OK
	}
}
# Give Barony to female character if held by man
character_event = {
	id = amazon.2
	hide_window = yes

	religion = amazon
	only_men = yes

	is_triggered_only = yes

	trigger = {
		is_feudal = no
		trait = creature_amazon
		num_of_baron_titles = 1
		lower_tier_than = COUNT
		NOT = {
			has_character_flag = amazon_exception
		}
	}

	immediate = {
		# Abdicate to spouse, if married
		if = {
			limit = {
				is_married = yes
				any_spouse = {
					is_female = yes
				}
			}
			random_spouse = {
				limit = {
					is_female = yes
				}
				abdicate_to = THIS
			}
			if = {
 				limit = { is_invincible_trigger = yes }
				antideath_effect = yes
				break = yes
			}
			death = { death_reason = death_sacrificed }
		}
		# Otherwise, to female courtier
		else_if = {
			limit = {
				any_courtier = {
					is_female = yes
				}
			}
			random_courtier = {
				limit = {
					is_female = yes
				}
				abdicate_to = THIS
			}
			if = {
 				limit = { is_invincible_trigger = yes }
				antideath_effect = yes
				break = yes
			}
			death = { death_reason = death_sacrificed }
		}
		else = {
			create_character = {
				female = yes
				random_traits = yes
				religion = amazon
				culture = amazon_main
				trait = creature_amazon
			}
			new_character = {
				abdicate_to = THIS
			}
			if = {
 				limit = { is_invincible_trigger = yes }
				antideath_effect = yes
				break = yes
			}
			death = { death_reason = death_sacrificed }
		}
	}

	option = {
		name = OK
	}
}
# Maintenance event on_bi_yearly_pulse to get rid of the random male courtiers
character_event = {
	id = amazon.3
	desc = amazon5desc # One or more males are running around freely in your court. This cannot be allowed to stand; They must be sent to the guarded male dorms immediately and put to good use!
	picture = "GFX_evt_amazon_queen"

	religion = amazon
	only_women = yes

	is_triggered_only = yes

	trigger = {
		is_landed = yes
		trait = creature_amazon
		any_courtier = {
			age >= 13
			NOR = {
				trait = in_stock
				has_character_flag = amazon_exception
				is_female = yes
			}
		}
	}

	# Yes, immediately!
	option = {
		name = amazon5A
		ai_chance = {
			factor = 65
		}
		any_courtier = {
			limit = {
				age >= 13
				NOR = {
					trait = in_stock
					has_character_flag = amazon_exception
					is_female = yes
				}
			}
			add_trait = in_stock
			if = {
				limit = {
					ai = no
				}
				character_event = { id = amazon.4 }
			}
		}
	}
	# No, let these ones keep roaming free
	option = {
		name = amazon5B
		ai_chance = {
			factor = 35
			modifier = {
				factor = 2.5
				trait = kind
			}
		}
		piety = -100
		decadence = 2
		any_courtier = {
			limit = {
				age >= 13
				NOR = {
					trait = in_stock
					has_character_flag = amazon_exception
					is_female = yes
				}
			}
			set_character_flag = amazon_exception
			religion = amazon
		}
	}

	after = {
		any_courtier = {
			if = {
				limit = {
					NOR = {
						trait = disinherited_amazon
						is_female = yes
					}
				}
				add_trait = disinherited_amazon
				set_character_flag = disinherited_by_amazon_laws
			}
		}
	}
}
# Notification event for males if not AI
character_event = {
	id = amazon.4
	desc = amazon6desc #You have walked as a free man amongst the amazons, but no more. A group of spear maidens seize you, and on orders of their queen, drag you to the dungeons where a new life of slavery awaits you.
	picture = "GFX_evt_amazon"

	is_triggered_only = yes

	#Nooo!
	option = {
		name = amazon6A
	}
}
# Maintenance event on_bi_yearly_pulse to get rid of the random male children
character_event = {
	id = amazon.5
	desc = amazon7desc #You have given birth to a male child. By the laws of your people, he must either be prepared for sacrifice, or slavery.
	picture = "GFX_evt_amazon"

	religion = amazon
	only_women = yes

	is_triggered_only = yes

	trigger = {
		trait = creature_amazon
		any_child = {
			NOR = {
				is_female = yes
				has_character_flag = amazon_exception
				has_character_flag = amazon_male_child_fate_decided
			}
		}
	}

	# He will be sent to the dungeons and be a slave
	option = {
		name = amazon7A
		ai_chance = {
			factor = 50
		}
		any_child = {
			if = {
				limit = {
					NOR = {
						is_female = yes
						has_character_flag = amazon_exception
						has_character_flag = amazon_male_child_fate_decided
					}
				}
				set_character_flag = amazon_male_child_fate_decided
				add_trait = in_stock
				if = {
					limit = {
						ai = no
					}
					character_event = { id = amazon.4 }
				}
			}
		}
	}
	# This one will be sacrificed.
	option = {
		name = amazon7B
		ai_chance = {
			factor = 25
			modifier = {
				factor = 2
				trait = cruel
			}
		}
		prestige = 100
		piety = 250
		decadence = -3
		any_child = {
			if = {
				limit = {
					NOR = {
						is_female = yes
						has_character_flag = amazon_exception
						has_character_flag = amazon_male_child_fate_decided
					}
				}
				if = {
					limit = { is_invincible_trigger = yes }
					antideath_effect = yes
					break = yes
				}
				death = { death_reason = death_sacrificed }
			}
		}

	}
	# I *am* the law! My sons will live free amongst us.
	option = {
		name = amazon7C
		trigger = {
			independent = yes
		}
		ai_chance = {
			factor = 25
			modifier = {
				factor = 2
				trait = kind
			}
		}
		prestige = -150
		piety = -200
		decadence = 8
		any_child = {
			if = {
				limit = {
					NOR = {
						is_female = yes
						has_character_flag = amazon_exception
						has_character_flag = amazon_male_child_fate_decided
					}
				}
				set_character_flag = amazon_exception
				set_character_flag = amazon_male_child_fate_decided
				religion = amazon
				remove_trait = in_stock
			}
		}
	}
}

#######################

# Amazon Feast events

#######################

# In Spring, Amazons have a fertility ritual/feast where they can use their captives to reproduce
character_event = {
	id = amazon.6
	desc = amazon8desc # Once each spring, it is allowed for all amazons of any caste to mate with men so that new daughters can be born. Do you wish to host a fertility ritual, and put your captive male population to good use?
	picture = "GFX_evt_amazon_feast"

	is_triggered_only = yes

	# Yes, let the ritual be prepared!
	option = {
		name = amazon8A
		hidden_tooltip = {
			set_character_flag = holding_amazon_ritual
			any_courtier = {
				limit = {
					is_adult = yes
					is_female = yes
					OR = {
						NOR = {
							age = 45
							num_of_children = 5
						}
						trait = immortal
					}
				}
				set_character_flag = holding_amazon_ritual
				diplomatic_immunity = yes
				# Amazon chooses a prisoner to mate with (death by SNU SNU)
				long_character_event = {
					id = amazon.7
					days = 20
				}
				# Event to remove holding feast flag after 30 days
				character_event = {
					id = amazon.14
					days = 60
				}
			}
			# Amazon chooses a prisoner to mate with (death by SNU SNU)
			long_character_event = {
				id = amazon.7
				days = 20
			}
			diplomatic_immunity = yes
			# Umbrella event for amazonian feast Flavor events
			character_event = {
				id = amazon.15
				days = 2
				random = 3
			}
			# Umbrella event for amazonian feast Flavor events round 2
			character_event = {
				id = amazon.15
				days = 12
				random = 10
			}
			# Event to remove holding feast flag after 30 days
			character_event = {
				id = amazon.14
				days = 60
			}
		}
	}
	# No, maybe next year..
	option = {
		name = amazon8B
		trigger = {
			ai = no
		}
	}
}
# Amazon chooses a prisoner to mate with (death by SNU SNU)
long_character_event = {
	id = amazon.7
	desc = amazon9desc # Rigg, Goddess of War and Battle does not normally tolerate men in her realm, but tonight is an exception. The drums beat, the pace of the dance increases, and as the wine flows, your ceremonial husband for one night is brought before you in chains along with many others for your gathered sisters. You may do as you wish with him and if he does not please you, Rigg will welcome his sacrifice after he has performed his final duty for the Amazon Sisterhood!
	picture = "GFX_evt_amazon_feast"

	is_triggered_only = yes

	# Come with me, slave...
	option = {
		name = amazon9A
		random_courtier = {
			limit = {
				is_adult = yes
				trait = creature_human
				OR = {
					has_character_flag = amazon_exception
					trait = in_stock
				}
				NOR = {
					trait = incapable
					trait = eunuch
					is_female = yes
				}
			}
			# Prisoner is informed he must mate
			long_character_event = {
				id = amazon.8
			}
		}
	}
}
# Prisoner is informed he must mate
long_character_event = {
	id = amazon.8
	desc = amazon10desc
	# From your prison cell, you hear the drums beat, the pace of the dance increases, the laughter upstairs in the palace grow increasingly wild as the wine no doubt flows.
	# Fierce amazon spearmaidens soon arrive to put you in chains and drag up to the hall along with the others. You are soon brought before an Amazon Priestess, and she leads you towards her private quarters...
	# you have heard rumors that men who displease them during the fertility rites are sacrificed, so your heart is pumping out of your chest...
	picture = "GFX_evt_amazon_feast"

	is_triggered_only = yes

	# Must .. not... disappoint her!
	option = {
		name = amazon10A
		if = {
			limit = {
				OR = {
					trait = genius
					trait = brilliant
					trait = smart
					trait = bright
					trait = quick
					trait = strong
					trait = hardy
					trait = tough
					trait = fair
					trait = beautiful
					trait = pretty
				}
			}
			random_list = {
				# Performs well
				80 = {
					FROM = {
						# Amazon is not disappointed
						character_event = {
							id = amazon.9
							days = 1
						}
					}
				}
				# Performs badly
				20 = {
					FROM = {
						# Amazon is disappointed
						character_event = {
							id = amazon.10
							days = 1
						}
					}
				}
			}
		}
		else = {
			random_list = {
				# Performs well
				50 = {
					FROM = {
						# Amazon is not disappointed
						character_event = {
							id = amazon.9
							days = 1
						}
					}
				}
				# Performs badly
				50 = {
					FROM = {
						# Amazon is disappointed
						character_event = {
							id = amazon.10
							days = 1
						}
					}
				}
			}
		}
		# Chance of impregnation
		hidden_tooltip = {
			if = {
				limit = {
					fertility >= 0.2
				}
			}
			random_list = {
				20 = {
					impregnate = FROM
				}
				80 = {
				}
			}
		}
	}
}
# Amazon is not disappointed
character_event = {
	id = amazon.9
	desc = amazon11desc # You wake up with a smile on your face, sighing contentedly. The slave performed well last night, and you are inclined to let him live on. Yet on the other hand, Rigg favors those who sacrifice in her name... especially things they place value on.
	picture = "GFX_evt_lovers"

	is_triggered_only = yes

	# Another time perhaps. For now, this one lives.
	option = {
		name = amazon11A
		trigger = {
			NOR = {
				trait = zealous
				trait = cruel
				trait = impaler
			}
			ai = no
		}
		decadence = 1
		FROM = {
			if = {
				limit = {
					ai = no
				}
			}
			# Prisoner is informed he will live
			character_event = { id = amazon.11 }
		}
	}
	# Rigg demands blood, and blood she shall have!
	option = {
		name = amazon11B
		trigger = {
			OR = {
				trait = zealous
				trait = cruel
				trait = impaler
				ai = no
			}
		}
		decadence = -1
		FROM = {
			# Prisoner is informed he will be sacrificed
			long_character_event = { id = amazon.12 }
		}
	}
}
# Amazon is disappointed
character_event = {
	id = amazon.10
	desc = amazon12desc # You wake up with a sneer awoken by the slave's snoring, still tied to your bed. You remember his pathetic performance last night, and the blood lust begins to boil in your veins...
	picture = "GFX_evt_lovers"

	is_triggered_only = yes

	# No, I'm going to be merciful.
	option = {
		name = amazon12A
		trigger = {
			OR = {
				trait = kind
				ai = no
			}
		}
		decadence = 2
		FROM = {
			if = {
				limit = {
					ai = no
				}
			}
			# Prisoner is informed he will live
			character_event = { id = amazon.11 }
		}
	}
	# At least I'll enjoy sacrificing this one, and hearing his screams.
	option = {
		name = amazon12B
		trigger = {
			OR = {
				trait = kind
				ai = no
			}
		}
		FROM = {
			# Prisoner is informed he will be sacrificed
			long_character_event = { id = amazon.12 }
		}
	}
}
# Prisoner is informed he will live
character_event = {
	id = amazon.11
	desc = amazon13desc # You wake up tied to the Priestesses's bed, and find her smiling down on you. 'Good slave,' she whispers, 'I hope the others let you live too, and I get you next year as well...'
	picture = "GFX_evt_lovers"

	is_triggered_only = yes

	# Thank the gods, I'm going to live!
	option = {
		name = amazon13A
	}
}
# Prisoner is informed he will be sacrificed
long_character_event = {
	id = amazon.12
	desc = amazon14desc
	# You wake up tied to the Priestesses's bed, and find her sneering face looking down on you. Without a word, you are knocked unconscious by the hilt of a wicked looking dagger and when you come to...
	# you are in the great hall, kneeling before the high priestess. Drums are beating, your head is pounding, amazons are dancing and cheering behind you, and then a sharp cold pain is felt against your throat and you have no time to scream
	# as the last things you see is a spray of blood pouring out on the ground from your throat!
	picture = "GFX_evt_amazon_feast"

	is_triggered_only = yes

	# Ugghhhh!!!
	option = {
		name = amazon14A
		FROM = {
			# Ping event to lower decadence after sacrifice
			long_character_event = { id = amazon.13 }
		}
		if = {
 			limit = { is_invincible_trigger = yes }
			antideath_effect = yes
			break = yes
		}
		death = { death_reason = death_sacrificed }
	}
}
# Ping event to lower decadence after sacrifice
long_character_event = {
	id = amazon.13
	desc = amazon15desc
	# The sacrifices to Rigg are brought before the throne. These men have proven themselves worthless. The drums are beating, your sisters are dancing around them, and cheers emanate from the sides of the great hall.
	# Finally you step down behind the slave you bedded last night, savor the look of terror on his face, and then swiftly draw the sacrificial dagger as you move behind him and spray his lifeblood all over the floor. Rigg be praised, let this sacrifice please her!
	picture = "GFX_evt_amazon_snake"

	is_triggered_only = yes

	# Rigg be praised!
	option = {
		name = amazon15A
		decadence = -3
		piety = 150
	}
}
# Event to remove holding feast flag after 30 days
character_event = {
	id = amazon.14
	hide_window = yes

	is_triggered_only = yes

	immediate = {
		diplomatic_immunity = no
		clr_character_flag = holding_amazon_ritual
		clr_character_flag = start_feast_contest
		clr_character_flag = feast_contest
		set_variable = {
			which = "drinking_count"
			value = 0
		}
	}

	option = {
		name = OK
	}
}

#######################

# Umbrella event for amazonian feast Flavor events
character_event = {
	id = amazon.15
	hide_window = yes

	is_triggered_only = yes

	immediate = {
		random_list = {
			# Drinking contest
			15 = {
				character_event = {
					id = amazon.16
				}
			}
			# Mud Fighting
			20 = {
				character_event = {
					id = amazon.30
				}
			}
			# Love
			8 = {
				character_event = {
					id = amazon.37
				}
			}
			# Drank too much
			10 = {
				modifier = {
					factor = 1.5
					check_variable = {
						which = "drinking_count"
						value = 4
					}
				}
				modifier = {
					factor = 0.2
					NOT = {
						check_variable = {
							which = "drinking_count"
							value = 1
						}
					}
				}
				character_event = {
					id = amazon.24
				}
			}
			# Taken bad herbs
			8 = {
				character_event = {
					id = amazon.25
				}
			}
			# Taken good herbs
			10 = {
				character_event = {
					id = amazon.26
				}
			}
			# Fun while drunk
			8 = {
				character_event = {
					id = amazon.27
				}
			}
			# Dancing
			16 = {
				character_event = {
					id = amazon.28
				}
			}
			# Passing the Snake
			5 = {
				modifier = {
					factor = 0
					NOT = {
						check_variable = {
							which = "drinking_count"
							value = 1
						}
					}
				}
				long_character_event = {
					id = amazon.29
				}
			}
		}
	}

	option = {
		name = OK
	}
}

#######################

# Drinking Contest
character_event = {
	id = amazon.16
	hide_window = yes

	is_triggered_only = yes

	immediate = {
		save_event_target_as = am_drinking_1
		if = {
			limit = {
				any_courtier = {
					is_adult = yes
					is_female = yes
				}
			}
			random_courtier = {
				limit = {
					is_adult = yes
					is_female = yes
				}
				character_event = {
					id = amazon.17
				}
			}
		}
		clr_character_flag = start_feast_contest
	}

	option = {
		name = OK
	}
}
# Second Amazon: Accept drinking contest?
character_event = {
	id = amazon.17
	desc = EVTDESCslizardmen54001
	picture = GFX_evt_amazon_feast

	is_triggered_only = yes

	option = {
		name = EVTOPTAslizardmen54001
		ai_chance = {
			factor = 75
		}
		save_event_target_as = am_drinking_2
		FROM = {
			character_event = {
				id = amazon.19
			}
		}
	}
	option = {
		name = EVTOPTBslizardmen54001
		ai_chance = {
			factor = 25
			modifier = {
				factor = 2
				trait = craven
			}
		}
		decadence = 3
		FROM = {
			# Second Amazon is too cowardly
			character_event = {
				id = amazon.18
			}
		}
	}
}
# Second Amazon is too cowardly
character_event = {
	id = amazon.18
	desc = EVTDESCslizardmen54002
	picture = GFX_evt_amazon_feast

	is_triggered_only = yes

	option = {
		name = EVTOPTAslizardmen54002
		prestige = 25
		clr_character_flag = feast_contest
		FROM = {
			clr_character_flag = feast_contest
		}
	}
}
# Amazon takes drink
character_event = {
	id = amazon.19
	desc = EVTDESCslizardmen54003
	picture = GFX_evt_amazon_feast

	is_triggered_only = yes

	option = {
		name = EVTOPTAslizardmen54003
		hidden_tooltip = {
			random_list = {
				# Drank fine, keep going
				90 = {
					modifier = {
						factor = 0.65
						trait = fragile
					}
					modifier = {
						factor = 0.75
						trait = weak
					}
					modifier = {
						factor = 0.85
						trait = soft
					}
					modifier = {
						factor = 1.5
						trait = hardy
					}
					modifier = {
						factor = 1.65
						trait = tough
					}
					modifier = {
						factor = 1.85
						trait = strong
					}
					modifier = {
						factor = 0.75
						trait = temperate
					}
					modifier = {
						factor = 1.15
						trait = diligent
					}
					modifier = {
						factor = 1.5
						trait = drunkard
					}
					modifier = {
						factor = 1.25
						trait = addict
					}
					modifier = {
						factor = 1.15
						trait = gluttonous
					}
					modifier = {
						factor = 1.5
						trait = is_fat
					}
					modifier = {
						factor = 0.75
						trait = is_malnourished
					}
					modifier = {
						factor = 1.5
						trait = ambitious
					}
					modifier = {
						factor = 0.85
						trait = content
					}
					modifier = {
						factor = 0.85
						check_variable = {
							which = "drinking_count"
							value = 5
						}
					}
					modifier = {
						factor = 0.75
						check_variable = {
							which = "drinking_count"
							value = 7
						}
					}
					modifier = {
						factor = 0.75
						check_variable = {
							which = "drinking_count"
							value = 10
						}
					}
					modifier = {
						factor = 0.75
						check_variable = {
							which = "drinking_count"
							value = 13
						}
					}
					modifier = {
						factor = 0.75
						check_variable = {
							which = "drinking_count"
							value = 15
						}
					}
					modifier = {
						factor = 0.75
						check_variable = {
							which = "drinking_count"
							value = 17
						}
					}
					modifier = {
						factor = 0.75
						check_variable = {
							which = "drinking_count"
							value = 20
						}
					}
					modifier = {
						factor = 0.25
						check_variable = {
							which = "drinking_count"
							value = 23
						}
					}
					modifier = {
						factor = 0.15
						check_variable = {
							which = "drinking_count"
							value = 25
						}
					}
					modifier = {
						factor = 0
						check_variable = {
							which = "drinking_count"
							value = 30
						}
					}
					if = {
						limit = {
							event_target:am_drinking_1 = { character = ROOT }
						}
						event_target:am_drinking_2 = {
							# Amazon takes drink
							character_event = { id = amazon.20 }
						}
					}
					if = {
						limit = {
							event_target:am_drinking_2 = { character = ROOT }
						}
						event_target:am_drinking_1 = {
							# Amazon takes drink
							character_event = { id = amazon.20 }
						}
					}
				}
				# Collapsed, declared victor
				10 = {
					if = {
						limit = {
							event_target:am_drinking_1 = { character = ROOT }
						}
						event_target:am_drinking_2 = {
							# Notify Winner
							character_event = { id = amazon.22 }
						}
						event_target:am_drinking_1 = {
							# Notify Loser
							character_event = { id = amazon.23 }
						}
					}
					if = {
						limit = {
							event_target:am_drinking_2 = { character = ROOT }
						}
						event_target:am_drinking_1 = {
							# Notify Winner
							character_event = { id = amazon.22 }
						}
						event_target:am_drinking_2 = {
							# Notify Loser
							character_event = { id = amazon.23 }
						}
					}
				}
			}
		}
		hidden_tooltip = {
			change_variable = {
				which = "drinking_count"
				value = 1
			}
		}
	}
}
# Amazon takes drink after opponent
character_event = {
	id = amazon.20
	desc = {
		text = EVTDESCAslizardmen54006
		trigger = {
			NOT = {
				check_variable = {
					which = "drinking_count"
					value = 5
				}
			}
		}
	}
	desc = {
		text = EVTDESCBslizardmen54006
		trigger = {
			check_variable = {
				which = "drinking_count"
				value = 5
			}
			NOT = {
				check_variable = {
					which = "drinking_count"
					value = 10
				}
			}
		}
	}
	desc = {
		text = EVTDESCCslizardmen54006
		trigger = {
			check_variable = {
				which = "drinking_count"
				value = 10
			}
			NOT = {
				check_variable = {
					which = "drinking_count"
					value = 15
				}
			}
		}
	}
	desc = {
		text = EVTDESCDslizardmen54006
		trigger = {
			check_variable = {
				which = "drinking_count"
				value = 15
			}
			NOT = {
				check_variable = {
					which = "drinking_count"
					value = 20
				}
			}
		}
	}
	picture = GFX_evt_amazon_feast

	is_triggered_only = yes

	option = {
		name = EVTOPTAslizardmen54006
		ai_chance = { factor = 95 }
		hidden_tooltip = {
			random_list = {
				# Drank fine, keep going
				85 = {
					modifier = {
						factor = 0.65
						trait = fragile
					}
					modifier = {
						factor = 0.75
						trait = weak
					}
					modifier = {
						factor = 0.85
						trait = soft
					}
					modifier = {
						factor = 1.5
						trait = hardy
					}
					modifier = {
						factor = 1.65
						trait = tough
					}
					modifier = {
						factor = 1.85
						trait = strong
					}
					modifier = {
						factor = 0.75
						trait = temperate
					}
					modifier = {
						factor = 1.15
						trait = diligent
					}
					modifier = {
						factor = 1.5
						trait = drunkard
					}
					modifier = {
						factor = 1.25
						trait = addict
					}
					modifier = {
						factor = 1.15
						trait = gluttonous
					}
					modifier = {
						factor = 1.5
						trait = is_fat
					}
					modifier = {
						factor = 0.75
						trait = is_malnourished
					}
					modifier = {
						factor = 1.5
						trait = ambitious
					}
					modifier = {
						factor = 0.85
						trait = content
					}
					modifier = {
						factor = 0.85
						check_variable = {
							which = "drinking_count"
							value = 5
						}
					}
					modifier = {
						factor = 0.75
						check_variable = {
							which = "drinking_count"
							value = 7
						}
					}
					modifier = {
						factor = 0.75
						check_variable = {
							which = "drinking_count"
							value = 10
						}
					}
					modifier = {
						factor = 0.75
						check_variable = {
							which = "drinking_count"
							value = 13
						}
					}
					modifier = {
						factor = 0.75
						check_variable = {
							which = "drinking_count"
							value = 15
						}
					}
					modifier = {
						factor = 0.75
						check_variable = {
							which = "drinking_count"
							value = 17
						}
					}
					modifier = {
						factor = 0.75
						check_variable = {
							which = "drinking_count"
							value = 20
						}
					}
					modifier = {
						factor = 0.25
						check_variable = {
							which = "drinking_count"
							value = 23
						}
					}
					modifier = {
						factor = 0.15
						check_variable = {
							which = "drinking_count"
							value = 25
						}
					}
					modifier = {
						factor = 0
						check_variable = {
							which = "drinking_count"
							value = 30
						}
					}
					if = {
						limit = {
							event_target:am_drinking_1 = { character = ROOT }
						}
						event_target:am_drinking_2 = {
							# Amazon takes drink
							character_event = { id = amazon.20 }
						}
					}
					if = {
						limit = {
							event_target:am_drinking_2 = { character = ROOT }
						}
						event_target:am_drinking_1 = {
							# Amazon takes drink
							character_event = { id = amazon.20 }
						}
					}
				}
				# Collapsed, declared victor
				15 = {
					if = {
						limit = {
							event_target:am_drinking_1 = { character = ROOT }
						}
						event_target:am_drinking_2 = {
							# Notify Winner
							character_event = { id = amazon.22 }
						}
						event_target:am_drinking_1 = {
							# Notify Loser
							character_event = { id = amazon.23 }
						}
					}
					if = {
						limit = {
							event_target:am_drinking_2 = { character = ROOT }
						}
						event_target:am_drinking_1 = {
							# Notify Winner
							character_event = { id = amazon.22 }
						}
						event_target:am_drinking_2 = {
							# Notify Loser
							character_event = { id = amazon.23 }
						}
					}
				}
			}
		}
		hidden_tooltip = {
			change_variable = {
				which = "drinking_count"
				value = 1
			}
		}
	}
	# Yield
	option = {
		name = EVTOPTBslizardmen54006
		ai_chance = {
			factor = 5
			modifier = {
				factor = 2
				trait = craven
			}
			modifier = {
				factor = 2
				check_variable = {
					which = "drinking_count"
					value = 10
				}
			}
			modifier = {
				factor = 4
				check_variable = {
					which = "drinking_count"
					value = 20
				}
			}
		}
		decadence = 1
		if = {
			limit = {
				event_target:am_drinking_1 = { character = ROOT }
			}
			event_target:am_drinking_2 = {
				# Other Amazon yields - Notify winner
				character_event = { id = amazon.21 }
			}
		}
		 if = {
			 limit = {
				 event_target:am_drinking_2 = { character = ROOT }
			 }
			event_target:am_drinking_1 = {
				# Other Amazon yields - Notify winner
				character_event = { id = amazon.21 }
			}
		}
	}
}
# Other Amazon yields - Notify winner
character_event = {
	id = amazon.21
	desc = EVTDESCslizardmen54004
	picture = GFX_evt_amazon_feast

	is_triggered_only = yes

	option = {
		name = EVTOPTAslizardmen54004
		prestige = 50
		decadence = -1
		event_target:am_drinking_1 = {
			clr_character_flag = feast_contest
		}
		event_target:am_drinking_2 = {
			clr_character_flag = feast_contest
		}
	}
}
# Other Amazon has been defeated - Notify winner
character_event = {
	id = amazon.22
	desc = EVTDESCslizardmen54005
	picture = GFX_evt_amazon_feast

	is_triggered_only = yes

	option = {
		name = EVTOPTAslizardmen54005
		prestige = 50
		decadence = -2
		hidden_tooltip = {
			random = {
				chance = 5
				add_trait = drunkard
			}
		}
		if = {
			limit = {
				check_variable = {
					which = "drinking_count"
					value = 5
				}
			}
			prestige = 25
		}
		else_if = {
			limit = {
				check_variable = {
					which = "drinking_count"
					value = 10
				}
			}
			prestige = 50
		}
		else_if = {
			limit = {
				check_variable = {
					which = "drinking_count"
					value = 15
				}
			}
			prestige = 100
		}
		else_if = {
			limit = {
				check_variable = {
					which = "drinking_count"
					value = 20
				}
			}
			decadence = -1
			prestige = 150
		}
		else = {
			prestige = 20
		}
		event_target:am_drinking_1 = {
			clr_character_flag = feast_contest
		}
		event_target:am_drinking_2 = {
			clr_character_flag = feast_contest
		}
	}
}
# You lost
character_event = {
	id = amazon.23
	desc = EVTDESCslizardmen54007
	picture = GFX_evt_amazon_feast

	is_triggered_only = yes

	option = {
		name = EVTOPTAslizardmen54007
		decadence = 1
		hidden_tooltip = {
			random = {
				chance = 5
				add_trait = drunkard
			}
		}
		if = {
			limit = {
				check_variable = {
					which = "drinking_count"
					value = 5
				}
			}
			prestige = 25
		}
		else_if = {
			limit = {
				check_variable = {
					which = "drinking_count"
					value = 10
				}
			}
			prestige = 50
		}
		else_if = {
			limit = {
				check_variable = {
					which = "drinking_count"
					value = 15
				}
			}
			prestige = 100
		}
		else_if = {
			limit = {
				check_variable = {
					which = "drinking_count"
					value = 20
				}
			}
			decadence = -1
			prestige = 150
		}
		else = {
			prestige = 20
		}
		event_target:am_drinking_1 = {
			clr_character_flag = feast_contest
		}
		event_target:am_drinking_2 = {
			clr_character_flag = feast_contest
		}
	}
}

#######################

# Drinking a lot during the festival
character_event = {
	id = amazon.24
	desc = EVTDESCslizardmen53001
	picture = GFX_evt_amazon_feast

	is_triggered_only = yes

	option = {
		name = EVTOPTAslizardmen53001
		decadence = 2
		random = {
			chance = 5
			add_trait = drunkard
		}
	}
}
# Taking herbs during the festival and puking
character_event = {
	id = amazon.25
	desc = EVTDESCslizardmen53003
	picture = GFX_evt_amazon_feast

	is_triggered_only = yes

	option = {
		name = EVTOPTAslizardmen53003
		decadence = 2
		random = {
			chance = 5
			add_trait = addict
		}
	}
}
# Taking herbs during the festival and having a vision
character_event = {
	id = amazon.26
	desc = EVTDESCslizardmen53004
	picture = GFX_evt_amazon_feast

	is_triggered_only = yes

	option = {
		name = EVTOPTAslizardmen53004
		decadence = -2
		random = {
			chance = 5
			add_trait = addict
		}
	}
}
# Had some good time with your Amazon Sisters while drunk
character_event = {
	id = amazon.27
	desc = EVTDESCslizardmen53005
	picture = GFX_evt_amazon_feast

	is_triggered_only = yes

	option = {
		name = EVTOPTAslizardmen53005
		decadence = -1
		prestige = 50
	}
}
# Dancing around the fire
character_event = {
	id = amazon.28
	desc = EVTDESCslizardmen53006
	picture = GFX_evt_amazon_feast

	is_triggered_only = yes

	option = {
		name = EVTOPTAslizardmen53006
		piety = 10
	}
}
# Passing the Snake
long_character_event = {
	id = amazon.29
	desc = EVTDESCslizardmen53007
	picture = GFX_evt_amazon_snake

	is_triggered_only = yes

	option = {
		name = EVTOPTAslizardmen53007
		decadence = -3
		piety = 75
	}
}

#######################

# Mud Fighting
character_event = {
	id = amazon.30
	hide_window = yes

	is_triggered_only = yes

	immediate = {
		save_event_target_as = am_mud_1
		if = {
			limit = {
				any_courtier = {
					is_adult = yes
					is_female = yes
				}
			}
			random_courtier = {
				limit = {
					is_adult = yes
					is_female = yes
				}
				# Second Amazon: Accept brawling?
				character_event = { id = amazon.31 }
			}
		}
		clr_character_flag = start_feast_contest
	}

	option = {
		name = OK
	}
}
# Second Amazon: Accept brawling?
character_event = {
	id = amazon.31
	desc = EVTDESCslizardmen56001
	picture = GFX_evt_amazon_feast

	is_triggered_only = yes

	option = {
		name = EVTOPTAslizardmen56001
		ai_chance = {
			factor = 75
		}
		save_event_target_as = am_mud_2
		FROM = {
			# Second Amazon responds
			character_event = { id = amazon.33 }
		}
	}
	option = {
		name = EVTOPTBslizardmen56001
		ai_chance = {
			factor = 25
			modifier = {
				factor = 2
				trait = craven
			}
		}
		decadence = 3
		FROM = {
			# Second Amazon is too cowardly
			character_event = { id = amazon.32 }
		}
	}
}
# Second Amazon is too cowardly
character_event = {
	id = amazon.32
	desc = EVTDESCslizardmen56002
	picture = GFX_evt_amazon_feast

	is_triggered_only = yes

	option = {
		name = EVTOPTAslizardmen56002
		prestige = 25
		clr_character_flag = feast_contest
		FROM = {
			clr_character_flag = feast_contest
		}
	}
}
# Second Amazon responds
character_event = {
	id = amazon.33
	desc = EVTDESCslizardmen56102
	picture = GFX_evt_amazon_feast

	is_triggered_only = yes

	option = {
		name = EVTOPTAslizardmen56102
		event_target:am_mud_2 = {
			character_event = { id = amazon.34 }
		}
	}
}
# Hidden fighting event to determine winner
character_event = {
	id = amazon.34
	hide_window = yes

	is_triggered_only = yes

	immediate = {
		hidden_tooltip = {
			random_list = {
				# First contestant wins
				50 = {
					modifier = {
						factor = 0.65
						event_target:am_mud_1 = { trait = fragile }
					}
					modifier = {
						factor = 0.75
						event_target:am_mud_1 = { trait = weak }
					}
					modifier = {
						factor = 0.85
						event_target:am_mud_1 = { trait = soft }
					}
					modifier = {
						factor = 1.25
						event_target:am_mud_1 = { trait = hardy }
					}
					modifier = {
						factor = 1.5
						event_target:am_mud_1 = { trait = tough }
					}
					modifier = {
						factor = 1.75
						event_target:am_mud_1 = { trait = strong }
					}
					modifier = {
						factor = 0.5
						event_target:am_mud_1 = { trait = craven }
					}
					modifier = {
						factor = 1.15
						event_target:am_mud_1 = { trait = diligent }
					}
					modifier = {
						factor = 0.85
						event_target:am_mud_1 = { trait = drunkard }
					}
					modifier = {
						factor = 0.85
						event_target:am_mud_1 = { trait = addict }
					}
					modifier = {
						factor = 1.75
						event_target:am_mud_1 = { trait = brave }
					}
					modifier = {
						factor = 0.85
						event_target:am_mud_1 = { trait = is_fat }
					}
					modifier = {
						factor = 0.85
						event_target:am_mud_1 = { trait = is_malnourished }
					}
					modifier = {
						factor = 1.5
						event_target:am_mud_1 = { trait = ambitious }
					}
					modifier = {
						factor = 0.85
						event_target:am_mud_1 = { trait = content }
					}
					modifier = {
						factor = 1.85
						event_target:am_mud_1 = { trait = duelist }
					}
					modifier = {
						factor = 1.5
						event_target:am_mud_1 = { trait = hunter }
					}
					modifier = {
						factor = 0.5
						event_target:am_mud_1 = { trait = wounded }
					}
					modifier = {
						factor = 0.25
						event_target:am_mud_1 = { trait = maimed }
					}
					modifier = {
						factor = 0.75
						event_target:am_mud_1 = { trait = infirm }
					}
					event_target:am_mud_1 = {
						# Other Amazon has been defeated - Notify winner
						long_character_event = { id = amazon.35 }
					}
				}
				# Second contestant wins
				50 = {
					modifier = {
						factor = 0.65
						event_target:am_mud_2 = { trait = fragile }
					}
					modifier = {
						factor = 0.75
						event_target:am_mud_2 = { trait = weak }
					}
					modifier = {
						factor = 0.85
						event_target:am_mud_2 = { trait = soft }
					}
					modifier = {
						factor = 1.25
						event_target:am_mud_2 = { trait = hardy }
					}
					modifier = {
						factor = 1.5
						event_target:am_mud_2 = { trait = tough }
					}
					modifier = {
						factor = 1.75
						event_target:am_mud_2 = { trait = strong }
					}
					modifier = {
						factor = 0.5
						event_target:am_mud_2 = { trait = craven }
					}
					modifier = {
						factor = 1.15
						event_target:am_mud_2 = { trait = diligent }
					}
					modifier = {
						factor = 0.85
						event_target:am_mud_2 = { trait = drunkard }
					}
					modifier = {
						factor = 0.85
						event_target:am_mud_2 = { trait = addict }
					}
					modifier = {
						factor = 1.75
						event_target:am_mud_2 = { trait = brave }
					}
					modifier = {
						factor = 0.85
						event_target:am_mud_2 = { trait = is_fat }
					}
					modifier = {
						factor = 0.85
						event_target:am_mud_2 = { trait = is_malnourished }
					}
					modifier = {
						factor = 1.5
						event_target:am_mud_2 = { trait = ambitious }
					}
					modifier = {
						factor = 0.85
						event_target:am_mud_2 = { trait = content }
					}
					modifier = {
						factor = 1.85
						event_target:am_mud_2 = { trait = duelist }
					}
					modifier = {
						factor = 1.5
						event_target:am_mud_2 = { trait = hunter }
					}
					modifier = {
						factor = 0.5
						event_target:am_mud_2 = { trait = wounded }
					}
					modifier = {
						factor = 0.25
						event_target:am_mud_2 = { trait = maimed }
					}
					modifier = {
						factor = 0.75
						event_target:am_mud_2 = { trait = infirm }
					}
					event_target:am_mud_2 = {
						# Other Amazon has been defeated - Notify winner
						long_character_event = { id = amazon.35 }
					}
				}
			}
		}
	}

	option = {
		name = OK
	}
}
# Other Amazon has been defeated - Notify winner
long_character_event = {
	id = amazon.35
	desc = EVTDESCslizardmen56004
	picture = GFX_evt_amazon_feast

	is_triggered_only = yes

	option = {
		name = EVTOPTAslizardmen56004
		prestige = 150
		decadence = -2
		hidden_tooltip = {
			random = {
				chance = 5
				add_trait = brave
			}
		}
		event_target:am_mud_1 = {
			clr_character_flag = feast_contest
		}
		event_target:am_mud_2 = {
			clr_character_flag = feast_contest
		}
		if = {
			limit = {
				event_target:am_mud_1 = { character = ROOT }
			}
			event_target:am_mud_2 = {
				# Notify Loser
				long_character_event = { id = amazon.36 }
			}
		}
		if = {
			limit = {
				event_target:am_mud_2 = { character = ROOT }
			}
			event_target:am_mud_1 = {
				# Notify Loser
				long_character_event = { id = amazon.36 }
			}
		}
	}
}
# Notify Loser
long_character_event = {
	id = amazon.36
	desc = EVTDESCslizardmen56005
	picture = GFX_evt_amazon_feast

	is_triggered_only = yes

	immediate = {
		random = {
			chance = 25
			add_trait = wounded
		}
	}

	option = {
		name = EVTOPTAslizardmen56005
		prestige = -50
		decadence = 2
		event_target:am_mud_1 = {
			clr_character_flag = feast_contest
		}
		event_target:am_mud_2 = {
			clr_character_flag = feast_contest
		}
	}
}

#######################

# Lesbian love event
character_event = {
	id = amazon.37
	hide_window = yes

	trigger = { trait = creature_amazon
			trait = homosexual
		has_character_flag = holding_amazon_ritual }

	is_triggered_only = yes

	immediate = {
		if = {
			limit = {
				any_courtier = {
					is_adult = yes
					is_female = yes
					NOT = { is_close_relative = ROOT }
				}
			}
			random_courtier = {
				limit = {
					is_adult = yes
					is_female = yes
					NOT = { is_close_relative = ROOT }
				}
				# Scope courtier for love event
				long_character_event = { id = amazon.38 }
			}
		}
	}

	option = {
		name = OK
	}
}
# Scope courtier for love event
long_character_event = {
	id = amazon.38
	desc = EVTDESCslizardmen57001
	picture = GFX_evt_amazon_feast

	is_triggered_only = yes

	option = {
		name = EVTOPTAslizardmen57001
		ai_chance = { factor = 5 }
		trigger = {
			NOT = {
				any_lover = {
					is_female = yes
					count = 3
				}
			}
		}
		# A drunken Amazon kisses you
		long_character_event = { id = amazon.39 }
	}
	option = {
		name = EVTOPTBslizardmen57001
		ai_chance = { factor = 0 }
	}
}
# A drunken Amazon kisses you
long_character_event = {
	id = amazon.39
	desc = EVTDESCslizardmen57002
	picture = GFX_evt_amazon_feast

	is_triggered_only = yes

	option = {
		name = EVTOPTAslizardmen57002
		ai_chance = { factor = 0 }
		trigger = {
			NOT = {
				any_lover = {
					is_female = yes
					count = 3
				}
			}
		}
		add_lover = FROM
		FROM = {
			# New Lover
			character_event = { id = amazon.40 }
		}
	}
	option = {
		name = EVTOPTBslizardmen57002
		ai_chance = { factor = 5 }
		FROM = {
			# Just one night
			character_event = { id = amazon.41 }
		}
	}
}
# New Lover
character_event = {
	id = amazon.40
	desc = EVTDESCslizardmen57003
	picture = GFX_evt_amazon_feast

	is_triggered_only = yes

	option = {
		name = EVTOPTAslizardmen57003
		ai_chance = { factor = 1 }
	}
}
# Just one night
character_event = {
	id = amazon.41
	desc = EVTDESCslizardmen57004
	picture = GFX_evt_amazon_feast

	is_triggered_only = yes

	option = {
		name = EVTOPTAslizardmen57004
		ai_chance = { factor = 1 }
	}
}

#######################

# Amazon Brawling Events

#######################

# Notify Host the event will soon be prepared
character_event = {
	id = amazon.42
	desc = EVTDESCslizardmen61
	picture = GFX_evt_amazon

	is_triggered_only = yes

	option = {
		name = EVTOPTAslizardmen61
		hidden_tooltip = {
			# The Tournament is about to start
			long_character_event = {
				id = amazon.47
				days = 10
				random = 10
			}
		}
	}
}
# General cleanup event to remove flags and other stuff after the tournament has been completed
character_event = {
	id = amazon.43
	desc = EVTDESCslizardmen61900
	picture = GFX_evt_amazon

	is_triggered_only = yes

	option = {
		name = EVTOPTAslizardmen61900
		remove_trait = questing
		hidden_tooltip = {
			set_variable = {
				which = "brawl_player"
				value = 0
			}
			diplomatic_immunity = no
			clr_character_flag = do_not_disturb
			clr_character_flag = brawling_participant
			clr_character_flag = brawling_host
			clr_character_flag = brawling_loser
			clr_character_flag = am_fight_1
			clr_character_flag = am_fight_2
			clr_character_flag = am_fight_3
			clr_character_flag = am_fight_4
			clr_character_flag = am_fight_5
			clr_character_flag = am_fight_6
			clr_character_flag = am_fight_7
			clr_character_flag = am_fight_8
			clr_character_flag = am_fight_9
			clr_character_flag = am_fight_10
			clr_character_flag = am_fight_11
		}
	}
}
# Invitation to Brawling contest
letter_event = {
	id = amazon.44
	desc = EVTDESCslizardmen61001

	is_triggered_only = yes

	option = {
		name = EVTOPTAslizardmen61001
		ai_chance = {
			factor = 70
		}
		decadence = -1
		set_character_flag = brawling_participant
		hidden_tooltip = {
			FROM = {
				# Notify Host guest will participate
				letter_event = {
					id = amazon.45
					days = 1
					random = 1
				}
			}
		}
	}

	option = {
		name = EVTOPTBslizardmen61001
		ai_chance = {
			factor = 30
			modifier = {
				factor = 0.5
				trait = ambitious
			}
			modifier = {
				factor = 0.5
				trait = brave
			}
			modifier = {
				factor = 0.75
				trait = wroth
			}
			modifier = {
				factor = 0.75
				trait = proud
			}
			modifier = {
				factor = 2
				trait = wounded
			}
			modifier = {
				factor = 2.5
				trait = maimed
			}
			modifier = {
				factor = 2.5
				trait = blinded
			}
			modifier = {
				factor = 2
				trait = craven
			}
			modifier = {
				factor = 0.25
				NOT = {
					FROM = {
						check_variable = {
							which = "brawl_player"
							value = 3
						}
					}
				}
			}
		}
		decadence = 1
		hidden_tooltip = {
			FROM = {
				# Notify Host guest will not participate
				letter_event = {
					id = amazon.46
					days = 1
					random = 1
				}
			}
		}
	}
}
# Notify Host guest will participate
letter_event = {
	id = amazon.45
	desc = EVTDESCslizardmen61002

	is_triggered_only = yes

	option = {
		name = EVTOPTAslizardmen61002
		hidden_tooltip = {
			change_variable = {
				which = "brawl_player"
				value = 1
			}
		}
	}
}
# Notify Host guest will not participate
letter_event = {
	id = amazon.46
	desc = EVTDESCslizardmen61003

	is_triggered_only = yes

	option = {
		name = EVTOPTAslizardmen61003
	}
}
# The Tournament is about to start
long_character_event = {
	id = amazon.47
	picture = GFX_evt_amazon_fighter
	# Make sure there's a bare minimum of challengers to start
	desc = {
		text = EVTDESCAslizardmen62
		trigger = {
			check_variable = {
				which = "brawl_player"
				value = 3
			}
		}
	}
	# Make sure there's a bare minimum of challengers to start
	desc = {
		text = EVTDESCBslizardmen62
		trigger = {
			NOT = {
				check_variable = {
					which = "brawl_player"
					value = 3
				}
			}
		}
	}

	is_triggered_only = yes

	option = {
		name = EVTOPTAslizardmen62
		trigger = {
			check_variable = {
				which = "brawl_player"
				value = 3
			}
		}
		ai_chance = { factor = 1 }
		add_trait = questing
		hidden_tooltip = {
			set_variable = {
				which = "brawl_player"
				value = 0
			}
			any_realm_character = {
				limit = {
					NOT = { has_character_flag = brawling_host }
					has_character_flag = brawling_participant
				}
				#The Tournament is about to start - Notify other Amazons
				long_character_event = { id = amazon.48 }
			}
			# Brawl host starts with first fight
			character_event = { id = amazon.49 }
		}
	}
	option = {
		name = EVTOPTBslizardmen62
		trigger = {
			NOT = {
				check_variable = {
					which = "brawl_player"
					value = 3
				}
			}
		}
		ai_chance = { factor = 1 }
		prestige = -250
		hidden_tooltip = {
			# General cleanup event to remove flags and other stuff after the tournament has been completed
			character_event = { id = amazon.43 }
		}
		hidden_tooltip = {
			set_variable = {
				which = "brawl_player"
				value = 0
			}
			any_realm_character = {
				limit = {
					NOT = { has_character_flag = brawling_host }
					has_character_flag = brawling_participant
				}
				# Not enough challengers, the tournament is cancelled
				character_event = {
					id = amazon.52
					days = 7
					random = 10
				}
			}
		}
	}
}
# The Tournament is about to start - Notify other Amazons
long_character_event = {
	id = amazon.48
	desc = EVTDESCslizardmen62001
	picture = GFX_evt_amazon_fighter

	is_triggered_only = yes

	option = {
		name = EVTOPTAslizardmen62001
		add_trait = questing
	}
}
# Brawl host starts with first fight
character_event = {
	id = amazon.49
	desc = EVTDESCslizardmen62002
	picture = GFX_evt_amazon_fighter

	is_triggered_only = yes

	option = {
		name = EVTOPTAslizardmen62002
		hidden_tooltip = {
			random_realm_character = {
				limit = {
					NOT = { character = ROOT }
					has_character_flag = brawling_participant
				}
				# Second Amazon notified
				character_event = { id = amazon.50 }
			}
		}
	}
}
# Second Amazon notified
character_event = {
	id = amazon.50
	desc = EVTDESCslizardmen62003
	picture = GFX_evt_amazon_fighter

	is_triggered_only = yes

	option = {
		name = EVTOPTAslizardmen62003
		hidden_tooltip = {
			FROM = {
				# First Amazon notified of who is the second Amazon
				character_event = { id = amazon.51 }
			}
		}
	}
}
# First Amazon notified of who is the second Amazon
character_event = {
	id = amazon.51
	desc = EVTDESCslizardmen62004
	picture = GFX_evt_amazon_fighter

	is_triggered_only = yes

	option = {
		name = EVTOPTAslizardmen62004
		hidden_tooltip = {
			FROM = {
				# Hidden fighting event to determine winner
				character_event = { id = amazon.53 }
			}
		}
	}
}
# Not enough challengers, the tournament is cancelled
character_event = {
	id = amazon.52
	desc = EVTDESCslizardmen62005
	picture = GFX_evt_amazon_fighter

	is_triggered_only = yes

	option = {
		name = EVTOPTAslizardmen62005
		decadence = 5
		hidden_tooltip = {
			# General cleanup event to remove flags and other stuff after the tournament has been completed
			character_event = { id = amazon.43 }
		}
	}
}
# Hidden fighting event to determine winner
character_event = {
	id = amazon.53
	hide_window = yes

	is_triggered_only = yes

	immediate = {
		save_event_target_as = am_brawler_2
		FROM = {
			save_event_target_as = am_brawler_1
		}
		# To give random flavour text to the fights
		hidden_tooltip = {
			random_list = {
				15 = {
					set_character_flag = am_fight_1
					FROM = { set_character_flag = am_fight_1 }
				}
				15 = {
					set_character_flag = am_fight_2
					FROM = { set_character_flag = am_fight_2 }
				}
				15 = {
					set_character_flag = am_fight_3
					FROM = { set_character_flag = am_fight_3 }
				}
				15 = {
					set_character_flag = am_fight_4
					FROM = { set_character_flag = am_fight_4 }
				}
				15 = {
					set_character_flag = am_fight_5
					FROM = { set_character_flag = am_fight_5 }
				}
				15 = {
					set_character_flag = am_fight_6
					FROM = { set_character_flag = am_fight_6 }
				}
				10 = {
					set_character_flag = am_fight_7
					FROM = { set_character_flag = am_fight_7 }
				}
				10 = {
					set_character_flag = am_fight_8
					FROM = { set_character_flag = am_fight_8 }
				}
				10 = {
					set_character_flag = am_fight_9
					FROM = { set_character_flag = am_fight_9 }
				}
				10 = {
					set_character_flag = am_fight_10
					FROM = { set_character_flag = am_fight_10 }
				}
				10 = {
					set_character_flag = am_fight_11
					FROM = { set_character_flag = am_fight_11 }
				}
			}
			# Determine Winner
			random_list = {
				# First contestant wins
				50 = {
					modifier = {
						factor = 0.65
						event_target:am_brawler_1 = { trait = fragile }
					}
					modifier = {
						factor = 0.75
						event_target:am_brawler_1 = { trait = weak }
					}
					modifier = {
						factor = 0.85
						event_target:am_brawler_1 = { trait = soft }
					}
					modifier = {
						factor = 1.25
						event_target:am_brawler_1 = { trait = hardy }
					}
					modifier = {
						factor = 1.5
						event_target:am_brawler_1 = { trait = tough }
					}
					modifier = {
						factor = 1.75
						event_target:am_brawler_1 = { trait = strong }
					}
					modifier = {
						factor = 0.5
						event_target:am_brawler_1 = { trait = craven }
					}
					modifier = {
						factor = 1.15
						event_target:am_brawler_1 = { trait = diligent }
					}
					modifier = {
						factor = 0.85
						event_target:am_brawler_1 = { trait = drunkard }
					}
					modifier = {
						factor = 0.85
						event_target:am_brawler_1 = { trait = addict }
					}
					modifier = {
						factor = 1.75
						event_target:am_brawler_1 = { trait = brave }
					}
					modifier = {
						factor = 0.85
						event_target:am_brawler_1 = { trait = is_fat }
					}
					modifier = {
						factor = 0.85
						event_target:am_brawler_1 = { trait = is_malnourished }
					}
					modifier = {
						factor = 1.5
						event_target:am_brawler_1 = { trait = ambitious }
					}
					modifier = {
						factor = 0.85
						event_target:am_brawler_1 = { trait = content }
					}
					modifier = {
						factor = 1.85
						event_target:am_brawler_1 = { trait = duelist }
					}
					modifier = {
						factor = 1.5
						event_target:am_brawler_1 = { trait = hunter }
					}
					modifier = {
						factor = 0.5
						event_target:am_brawler_1 = { trait = wounded }
					}
					modifier = {
						factor = 0.25
						event_target:am_brawler_1 = { trait = maimed }
					}
					modifier = {
						factor = 0.75
						event_target:am_brawler_1 = { trait = infirm }
					}
					modifier = {
						factor = 0.25
						event_target:am_brawler_1 = { trait = blinded }
					}
					modifier = {
						factor = 1.25
						event_target:am_brawler_1 = { trait = tall }
					}
					modifier = {
						factor = 0.5
						event_target:am_brawler_1 = { trait = dwarf }
					}
					modifier = {
						factor = 0.5
						event_target:am_brawler_1 = { trait = hunchback }
					}
					modifier = {
						factor = 0.75
						event_target:am_brawler_1 = { trait = clubfooted }
					}
					modifier = {
						factor = 0.9
						event_target:am_brawler_1 = { NOT = { age = 18 } }
					}
					modifier = {
						factor = 1.25
						event_target:am_brawler_1 = { martial = 15 }
					}
					modifier = {
						factor = 0.85
						event_target:am_brawler_1 = { trait = stressed }
					}
					modifier = {
						factor = 0.75
						event_target:am_brawler_1 = { trait = depressed }
					}
					modifier = {
						factor = 0.95
						event_target:am_brawler_1 = { trait = dim }
					}
					modifier = {
						factor = 0.9
						event_target:am_brawler_1 = { trait = dumb }
					}
					modifier = {
						factor = 0.85
						event_target:am_brawler_1 = { trait = slow }
					}
					modifier = {
						factor = 0.8
						event_target:am_brawler_1 = { trait = idiot }
					}
					modifier = {
						factor = 0.75
						event_target:am_brawler_1 = { trait = imbecile }
					}
					modifier = {
						factor = 1.15
						event_target:am_brawler_1 = { trait = bright }
					}
					modifier = {
						factor = 1.2
						event_target:am_brawler_1 = { trait = smart }
					}
					modifier = {
						factor = 1.25
						event_target:am_brawler_1 = { trait = quick }
					}
					modifier = {
						factor = 1.3
						event_target:am_brawler_1 = { trait = brilliant }
					}
					modifier = {
						factor = 1.35
						event_target:am_brawler_1 = { trait = genius }
					}
					modifier = {
						factor = 0.85
						event_target:am_brawler_1 = { trait = slothful }
					}
					modifier = {
						factor = 0.9
						event_target:am_brawler_1 = { trait = kind }
					}
					modifier = {
						factor = 0.9
						event_target:am_brawler_1 = { trait = humble }
					}
					modifier = {
						factor = 0.9
						event_target:am_brawler_1 = { trait = shy }
					}
					modifier = {
						factor = 1.1
						event_target:am_brawler_1 = { trait = misguided_warrior }
					}
					modifier = {
						factor = 1.35
						event_target:am_brawler_1 = { trait = tough_soldier }
					}
					modifier = {
						factor = 1.5
						event_target:am_brawler_1 = { trait = skilled_tactician }
					}
					modifier = {
						factor = 1.75
						event_target:am_brawler_1 = { trait = brilliant_strategist }
					}
					modifier = {
						factor = 1.35
						event_target:am_brawler_1 = { trait = zealous }
					}
					modifier = {
						factor = 1.15
						event_target:am_brawler_1 = { trait = cruel }
					}
					modifier = {
						factor = 0.95
						event_target:am_brawler_1 = { trait = just }
					}
					modifier = {
						factor = 0.85
						event_target:am_brawler_1 = { trait = complacent }
					}
					modifier = {
						factor = 0.9
						event_target:am_brawler_1 = { any_child = { count = 3 } }
					}
					modifier = {
						factor = 0.9
						event_target:am_brawler_1 = { any_child = { count = 5 } }
					}
					modifier = {
						factor = 1.15
						event_target:am_brawler_1 = { trait = deceitful }
					}
					modifier = {
						factor = 0.95
						event_target:am_brawler_1 = { trait = honest }
					}
					modifier = {
						factor = 1.15
						event_target:am_brawler_1 = { trait = paranoid }
					}
					modifier = {
						factor = 0.95
						event_target:am_brawler_1 = { trait = trusting }
					}
					modifier = {
						factor = 0.85
						event_target:am_brawler_1 = { trait = ill }
					}
					modifier = {
						factor = 0.5
						event_target:am_brawler_1 = { trait = has_nurgles_rot }
					}
					modifier = {
						factor = 1.25
						event_target:am_brawler_1 = { trait = aggressive_leader }
					}
					modifier = {
						factor = 1.15
						event_target:am_brawler_1 = { trait = experimenter }
					}
					modifier = {
						factor = 1.35
						event_target:am_brawler_1 = { trait = trickster }
					}
					modifier = {
						factor = 1.15
						event_target:am_brawler_1 = { trait = lunatic_1 }
					}
					modifier = {
						factor = 0.95
						event_target:am_brawler_1 = { trait = lunatic_2 }
					}
					modifier = {
						factor = 0.85
						event_target:am_brawler_1 = { trait = lunatic_3 }
					}
					modifier = {
						factor = 0.75
						event_target:am_brawler_1 = { trait = disfigured }
					}
					modifier = {
						factor = 1.65
						event_target:am_brawler_1 = {
							age = 150
							trait = immortal
						}
					}
					modifier = {
						factor = 0.5
						event_target:am_brawler_1 = {
							age = 40
							NOT = { trait = immortal }
						}
					}
					modifier = {
						factor = 0.95
						event_target:am_brawler_1 = { trait = wroth }
					}
					modifier = {
						factor = 1.15
						event_target:am_brawler_1 = { trait = patient }
					}
					modifier = {
						factor = 1.15
						event_target:am_brawler_1 = { trait = strategist }
					}
					modifier = {
						factor = 1.15
						event_target:am_brawler_1 = {
							OR = {
								trait = amateurish_plotter
								trait = flamboyant_schemer
								trait = intricate_webweaver
								trait = elusive_shadow
							}
						}
					}
					modifier = {
						factor = 0.8
						event_target:am_brawler_1 = {
							OR = {
								trait = naive_appeaser
								trait = underhanded_rogue
								trait = charismatic_negotiator
								trait = grey_eminence
							}
						}
					}
					modifier = {
						factor = 0.9
						event_target:am_brawler_1 = {
							OR = {
								trait = indulgent_wastrel
								trait = thrifty_clerk
								trait = fortune_builder
								trait = midas_touched
							}
						}
					}
					event_target:am_brawler_1 = {
						# Winning Brawler event
						long_character_event = { id = amazon.54 }
					}
				}
				# Second contestant wins
				50 = {
					modifier = {
						factor = 0.65
						event_target:am_brawler_2 = { trait = fragile }
					}
					modifier = {
						factor = 0.75
						event_target:am_brawler_2 = { trait = weak }
					}
					modifier = {
						factor = 0.85
						event_target:am_brawler_2 = { trait = soft }
					}
					modifier = {
						factor = 1.25
						event_target:am_brawler_2 = { trait = hardy }
					}
					modifier = {
						factor = 1.5
						event_target:am_brawler_2 = { trait = tough }
					}
					modifier = {
						factor = 1.75
						event_target:am_brawler_2 = { trait = strong }
					}
					modifier = {
						factor = 0.5
						event_target:am_brawler_2 = { trait = craven }
					}
					modifier = {
						factor = 1.15
						event_target:am_brawler_2 = { trait = diligent }
					}
					modifier = {
						factor = 0.85
						event_target:am_brawler_2 = { trait = drunkard }
					}
					modifier = {
						factor = 0.85
						event_target:am_brawler_2 = { trait = addict }
					}
					modifier = {
						factor = 1.75
						event_target:am_brawler_2 = { trait = brave }
					}
					modifier = {
						factor = 0.85
						event_target:am_brawler_2 = { trait = is_fat }
					}
					modifier = {
						factor = 0.85
						event_target:am_brawler_2 = { trait = is_malnourished }
					}
					modifier = {
						factor = 1.5
						event_target:am_brawler_2 = { trait = ambitious }
					}
					modifier = {
						factor = 0.85
						event_target:am_brawler_2 = { trait = content }
					}
					modifier = {
						factor = 1.85
						event_target:am_brawler_2 = { trait = duelist }
					}
					modifier = {
						factor = 1.5
						event_target:am_brawler_2 = { trait = hunter }
					}
					modifier = {
						factor = 0.5
						event_target:am_brawler_2 = { trait = wounded }
					}
					modifier = {
						factor = 0.25
						event_target:am_brawler_2 = { trait = maimed }
					}
					modifier = {
						factor = 0.75
						event_target:am_brawler_2 = { trait = infirm }
					}
					modifier = {
						factor = 0.25
						event_target:am_brawler_2 = { trait = blinded }
					}
					modifier = {
						factor = 1.25
						event_target:am_brawler_2 = { trait = tall }
					}
					modifier = {
						factor = 0.5
						event_target:am_brawler_2 = { trait = dwarf }
					}
					modifier = {
						factor = 0.5
						event_target:am_brawler_2 = { trait = hunchback }
					}
					modifier = {
						factor = 0.75
						event_target:am_brawler_2 = { trait = clubfooted }
					}
					modifier = {
						factor = 0.9
						event_target:am_brawler_2 = { NOT = { age = 18 } }
					}
					modifier = {
						factor = 1.25
						event_target:am_brawler_2 = { martial = 15 }
					}
					modifier = {
						factor = 0.85
						event_target:am_brawler_2 = { trait = stressed }
					}
					modifier = {
						factor = 0.75
						event_target:am_brawler_2 = { trait = depressed }
					}
					modifier = {
						factor = 0.95
						event_target:am_brawler_2 = { trait = dim }
					}
					modifier = {
						factor = 0.9
						event_target:am_brawler_2 = { trait = dumb }
					}
					modifier = {
						factor = 0.85
						event_target:am_brawler_2 = { trait = slow }
					}
					modifier = {
						factor = 0.8
						event_target:am_brawler_2 = { trait = idiot }
					}
					modifier = {
						factor = 0.75
						event_target:am_brawler_2 = { trait = imbecile }
					}
					modifier = {
						factor = 1.15
						event_target:am_brawler_2 = { trait = bright }
					}
					modifier = {
						factor = 1.2
						event_target:am_brawler_2 = { trait = smart }
					}
					modifier = {
						factor = 1.25
						event_target:am_brawler_2 = { trait = quick }
					}
					modifier = {
						factor = 1.3
						event_target:am_brawler_2 = { trait = brilliant }
					}
					modifier = {
						factor = 1.35
						event_target:am_brawler_2 = { trait = genius }
					}
					modifier = {
						factor = 0.85
						event_target:am_brawler_2 = { trait = slothful }
					}
					modifier = {
						factor = 0.9
						event_target:am_brawler_2 = { trait = kind }
					}
					modifier = {
						factor = 0.9
						event_target:am_brawler_2 = { trait = humble }
					}
					modifier = {
						factor = 0.9
						event_target:am_brawler_2 = { trait = shy }
					}
					modifier = {
						factor = 1.1
						event_target:am_brawler_2 = { trait = misguided_warrior }
					}
					modifier = {
						factor = 1.35
						event_target:am_brawler_2 = { trait = tough_soldier }
					}
					modifier = {
						factor = 1.5
						event_target:am_brawler_2 = { trait = skilled_tactician }
					}
					modifier = {
						factor = 1.75
						event_target:am_brawler_2 = { trait = brilliant_strategist }
					}
					modifier = {
						factor = 1.35
						event_target:am_brawler_2 = { trait = zealous }
					}
					modifier = {
						factor = 1.15
						event_target:am_brawler_2 = { trait = cruel }
					}
					modifier = {
						factor = 0.95
						event_target:am_brawler_2 = { trait = just }
					}
					modifier = {
						factor = 0.85
						event_target:am_brawler_2 = { trait = complacent }
					}
					modifier = {
						factor = 0.9
						event_target:am_brawler_2 = { any_child = { count = 3 } }
					}
					modifier = {
						factor = 0.9
						event_target:am_brawler_2 = { any_child = { count = 5 } }
					}
					modifier = {
						factor = 1.15
						event_target:am_brawler_2 = { trait = deceitful }
					}
					modifier = {
						factor = 0.95
						event_target:am_brawler_2 = { trait = honest }
					}
					modifier = {
						factor = 1.15
						event_target:am_brawler_2 = { trait = paranoid }
					}
					modifier = {
						factor = 0.95
						event_target:am_brawler_2 = { trait = trusting }
					}
					modifier = {
						factor = 0.85
						event_target:am_brawler_2 = { trait = ill }
					}
					modifier = {
						factor = 0.5
						event_target:am_brawler_2 = { trait = has_nurgles_rot }
					}
					modifier = {
						factor = 1.25
						event_target:am_brawler_2 = { trait = aggressive_leader }
					}
					modifier = {
						factor = 1.15
						event_target:am_brawler_2 = { trait = experimenter }
					}
					modifier = {
						factor = 1.35
						event_target:am_brawler_2 = { trait = trickster }
					}
					modifier = {
						factor = 1.15
						event_target:am_brawler_2 = { trait = lunatic_1 }
					}
					modifier = {
						factor = 0.95
						event_target:am_brawler_2 = { trait = lunatic_2 }
					}
					modifier = {
						factor = 0.85
						event_target:am_brawler_2 = { trait = lunatic_3 }
					}
					modifier = {
						factor = 0.75
						event_target:am_brawler_2 = { trait = disfigured }
					}
					modifier = {
						factor = 1.65
						event_target:am_brawler_2 = {
							age = 150
							trait = immortal
						}
					}
					modifier = {
						factor = 0.5
						event_target:am_brawler_2 = {
							age = 40
							NOT = { trait = immortal }
						}
					}
					modifier = {
						factor = 0.95
						event_target:am_brawler_2 = { trait = wroth }
					}
					modifier = {
						factor = 1.15
						event_target:am_brawler_2 = { trait = patient }
					}
					modifier = {
						factor = 1.15
						event_target:am_brawler_2 = { trait = strategist }
					}
					modifier = {
						factor = 1.15
						event_target:am_brawler_2 = {
							OR = {
								trait = amateurish_plotter
								trait = flamboyant_schemer
								trait = intricate_webweaver
								trait = elusive_shadow } }
					}
					modifier = {
						factor = 0.8
						event_target:am_brawler_2 = {
							OR = {
								trait = naive_appeaser
								trait = underhanded_rogue
								trait = charismatic_negotiator
								trait = grey_eminence
							}
						}
					}
					modifier = {
						factor = 0.9
						event_target:am_brawler_2 = {
							OR = {
								trait = indulgent_wastrel
								trait = thrifty_clerk
								trait = fortune_builder
								trait = midas_touched
							}
						}
					}
					event_target:am_brawler_2 = {
						# Winning Brawler event
						long_character_event = { id = amazon.54 }
					}
				}
			}
		}
	}
}
# Winning Brawler event
long_character_event = {
	id = amazon.54
	desc = {
		text = EVTDESCAslizardmen63001
		# Opponent is FROM
		trigger = {
			event_target:am_brawler_1 = {
				character = ROOT
				has_character_flag = am_fight_1
			}
		}
	}
	desc = {
		text = EVTDESCBslizardmen63001
		# Opponent is FROM
		trigger = {
			event_target:am_brawler_1 = {
				character = ROOT
				has_character_flag = am_fight_2
			}
		}
	}
	desc = {
		text = EVTDESCCslizardmen63001
		# Opponent is FROM
		trigger = {
			event_target:am_brawler_1 = {
				character = ROOT
				has_character_flag = am_fight_3
			}
		}
	}
	desc = {
		text = EVTDESCDslizardmen63001
		# Opponent is FROMFROM
		trigger = {
			event_target:am_brawler_2 = {
				character = ROOT
				has_character_flag = am_fight_1
			}
		}
	}
	desc = {
		text = EVTDESCEslizardmen63001
		# Opponent is FROMFROM
		trigger = {
			event_target:am_brawler_2 = {
				character = ROOT
				has_character_flag = am_fight_2
			}
		}
	}
	desc = {
		text = EVTDESCFslizardmen63001
		# Opponent is FROMFROM
		trigger = {
			event_target:am_brawler_2 = {
				character = ROOT
				has_character_flag = am_fight_3
			}
		}
	}
	desc = {
		text = EVTDESCGslizardmen63001
		# Opponent is FROM
		trigger = {
			event_target:am_brawler_1 = {
				character = ROOT
				has_character_flag = am_fight_4
			}
		}
	}
	desc = {
		text = EVTDESCHslizardmen63001
		# Opponent is FROM
		trigger = {
			event_target:am_brawler_1 = {
				character = ROOT
				has_character_flag = am_fight_5
			}
		}
	}
	desc = {
		text = EVTDESCIslizardmen63001
		# Opponent is FROM
		trigger = {
			event_target:am_brawler_1 = {
				character = ROOT
				has_character_flag = am_fight_6
			}
		}
	}
	desc = {
		text = EVTDESCLslizardmen63001
		# Opponent is FROM
		trigger = {
			event_target:am_brawler_1 = {
				character = ROOT
				has_character_flag = am_fight_7
			}
		}
	}
	desc = {
		text = EVTDESCMslizardmen63001
		# Opponent is FROMFROM
		trigger = {
			event_target:am_brawler_2 = {
				character = ROOT
				has_character_flag = am_fight_4
			}
		}
	}
	desc = {
		text = EVTDESCNslizardmen63001
		# Opponent is FROMFROM
		trigger = {
			event_target:am_brawler_2 = {
				character = ROOT
				has_character_flag = am_fight_5
			}
		}
	}
	desc = {
		text = EVTDESCOslizardmen63001
		# Opponent is FROMFROM
		trigger = {
			event_target:am_brawler_2 = {
				character = ROOT
				has_character_flag = am_fight_6
			}
		}
	}
	desc = {
		text = EVTDESCPslizardmen63001
		# Opponent is FROMFROM
		trigger = {
			event_target:am_brawler_2 = {
				character = ROOT
				has_character_flag = am_fight_7
			}
		}
	}
	desc = {
		text = EVTDESCQslizardmen63001
		# Opponent is FROM
		trigger = {
			event_target:am_brawler_1 = {
				character = ROOT
				has_character_flag = am_fight_8
			}
		}
	}
	desc = {
		text = EVTDESCRslizardmen63001
		# Opponent is FROM
		trigger = {
			event_target:am_brawler_1 = {
				character = ROOT
				has_character_flag = am_fight_9
			}
		}
	}
	desc = {
		text = EVTDESCSslizardmen63001
		# Opponent is FROM
		trigger = {
			event_target:am_brawler_1 = {
				character = ROOT
				has_character_flag = am_fight_10
			}
		}
	}
	desc = {
		text = EVTDESCTslizardmen63001
		# Opponent is FROM
		trigger = {
			event_target:am_brawler_1 = {
				character = ROOT
				has_character_flag = am_fight_11
			}
		}
	}
	desc = {
		text = EVTDESCUslizardmen63001
		# Opponent is FROMFROM
		trigger = {
			event_target:am_brawler_2 = {
				character = ROOT
				has_character_flag = am_fight_8
			}
		}
	}
	desc = {
		text = EVTDESCVslizardmen63001
		# Opponent is FROMFROM
		trigger = {
			event_target:am_brawler_2 = {
				character = ROOT
				has_character_flag = am_fight_9
			}
		}
	}
	desc = {
		text = EVTDESCWslizardmen63001
		# Opponent is FROMFROM
		trigger = {
			event_target:am_brawler_2 = {
				character = ROOT
				has_character_flag = am_fight_10
			}
		}
	}
	desc = {
		text = EVTDESCXslizardmen63001
		# Opponent is FROMFROM
		trigger = {
			event_target:am_brawler_2 = {
				character = ROOT
				has_character_flag = am_fight_11
			}
		}
	}
	picture = GFX_evt_amazon_fighter

	is_triggered_only = yes

	immediate = {
		random = {
			chance = 5
			add_trait = wounded
		}
	}

	option = {
		name = EVTOPTAslizardmen63001
		prestige = 25
		hidden_tooltip = {
 			if = {
				limit = {
					event_target:am_brawler_1 = { character = ROOT }
				}
				event_target:am_brawler_2 = {
					# Loser Brawler event
					long_character_event = { id = amazon.55 }
				}
			}
 			if = {
				limit = {
					event_target:am_brawler_2 = { character = ROOT }
				}
				event_target:am_brawler_1 = {
					# Loser Brawler event
					long_character_event = { id = amazon.55 }
				}
			}
		}
	}
}
# Loser Brawler event
long_character_event = {
	id = amazon.55
	desc = {
		text = EVTDESCAslizardmen63002
		trigger = {
			FROM = { has_character_flag = am_fight_1 }
		}
	}
	desc = {
		text = EVTDESCBslizardmen63002
		trigger = {
			FROM = { has_character_flag = am_fight_2 }
		}
	}
	desc = {
		text = EVTDESCCslizardmen63002
		trigger = {
			FROM = { has_character_flag = am_fight_3 }
		}
	}
	desc = {
		text = EVTDESCDslizardmen63002
		trigger = {
			FROM = { has_character_flag = am_fight_4 }
		}
	}
	desc = {
		text = EVTDESCEslizardmen63002
		trigger = {
			FROM = { has_character_flag = am_fight_5 }
		}
	}
	desc = {
		text = EVTDESCFslizardmen63002
		trigger = {
			FROM = { has_character_flag = am_fight_6 }
		}
	}
	desc = {
		text = EVTDESCGslizardmen63002
		trigger = {
			FROM = { has_character_flag = am_fight_7 }
		}
	}
	desc = {
		text = EVTDESCHslizardmen63002
		trigger = {
			FROM = { has_character_flag = am_fight_8 }
		}
	}
	desc = {
		text = EVTDESCIslizardmen63002
		trigger = {
			FROM = { has_character_flag = am_fight_9 }
		}
	}
	desc = {
		text = EVTDESCLslizardmen63002
		trigger = {
			FROM = { has_character_flag = am_fight_10 }
		}
	}
	desc = {
		text = EVTDESCMslizardmen63002
		trigger = {
			FROM = { has_character_flag = am_fight_11 }
		}
	}
	picture = GFX_evt_amazon_fighter

	is_triggered_only = yes

	immediate = {
		random = {
			chance = 45
			add_trait = wounded
		}
		random = {
			chance = 5
			add_trait = maimed
		}
	}

	option = {
		name = EVTOPTAslizardmen63002
		decadence = 2
		hidden_tooltip = {
			if = {
				limit = {
					event_target:am_brawler_2 = { character = ROOT }
				}
				clear_event_target = am_brawler_2
				FROM = { clear_event_target = am_brawler_1 }
			}
			if = {
				limit = {
					event_target:am_brawler_1 = { character = ROOT }
				}
				clear_event_target = am_brawler_1
				FROM = { clear_event_target = am_brawler_2 }
			}
			set_character_flag = brawling_loser
			clr_character_flag = brawling_participant
			clr_character_flag = am_fight_1
			clr_character_flag = am_fight_2
			clr_character_flag = am_fight_3
			clr_character_flag = am_fight_4
			clr_character_flag = am_fight_5
			clr_character_flag = am_fight_6
			clr_character_flag = am_fight_7
			clr_character_flag = am_fight_8
			clr_character_flag = am_fight_9
			clr_character_flag = am_fight_10
			clr_character_flag = am_fight_11
			FROM = {
				clr_character_flag = am_fight_1
				clr_character_flag = am_fight_2
				clr_character_flag = am_fight_3
				clr_character_flag = am_fight_4
				clr_character_flag = am_fight_5
				clr_character_flag = am_fight_6
				clr_character_flag = am_fight_7
				clr_character_flag = am_fight_8
				clr_character_flag = am_fight_9
				clr_character_flag = am_fight_10
				clr_character_flag = am_fight_11
			}
			# If only FROM is left, she is the winner, inform her
 			if = {
				limit = {
					top_liege = {
						any_realm_character = {
							has_character_flag = brawling_participant
							NOR = {
								character = FROM
								character = ROOT
								has_character_flag = brawling_loser
							}
						}
					}
				}
				FROM = {
					# You won, but there are other challengers
					character_event = { id = amazon.56 }
				}
				break = yes
			}
			# If only FROM is left, she is the winner, inform her
			FROM = {
				long_character_event = { id = amazon.57 }
			}
		 }
	}
}
# You won, but there are other challengers
character_event = {
	id = amazon.56
	desc = EVTDESCslizardmen63003
	picture = GFX_evt_amazon_fighter

	is_triggered_only = yes

	option = {
		name = EVTOPTAslizardmen63003
		decadence = -1
		hidden_tooltip = {
 			random_realm_character = {
				limit = {
					has_character_flag = brawling_participant
					NOR = {
						character = ROOT
						has_character_flag = brawling_loser
					}
				}
				#scope to second Amazon
				character_event = { id = amazon.50 }
			}
		}
	}
}
# You won the tournament
long_character_event = {
	id = amazon.57
	picture = GFX_evt_amazon_fighter
	desc = {
		text = EVTDESCAslizardmen64
		# Winner is not the Queen
		trigger = {
			NOT = { has_character_flag = brawling_host }
		}
	}
	desc = {
		text = EVTDESCBslizardmen64
		# Winner is the Queen
		trigger = { has_character_flag = brawling_host }
	}

	is_triggered_only = yes

	option = {
		name = EVTOPTAslizardmen64
		decadence = -5
		wealth = 45
		prestige = 750
		piety = 250
		hidden_tooltip = {
			random = {
				chance = 45
				remove_trait = complacent
			}
 			if = {
				limit = {
					any_realm_character = {
						has_character_flag = brawling_host
						NOT = { character = ROOT }
					}
				}
				random_realm_character = {
					limit = {
						has_character_flag = brawling_host
						NOT = { character = ROOT }
					}
					# Notify Queen who didn't win about who did win
					long_character_event = { id = amazon.58 }
				}
			}
			any_realm_character = {
				limit = {
					has_character_flag = brawling_loser
					NOR = {
						character = ROOT
						has_character_flag = brawling_host
					}
				}
				# Notify all the losers about who won
				long_character_event = { id = amazon.59 }
			}
			random_list = {
				# Became Brave
				15 = {
					character_event = {
						id = amazon.60
						days = 6
						random = 6
					}
				}
				# Became Stronger
				6 = {
					character_event = {
						id = amazon.61
						days = 6
						random = 6
					}
				}
				# Became Wroth
				6 = {
					character_event = {
						id = amazon.62
						days = 6
						random = 6
					}
				}
				# Rigg's favour
				3 = {
					character_event = {
						id = amazon.63
						days = 1
						random = 2
					}
				}
				# Nothing
				70 = {
				}
			}
		}
	}
}
# Notify Queen who didn't win about who did win
long_character_event = {
	id = amazon.58
	desc = EVTDESCAslizardmen64001
	picture = GFX_evt_amazon_fighter

	is_triggered_only = yes

	option = {
		name = EVTOPTAslizardmen64001
		prestige = 150
		piety = 50
		if = {
			limit = {
				NOT = {
					any_rival = { count = 4 }
				}
			}
			random = {
				chance = 25
				add_rival = FROM
			}
		}
	}
}
# Notify all the losers about who won
long_character_event = {
	id = amazon.59
	desc = {
		text = EVTDESCAslizardmen64002
		# Winner is not the Queen
		trigger = {
			FROM = {
				NOT = { has_character_flag = brawling_host }
			}
		}
	}
	desc = {
		text = EVTDESCBslizardmen64002
		# Winner is the Queen
		trigger = {
			FROM = { has_character_flag = brawling_host }
		}
	}
	picture = GFX_evt_amazon_fighter

	is_triggered_only = yes

	option = {
		name = EVTOPTAslizardmen64002
	}
}
# Became brave during the tournament
character_event = {
	id = amazon.60
	desc = EVTDESCAslizardmen65001
	picture = GFX_evt_amazon_fighter

	is_triggered_only = yes

	option = {
		name = EVTOPTAslizardmen65001
		if = {
			limit = { trait = brave }
			change_martial = 1
		}
		else = {
			add_trait = brave
		}
	}
}
# Became stronger during the tournament
character_event = {
	id = amazon.61
	desc = EVTDESCAslizardmen65002
	picture = GFX_evt_amazon_fighter

	is_triggered_only = yes

	option = {
		name = EVTOPTAslizardmen65002
		if = {
			limit = { trait = strong }
			change_martial = 1
		}
		else_if = {
			limit = { trait = tough }
			remove_trait = tough
			add_trait = strong
		}
		else_if = {
			limit = { trait = hardy }
			remove_trait = hardy
			add_trait = tough
		}
		else_if = {
			limit = { trait = soft }
			remove_trait = soft
		}
		else_if = {
			limit = { trait = fragile }
			remove_trait = fragile
			add_trait = soft
		}
		else_if = {
			limit = { trait = weak }
			remove_trait = weak
			add_trait = fragile
		}
		else = {
			 add_trait = hardy
		}
	}
}
# Became wroth during the tournament
character_event = {
	id = amazon.62
	desc = EVTDESCAslizardmen65003
	picture = GFX_evt_amazon_fighter

	is_triggered_only = yes

	option = {
		name = EVTOPTAslizardmen65003
		if = {
			limit = { trait = wroth }
			change_martial = 1
		}
		else = {
			add_trait = wroth
		}
	}
}
# Received Rigg's favour for your prowess
character_event = {
	id = amazon.63
	desc = EVTDESCAslizardmen65004
	picture = GFX_evt_amazon_fighter

	is_triggered_only = yes

	option = {
		name = EVTOPTAslizardmen65004
		add_character_modifier = {
			name = favour_rigg
			duration = 1200
		}
	}
}

#######################

# on_siege_over_winner The Amazons capture a good specimen (ROOT is attacker, FROM is province sieged)
character_event = {
	id = amazon.64
	desc = EVTDESCslizardmen60
	picture = GFX_evt_amazon

	religion = amazon
	only_women = yes

	is_triggered_only = yes

	trigger = {
		location = {
			NOR = {
				has_province_modifier = province_slave_raid
				has_province_modifier = province_scourged
				has_province_modifier = province_slave_raid_chaos_dwarf
			}
		}
		FROM = {
			is_capital = yes
			# Only against the living
			NOT = { culture = nehekharan }
			owner = {
				any_courtier = {
					is_ruler = no
					is_female = no
					is_adult = yes
					OR = {
						trait = creature_human
						trait = creature_amazon
						trait = creature_halfling
					}
					# Only against the living
					NOR = {
						trait = creature_nehekharan
						is_vampire_visible_trigger = yes
					}
				}
		 	}
		}
	}

	# I'll take this.
	option = {
		name = EVTOPTCslizardmen60
		ai_chance = {
			factor = 50
			modifier = {
				factor = 1.5
				ROOT = {
					NOR = {
						trait = possessed
						trait = lunatic_3
						trait = lunatic_2
					}
				}
			}
			modifier = {
				factor = 0.7
				trait = zealous
			}
		}
		prestige = 25
		decadence = 1
		FROM = {
			owner = {
				random_courtier = {
					limit = {
						is_ruler = no
						is_female = no
						is_adult = yes
						OR = {
							trait = creature_human
							trait = creature_amazon
							trait = creature_halfling
						}
						# Only against the living
						NOR = {
							trait = creature_nehekharan
							is_vampire_visible_trigger = yes
						}
					}
					move_character = ROOT
					add_trait = in_stock
				}
			}
		}
	}
	# Just keep him in store for sacrifice
	option = {
		name = EVTOPTBslizardmen60
		ai_chance = {
			factor = 50
			modifier = {
				factor = 1.2
				ROOT = {
					NOR = {
						trait = possessed
						trait = lunatic_3
						trait = lunatic_2
					}
				}
			}
			modifier = {
				factor = 1.2
				trait = kind
			}
		}
		piety = 25
		decadence = -1
		change_variable = {
			which = "sacrifical_victims"
			value = 1
		}
		if = {
			limit = { trait = cruel }
			random = {
				chance = 3
				remove_trait = cruel
			}
		}
	}
}
# on_bi_yearly_pulse Maintenance event to ensure that all children of amazon religion women are of their own dynasty and not bastards
character_event = {
	id = amazon.65
	desc = amazon17desc # In the eyes of the world, your child is a bastard, but in Amazon culture that is not so. Your child is your legitimate heir, no matter who the father is.#
	picture = "GFX_evt_amazon"

	religion = amazon

	is_triggered_only = yes

	trigger = {
		trait = creature_amazon
		is_female = yes
		any_child = {
			OR = {
				NOT = { dynasty = ROOT }
				trait = bastard
				trait = legit_bastard
			}
		}
	}
	# That is the proper way of things.
	option = {
		name = amazon17A
		any_child = {
			limit = {
				OR = {
					NOT = { dynasty = ROOT }
					trait = bastard
					trait = legit_bastard
				}
			}
			remove_trait = bastard
			remove_trait = legit_bastard
			dynasty = ROOT
		}
	}
}
# on_bi_yearly_pulse Male courtier with the amazon_exception flag objects to being imprisoned, when he has been told he can walk freely amongst them
character_event = {
	id = amazon.66
	desc = amazon18desc # You have been told previously that you are an exception, and do not have to be a slave in the amazon hierarchy. Yet you find yourself in prison along with the others...
	picture = "GFX_evt_amazon"

	religion = amazon
	only_men = yes
	min_age = 10

	is_triggered_only = yes

	trigger = {
		OR = {
			trait = in_stock
			prisoner = yes
		}
		has_character_flag = amazon_exception
		host = {
			religion = amazon
		}
	}

	# I will appeal to my jailors!
	option = {
		name = amazon18A
		host = {
			# Host gets the appeal message
			character_event = { id = amazon.67 }
		}
	}
}
# Host gets the appeal message
character_event = {
	id = amazon.67
	desc = amazon19desc # You are asked to visit one of your captives in the dungeon. He looks at you appealingly: 'Please, I was promised that I was an exception and could roam freely... why am I locked up here with all the others?
	picture = "GFX_evt_amazon_queen"

	is_triggered_only = yes

	# Ahh, that is correct my pet. Sisters, release this one!
	option = {
		name = amazon19A
		FROM = {
			remove_trait = in_stock
			# Prisoner gets positive reply
			character_event = { id = amazon.68 }
		}
	}
	# We lied. You will stay where you belong.
	option = {
		name = amazon19B
		trigger = { ai = no }
		decadence = -1
		FROM = {
			clr_character_flag = amazon_exception
			# Prisoner gets negative reply
			character_event = { id = amazon.69 }
		}
	}
}
# Prisoner gets positive reply
character_event = {
	id = amazon.68
	desc = amazon20desc # Your host comes down to your cell, and smiles at your predicament. 'You're right, pet, we did say you could walk freely. Sisters - release this one at once!'
	picture = "GFX_evt_amazon_queen"

	is_triggered_only = yes

	# Thank you!
	option = {
		name = amazon20A
	}
}
# Prisoner gets negative reply
character_event = {
	id = amazon.69
	desc = amazon21desc #Your host comes down to your cell, and smiles at your predicament. 'Remember when we said that you could walk freely amongst us? We lied.' With that, the amazons all laugh darkly and leave you alone once more.
	picture = "GFX_evt_amazon_queen"

	is_triggered_only = yes

	# Wait, please, come back!
	option = {
		name = amazon21A
	}
}
# on_bi_yearly_pulse Males outside amazon society can inherit, and lose the trait
character_event = {
	id = amazon.70
	hide_window = yes

	only_men = yes

	is_triggered_only = yes

	trigger = {
		NOT = {
			top_liege = { trait = creature_amazon }
		}
		trait = disinherited_amazon
		has_character_flag = disinherited_by_amazon_laws
	}

	immediate = {
		remove_trait = disinherited_amazon
		clr_character_flag = disinherited_by_amazon_laws
	}

	# Gender equality at last!
	option = {
		name = OK
	}
}

#######################

# on_adolescence, determine which of the three types of Amazon girl is this going to be
character_event = {
	id = amazon.71
	hide_window = yes

	religion = amazon
	only_women = yes
	capable_only = yes
	prisoner = no

	is_triggered_only = yes

	trigger = {
		has_guardian = yes
		NOR = {
			has_character_flag = excited_trainee	# excited_trainee (wants to learn, fascinated by culture)
			has_character_flag = troubled_trainee	# troubled_trainee (wants to learn, but has wrong character)
			has_character_flag = antiamazon_trainee # antiamazon_trainee (rejects the culture, regardless of character)
		}
		guardian = { trait = creature_amazon }
	}

	immediate = {
		random_list = {
			75 = {
				modifier = {
					factor = 1.25
					martial = 5
				}
				modifier = {
					factor = 1.5
					trait = brave
				}
				modifier = {
					factor = 1.5
					trait = strong
				}
				modifier = {
					factor = 1.45
					trait = tough
				}
				modifier = {
					factor = 1.25
					trait = hardy
				}
				modifier = {
					factor = 1.25
					trait = dim
				}
				modifier = {
					factor = 1.35
					trait = dumb
				}
				modifier = {
					factor = 1.45
					trait = slow
				}
				modifier = {
					factor = 1.5
					trait = idiot
				}
				modifier = {
					factor = 1.65
					trait = imbecile
				}
				modifier = {
					factor = 1.5
					trait = wroth
				}
				modifier = {
					factor = 1.85
					trait = zealous
				}
				modifier = {
					factor = 1.5
					trait = diligent
				}
				modifier = {
					factor = 1.25
					trait = proud
				}
				modifier = {
					factor = 1.35
					trait = ambitious
				}
				modifier = {
					factor = 1.35
					trait = arbitrary
				}
				modifier = {
					factor = 1.35
					trait = trusting
				}
				modifier = {
					factor = 1.35
					trait = cruel
				}
				modifier = {
					factor = 1.35
					guardian = { is_mother = ROOT }
				}
				set_character_flag = excited_trainee
				# Little Amazon wants to learn
				character_event = {
					id = amazon.72
				}
			}
			20 = {
				modifier = {
					factor = 1.35
					NOT = { martial = 5 }
				}
				modifier = {
					factor = 1.5
					trait = craven
				}
				modifier = {
					factor = 1.5
					trait = weak
				}
				modifier = {
					factor = 1.45
					trait = fragile
				}
				modifier = {
					factor = 1.25
					trait = soft
				}
				modifier = {
					factor = 1.25
					trait = lisp
				}
				modifier = {
					factor = 1.35
					trait = clubfooted
				}
				modifier = {
					factor = 1.65
					trait = dwarf
				}
				modifier = {
					factor = 1.5
					trait = hunchback
				}
				modifier = {
					factor = 1.45
					trait = slothful
				}
				modifier = {
					factor = 1.5
					trait = patient
				}
				modifier = {
					factor = 1.85
					trait = cynical
				}
				modifier = {
					factor = 1.5
					trait = kind
				}
				modifier = {
					factor = 1.25
					trait = humble
				}
				modifier = {
					factor = 1.35
					trait = content
				}
				modifier = {
					factor = 1.75
					trait = blinded
				}
				modifier = {
					factor = 1.75
					trait = maimed
				}
				set_character_flag = troubled_trainee
				# Little Amazon has difficulties in learning
				character_event = {
					id = amazon.73
				}
			}
			5 = {
				modifier = {
					factor = 1.25
					diplomacy = 5
				}
				modifier = {
					factor = 1.25
					intrigue = 5
				}
				modifier = {
					factor = 1.25
					learning = 5
				}
				modifier = {
					factor = 1.5
					trait = craven
				}
				modifier = {
					factor = 1.25
					trait = bright
				}
				modifier = {
					factor = 1.35
					trait = smart
				}
				modifier = {
					factor = 1.45
					trait = quick
				}
				modifier = {
					factor = 1.5
					trait = brilliant
				}
				modifier = {
					factor = 1.65
					trait = genius
				}
				modifier = {
					factor = 1.5
					trait = patient
				}
				modifier = {
					factor = 1.95
					trait = cynical
				}
				modifier = {
					factor = 1.5
					trait = slothful
				}
				modifier = {
					factor = 1.25
					trait = gluttonous
				}
				modifier = {
					factor = 1.35
					trait = envious
				}
				modifier = {
					factor = 1.35
					trait = greedy
				}
				modifier = {
					factor = 1.35
					trait = lustful
				}
				modifier = {
					factor = 1.35
					trait = deceitful
				}
				modifier = {
					factor = 1.35
					trait = shy
				}
				modifier = {
					factor = 1.35
					trait = just
				}
				modifier = {
					factor = 1.35
					trait = paranoid
				}
				modifier = {
					factor = 1.25
					trait = proud
					trait = pretty
				}
				modifier = {
					factor = 1.5
					trait = proud
					trait = fair
				}
				modifier = {
					factor = 1.75
					trait = proud
					trait = beautiful
				}
				modifier = {
					factor = 1.25
					trait = stressed
				}
				modifier = {
					factor = 1.5
					trait = depressed
				}
				set_character_flag = antiamazon_trainee
				# Little Amazon doesn't want to learn
				character_event = {
					id = amazon.74
				}
			}
		}
	}

	option = {
		name = OK
	}

	after = {
		random_list = {
			80 = {
				# Nothing Happens
			}
			20 = {
				# Young Amazon child may be induced in finding love elsewhere, do to peer pressure
				character_event = {
					id = amazon.161
					days = 500
					random = 125
				}
			}
		}
	}
}
# Little Amazon wants to learn
character_event = {
	id = amazon.72
	desc = EVTDESCAsamazonchild2001
	picture = GFX_evt_amazon_girl

	is_triggered_only = yes

	option = {
		name = EVTOPTAsamazonchild2001
		piety = 50
		guardian = {
			# Notify Guardian - Little Amazon wants to learn
			character_event = { id = amazon.75 }
		}
	}
}
# Little Amazon has difficulties in learning
character_event = {
	id = amazon.73
	desc = EVTDESCAsamazonchild2002
	picture = GFX_evt_amazon_girl

	is_triggered_only = yes

	option = {
		name = EVTOPTAsamazonchild2002
		piety = -25
		guardian = {
			# Notify Guardian - Little Amazon can't learn
			character_event = { id = amazon.76 }
		}
	}
}
# Little Amazon doesn't want to learn
character_event = {
	id = amazon.74
	desc = EVTDESCAsamazonchild2003
	picture = GFX_evt_amazon_girl

	is_triggered_only = yes

	option = {
		name = EVTOPTAsamazonchild2003
		piety = -50
		guardian = {
			# Notify Guardian - Little Amazon doesn't want to learn
			character_event = { id = amazon.77 }
		}
	}
}
# Notify Guardian - Little Amazon wants to learn
character_event = {
	id = amazon.75
	desc = EVTDESCAsamazonchild3001
	picture = GFX_evt_amazon_girl

	is_triggered_only = yes

	# I will do my best to help
	option = {
		name = EVTOPTAsamazonchild3001
		ai_chance = { factor = 1 }
		prestige = 25
		hidden_tooltip = {
			random_list = {
				25 = {
					FROM = {
						# The Amazon girl feels braver
						character_event = {
							id = amazon.78
							days = 25
							random = 25
						}
					}
				}
				25 = {
					FROM = {
						# The Amazon girl feels more talkative
						character_event = {
							id = amazon.83
							days = 25
							random = 25
						}
					}
				}
				25 = {
					FROM = {
						# The Amazon girl has some lazyness problems
						character_event = {
							id = amazon.88
							days = 25
							random = 25
						}
					}
				}
				25 = {
					FROM = {
						# The Amazon girl fights with other girls
						character_event = {
							id = amazon.95
							days = 25
							random = 25
						}
					}
				}
			}
			random_list = {
				20 = {
					# NO second event
				}
				20 = {
					FROM = {
						# The Amazon girl feels braver
						character_event = {
							id = amazon.78
							days = 125
							random = 75
						}
					}
				}
				20 = {
					FROM = {
						# The Amazon girl feels more talkative
						character_event = {
							id = amazon.83
							days = 125
							random = 75
						}
					}
				}
				20 = {
					FROM = {
						# The Amazon girl has some lazyness problems
						character_event = {
							id = amazon.88
							days = 125
							random = 75
						}
					}
				}
				20 = {
					FROM = {
						# The Amazon girl fights with other girls
						character_event = {
							id = amazon.95
							days = 125
							random = 75
						}
					}
				}
			}
		}
	}
	# She can do it on her own
	option = {
		name = EVTOPTBsamazonchild3001
		ai_chance = { factor = 1 }
		piety = 25
		hidden_tooltip = {
			random_list = {
				25 = {
					FROM = {
						# The Amazon girl feels braver
						character_event = {
							id = amazon.78
							days = 175
							random = 175
						}
					}
				}
				25 = {
					FROM = {
						# The Amazon girl feels more talkative
						character_event = {
							id = amazon.83
							days = 175
							random = 175
						}
					}
				}
				25 = {
					FROM = {
						# The Amazon girl has some lazyness problems
						character_event = {
							id = amazon.88
							days = 175
							random = 175
						}
					}
				}
				25 = {
					FROM = {
						# The Amazon girl fights with other girls
						character_event = {
							id = amazon.95
							days = 175
							random = 175
						}
					}
				}
			}
		}
	}
}
# Notify Guardian - Little Amazon can't learn
character_event = {
	id = amazon.76
	desc = EVTDESCAsamazonchild3002
	picture = GFX_evt_amazon_girl

	is_triggered_only = yes

	# I will do my best to help
	option = {
		name = EVTOPTAsamazonchild3002
		ai_chance = { factor = 1 }
		prestige = 10
		hidden_tooltip = {
			random_list = {
				25 = {
					FROM = {
						# The Amazon girls get beaten by other girls
						character_event = {
							id = amazon.100
							days = 25
							random = 25
						}
					}
				}
				25 = {
					FROM = {
						# The Amazon girl feels insecure
						character_event = {
							id = amazon.105
							days = 25
							random = 25
						}
					}
				}
				25 = {
					FROM = {
						# The Amazon girl wounded herself during the training
						character_event = {
							id = amazon.110
							days = 25
							random = 25
						}
					}
				}
				25 = {
					FROM = {
						# The Amazon girl became depressed out of frustration
						character_event = {
							id = amazon.115
							days = 25
							random = 25
						}
					}
				}
			}
			random_list = {
				20 = {
					# NO second event
				}
				20 = {
					FROM = {
						# The Amazon girls get beaten by other girls
						character_event = {
							id = amazon.100
							days = 125
							random = 75
						}
					}
				}
				20 = {
					FROM = {
						# The Amazon girl feels insecure
						character_event = {
							id = amazon.105
							days = 125
							random = 75
						}
					}
				}
				20 = {
					FROM = {
						# The Amazon girl wounded herself during the training
						character_event = {
							id = amazon.110
							days = 125
							random = 75
						}
					}
				}
				20 = {
					FROM = {
						# The Amazon girl became depressed out of frustration
						character_event = {
							id = amazon.115
							days = 125
							random = 75
						}
					}
				}
			}
		}
	}
	# She can do it on her own
	option = {
		name = EVTOPTBsamazonchild3002
		ai_chance = { factor = 1 }
		prestige = 10
		hidden_tooltip = {
			random_list = {
				25 = {
					FROM = {
						# The Amazon girls get beaten by other girls
						character_event = {
							id = amazon.100
							days = 75
							random = 175
						}
					}
				}
				25 = {
					FROM = {
						# The Amazon girl feels insecure
						character_event = {
							id = amazon.105
							days = 75
							random = 175
						}
					}
				}
				25 = {
					FROM = {
						# The Amazon girl wounded herself during the training
						character_event = {
							id = amazon.110
							days = 75
							random = 175
						}
					}
				}
				25 = {
					FROM = {
						# The Amazon girl became depressed out of frustration
						character_event = {
							id = amazon.115
							days = 75
							random = 175
						}
					}
				}
			}
		}
	}
}
# Notify Guardian - Little Amazon doesn't want to learn
character_event = {
	id = amazon.77
	desc = EVTDESCAsamazonchild3003
	picture = GFX_evt_amazon_girl

	is_triggered_only = yes

	option = {
		name = EVTOPTAsamazonchild3003
		ai_chance = { factor = 1 }
		prestige = -50
		hidden_tooltip = {
			random_list = {
				25 = {
					FROM = {
						# The Amazon girl refuses to fight on principle
						character_event = {
							id = amazon.122
							days = 25
							random = 25
						}
					}
				}
				25 = {
					FROM = {
						# The Amazon girl refuses to train at all
						character_event = {
							id = amazon.127
							days = 25
							random = 25
						}
					}
				}
				25 = {
					FROM = {
						# The Amazon girl is found kissing a male
						character_event = {
							id = amazon.134
							days = 25
							random = 25
						}
					}
				}
				25 = {
					FROM = {
						# The Amazon girl attempts to leave
						character_event = {
							id = amazon.139
							days = 25
							random = 25
						}
					}
				}
			}
			random_list = {
				20 = {
					# NO second event
				}
				20 = {
					FROM = {
						# The Amazon girl refuses to fight on principle
						character_event = {
							id = amazon.122
							days = 125
							random = 75
						}
					}
				}
				20 = {
					FROM = {
						# The Amazon girl refuses to train at all
						character_event = {
							id = amazon.127
							days = 125
							random = 75
						}
					}
				}
				20 = {
					FROM = {
						# The Amazon girl is found kissing a male
						character_event = {
							id = amazon.134
							days = 125
							random = 75
						}
					}
				}
				20 = {
					FROM = {
						# The Amazon girl attempts to leave
						character_event = {
							id = amazon.139
							days = 125
							random = 75
						}
					}
				}
			}
		}
	}
	option = {
		name = EVTOPTBsamazonchild3003
		ai_chance = { factor = 1 }
		prestige = -50
		hidden_tooltip = {
			random_list = {
				25 = {
					FROM = {
						# The Amazon girl refuses to fight on principle
						character_event = {
							id = amazon.122
							days = 75
							random = 175
						}
					}
				}
				25 = {
					FROM = {
						# The Amazon girl refuses to train at all
						character_event = {
							id = amazon.127
							days = 75
							random = 175
						}
					}
				}
				25 = {
					FROM = {
						# The Amazon girl is found kissing a male
						character_event = {
							id = amazon.134
							days = 75
							random = 175
						}
					}
				}
				25 = {
					FROM = {
						# The Amazon girl attempts to leave
						character_event = {
							id = amazon.139
							days = 75
							random = 175
						}
					}
				}
			}
		}
	}
}

#######################

# EVENTS FOR THE GOOD TRAINEE

#######################

# The Amazon girl feels braver
character_event = {
	id = amazon.78
	desc = EVTDESCAsamazonchild4
	picture = GFX_evt_amazon_girl

	has_character_flag = excited_trainee

	is_triggered_only = yes

	option = {
		name = EVTOPTAsamazonchild4
		if = {
			limit = { trait = brave }
			change_martial = 1
		}
		else = {
			add_trait = brave
		}
		guardian = {
			character_event = { id = amazon.79 }
		}
	}
}
# Notify Guardian - The Amazon girl feels braver
character_event = {
	id = amazon.79
	desc = EVTDESCAsamazonchild4001
	picture = GFX_evt_amazon_girl

	is_triggered_only = yes

	# Encourage her
	option = {
		name = EVTOPTAsamazonchild4001
		ai_chance = {
			factor = 60
			modifier = {
				factor = 0.5
				trait = envious
			}
			modifier = {
				factor = 0.5
				trait = cynical
			}
		}
		FROM = {
			# The Amazon girl empowered
			character_event = { id = amazon.80 }
		}
	}
	# Berate her
	option = {
		name = EVTOPTBsamazonchild4001
		ai_chance = {
			factor = 20
			modifier = {
				factor = 2
				trait = cruel
			}
		}
		FROM = {
			# The Amazon girl berated
			character_event = { id = amazon.81 }
		}
	}
	# Ignore her
	option = {
		name = EVTOPTCsamazonchild4001
		ai_chance = {
			factor = 20
		}
		FROM = {
			# The Amazon girl ignored
			character_event = { id = amazon.82 }
		}
	}
}
# The Amazon girl empowered
character_event = {
	id = amazon.80
	desc = EVTDESCAsamazonchild4002
	picture = GFX_evt_amazon_girl

	has_character_flag = excited_trainee

	is_triggered_only = yes

	option = {
		name = EVTOPTAsamazonchild4002
		random = {
			chance = 20
			change_martial = 1
		}
		random = {
			chance = 20
			add_trait = proud
		}
	}
}
# The Amazon girl berated
character_event = {
	id = amazon.81
	desc = EVTDESCAsamazonchild4003
	picture = GFX_evt_amazon_girl

	has_character_flag = excited_trainee

	is_triggered_only = yes

	option = {
		name = EVTOPTAsamazonchild4003
		random = {
			chance = 20
			add_trait = shy
		}
		random = {
			chance = 20
			add_trait = humble
		}
	}
}
# The Amazon girl ignored
character_event = {
	id = amazon.82
	desc = EVTDESCAsamazonchild4004
	picture = GFX_evt_amazon_girl

	has_character_flag = excited_trainee

	is_triggered_only = yes

	option = {
		name = EVTOPTAsamazonchild4004
		random = {
			chance = 10
			add_trait = wroth
		}
		random = {
			chance = 20
			add_trait = stressed
		}
	}
}

#######################

# The Amazon girl feels more talkative
character_event = {
	id = amazon.83
	desc = EVTDESCAsamazonchild5
	picture = GFX_evt_amazon_girl

	has_character_flag = excited_trainee

	is_triggered_only = yes

	option = {
		name = EVTOPTAsamazonchild5
		if = {
			limit = { trait = gregarious }
			change_diplomacy = 1
		}
		else = {
			add_trait = gregarious
		}
		guardian = {
			# Notify Guardian - The Amazon girl feels more talkative
			character_event = { id = amazon.84 }
		}
	}
}
# Notify Guardian - The Amazon girl feels more talkative
character_event = {
	id = amazon.84
	desc = EVTDESCAsamazonchild5001
	picture = GFX_evt_amazon_girl

	is_triggered_only = yes

	# Encourage her
	option = {
		name = EVTOPTAsamazonchild5001
		ai_chance = {
			factor = 60
			modifier = {
				factor = 0.5
				trait = envious
			}
			modifier = {
				factor = 0.5
				trait = cynical
			}
		}
		FROM = {
			# The Amazon girl empowered
			character_event = { id = amazon.85 }
		}
	}
	# Berate her
	option = {
		name = EVTOPTBsamazonchild5001
		ai_chance = {
			factor = 20
			modifier = {
				factor = 2
				trait = cruel
			}
		}
		FROM = {
			# The Amazon girl berated
			character_event = { id = amazon.86 }
		}
	}
	# Ignore her
	option = {
		name = EVTOPTCsamazonchild5001
		ai_chance = {
			factor = 20
		}
		FROM = {
			# The Amazon girl ignored
			character_event = { id = amazon.87 }
		}
	}
}
# The Amazon girl empowered
character_event = {
	id = amazon.85
	desc = EVTDESCAsamazonchild5002
	picture = GFX_evt_amazon_girl

	has_character_flag = excited_trainee

	is_triggered_only = yes

	option = {
		name = EVTOPTAsamazonchild5002
		random = {
			chance = 10
			change_diplomacy = 1
		}
		random = {
			chance = 10
			add_trait = charitable
		}
	}
}
# The Amazon girl berated
character_event = {
	id = amazon.86
	desc = EVTDESCAsamazonchild5003
	picture = GFX_evt_amazon_girl

	has_character_flag = excited_trainee

	is_triggered_only = yes

	option = {
		name = EVTOPTAsamazonchild5003
		random = {
			chance = 20
			add_trait = paranoid
		}
		random = {
			chance = 5
			add_trait = shy
		}
	}
}
# The Amazon girl ignored
character_event = {
	id = amazon.87
	desc = EVTDESCAsamazonchild5004
	picture = GFX_evt_amazon_girl

	has_character_flag = excited_trainee

	is_triggered_only = yes

	option = {
		name = EVTOPTAsamazonchild5004
		random = {
			chance = 10
			add_trait = trusting
		}
		random = {
			chance = 20
			add_trait = stressed
		}
	}
}

#######################

# The Amazon girl has some lazyness problems
character_event = {
	id = amazon.88
	desc = EVTDESCAsamazonchild6
	picture = GFX_evt_amazon_girl

	has_character_flag = excited_trainee

	is_triggered_only = yes

	option = {
		name = EVTOPTAsamazonchild6
		if = {
			limit = { trait = slothful }
			change_stewardship = -1
		}
		else = {
			add_trait = slothful
		}
		guardian = {
			# Notify Guardian - The Amazon has some lazyness problems
			character_event = { id = amazon.89 }
		}
	}
}
# Notify Guardian - The Amazon has some lazyness problems
character_event = {
	id = amazon.89
	desc = EVTDESCAsamazonchild6001
	picture = GFX_evt_amazon_girl

	is_triggered_only = yes

	# Encourage her
	option = {
		name = EVTOPTAsamazonchild6001
		ai_chance = {
			factor = 20
			modifier = {
				factor = 2
				trait = envious
			}
			modifier = {
				factor = 2
				trait = cynical
			}
		}
		FROM = {
			# The Amazon girl enabled
			character_event = { id = amazon.90 }
		}
	}
	# Berate her
	option = {
		name = EVTOPTBsamazonchild6001
		ai_chance = {
			factor = 60
			modifier = {
				factor = 2
				trait = cruel
			}
		}
		FROM = {
			# The Amazon girl berated
			character_event = { id = amazon.91 }
		}
	}
	# Ignore her
	option = {
		name = EVTOPTCsamazonchild6001
		ai_chance = {
			factor = 20
		}
		FROM = {
			# The Amazon girl ignored
			character_event = { id = amazon.92 }
		}
	}
}
# The Amazon girl enabled
character_event = {
	id = amazon.90
	desc = EVTDESCAsamazonchild6002
	picture = GFX_evt_amazon_girl

	has_character_flag = excited_trainee

	is_triggered_only = yes

	option = {
		name = EVTOPTAsamazonchild6002
		decadence = 1
		random = {
			chance = 5
			change_stewardship = -1
		}
		random = {
			chance = 20
			add_trait = gluttonous
			# A year later, lazy girl has grown fat
			character_event = {
				id = amazon.93
				days = 220
				random = 150
			}
		}
	}
}
# The Amazon girl berated
character_event = {
	id = amazon.91
	desc = EVTDESCAsamazonchild6003
	picture = GFX_evt_amazon_girl

	has_character_flag = excited_trainee

	is_triggered_only = yes

	option = {
		name = EVTOPTAsamazonchild6003
		random = {
			chance = 60
			remove_trait = slothful
		}
		random = {
			chance = 5
			add_trait = stressed
		}
	}
}
# The Amazon girl ignored
character_event = {
	id = amazon.92
	desc = EVTDESCAsamazonchild6004
	picture = GFX_evt_amazon_girl

	has_character_flag = excited_trainee

	is_triggered_only = yes

	option = {
		name = EVTOPTAsamazonchild6004
		decadence = 1
		random = {
			chance = 15
			change_stewardship = -1
		}
		random = {
			chance = 40
			add_trait = gluttonous
		}
	}
}
# A year later, lazy girl has grown fat
character_event = {
	id = amazon.93
	desc = EVTDESCAsamazonchild6008
	picture = GFX_evt_slaanesh_tempt

	has_character_flag = excited_trainee

	is_triggered_only = yes

	option = {
		name = EVTOPTAsamazonchild6008
		decadence = 1
		add_trait = is_fat
		# Notify Guardian - lazy girl has grown fat
		guardian = {
			character_event = {
				id = amazon.94
				days = 1
				random = 5
			}
		}
	}
}
# Notify Guardian - lazy girl has grown fat
character_event = {
	id = amazon.94
	desc = EVTDESCAsamazonchild6009
	picture = GFX_evt_slaanesh_tempt

	is_triggered_only = yes

	option = {
		name = EVTOPTAsamazonchild6009
	}
}

#######################

# The Amazon girl fights with other girls
character_event = {
	id = amazon.95
	desc = EVTDESCAsamazonchild7
	picture = GFX_evt_amazon_girl

	has_character_flag = excited_trainee

	is_triggered_only = yes

	option = {
		name = EVTOPTAsamazonchild7
		if = {
			limit = {
				trait = wroth
			}
			change_martial = 1
		}
		else = {
			add_trait = wroth
		}
		guardian = {
			# Notify Guardian - The Amazon girl fights with other girls
			character_event = { id = amazon.96 }
		}
	}
}
# Notify Guardian - The Amazon girl fights with other girls
character_event = {
	id = amazon.96
	desc = EVTDESCAsamazonchild7001
	picture = GFX_evt_amazon_girl

	is_triggered_only = yes

	# Encourage her
	option = {
		name = EVTOPTAsamazonchild7001
		ai_chance = {
			factor = 60
			modifier = {
				factor = 0.5
				trait = envious
			}
			modifier = {
				factor = 0.5
				trait = cynical
			}
		}
		FROM = {
			# The Amazon girl encouraged
			character_event = { id = amazon.97 }
		}
	}
	# Berate her
	option = {
		name = EVTOPTBsamazonchild7001
		ai_chance = {
			factor = 20
			modifier = {
				factor = 2
				trait = cruel
			}
		}
		FROM = {
			# The Amazon girl berated
			character_event = { id = amazon.98 }
		}
	}
	# Ignore her
	option = {
		name = EVTOPTCsamazonchild7001
		ai_chance = {
			factor = 20
		}
		FROM = {
			# The Amazon girl ignored
			character_event = { id = amazon.99 }
		}
	}
}
# The Amazon girl encouraged
character_event = {
	id = amazon.97
	desc = EVTDESCAsamazonchild7002
	picture = GFX_evt_amazon_girl

	has_character_flag = excited_trainee

	is_triggered_only = yes

	option = {
		name = EVTOPTAsamazonchild7002
		decadence = 1
		random = {
			chance = 10
			change_martial = 1
		}
		random = {
			chance = 15
			add_trait = ambitious
		}
	}
}
# The Amazon girl berated
character_event = {
	id = amazon.98
	desc = EVTDESCAsamazonchild7003
	picture = GFX_evt_amazon_girl

	has_character_flag = excited_trainee

	is_triggered_only = yes

	option = {
		name = EVTOPTAsamazonchild7003
		random = {
			chance = 20
			add_trait = depressed
		}
		random = {
			chance = 5
			add_trait = stressed
		}
	}
}
# The Amazon girl ignored
character_event = {
	id = amazon.99
	desc = EVTDESCAsamazonchild7004
	picture = GFX_evt_amazon_girl

	has_character_flag = excited_trainee

	is_triggered_only = yes

	option = {
		name = EVTOPTAsamazonchild7004
		decadence = 1
		random = {
			chance = 25
			add_trait = cruel
		}
		random = {
			chance = 5
			add_trait = paranoid
		}
	}
}

#######################

# EVENTS FOR THE BAD TRAINEE

#######################

# The Amazon girls get beaten by other girls
character_event = {
	id = amazon.100
	desc = EVTDESCAsamazonchild8
	picture = GFX_evt_amazon_girl

	has_character_flag = troubled_trainee

	is_triggered_only = yes

	option = {
		name = EVTOPTAsamazonchild8
		if = {
			limit = { trait = craven }
			change_martial = -1
		}
		else = {
			add_trait = craven
		}
		guardian = {
			# Notify Guardian - The Amazon is beaten by other girls
			character_event = { id = amazon.101 }
		}
	}
}
# Notify Guardian - The Amazon is beaten by other girls
character_event = {
	id = amazon.101
	desc = EVTDESCAsamazonchild8001
	picture = GFX_evt_amazon_girl

	is_triggered_only = yes

	# Enable her
	option = {
		name = EVTOPTAsamazonchild8001
		ai_chance = {
			factor = 20
			modifier = {
				factor = 2
				trait = envious
			}
			modifier = {
				factor = 2
				trait = cynical
			}
		}
		FROM = {
			# The Amazon girl enabled
			character_event = { id = amazon.102 }
		}
	}
	# Berate her
	option = {
		name = EVTOPTBsamazonchild8001
		ai_chance = {
			factor = 60
			modifier = {
				factor = 2
				trait = cruel
			}
		}
		FROM = {
			# The Amazon girl berated
			character_event = { id = amazon.103 }
		}
	}
	# Ignore her
	option = {
		name = EVTOPTCsamazonchild8001
		ai_chance = {
			factor = 20
		}
		FROM = {
			# The Amazon girl ignored
			character_event = { id = amazon.104 }
		}
	}
}
# The Amazon girl enabled
character_event = {
	id = amazon.102
	desc = EVTDESCAsamazonchild8002
	picture = GFX_evt_amazon_girl

	has_character_flag = troubled_trainee

	is_triggered_only = yes

	option = {
		name = EVTOPTAsamazonchild8002
		decadence = 1
		random = {
			chance = 5
			change_martial = -1
		}
		random = {
			chance = 20
			add_trait = shy
		}
	}
}
# The Amazon girl berated
character_event = {
	id = amazon.103
	desc = EVTDESCAsamazonchild8003
	picture = GFX_evt_amazon_girl

	has_character_flag = troubled_trainee

	is_triggered_only = yes

	option = {
		name = EVTOPTAsamazonchild8003
		random = {
			chance = 50
			remove_trait = craven
		}
		random = {
			chance = 5
			add_trait = wounded
			add_trait = brave
		}
	}
}
# The Amazon girl ignored
character_event = {
	id = amazon.104
	desc = EVTDESCAsamazonchild8004
	picture = GFX_evt_amazon_girl

	has_character_flag = troubled_trainee

	is_triggered_only = yes

	option = {
		name = EVTOPTAsamazonchild8004
		decadence = 1
		random = {
			chance = 15
			change_martial = -1
		}
		random = {
			chance = 20
			add_trait = depressed
		}
	}
}

#######################

# The Amazon girl feels insecure
character_event = {
	id = amazon.105
	desc = EVTDESCAsamazonchild9
	picture = GFX_evt_amazon_girl

	has_character_flag = troubled_trainee

	is_triggered_only = yes

	option = {
		name = EVTOPTAsamazonchild9
		if = {
			limit = { trait = shy }
			change_diplomacy = -1
		}
		else = {
			add_trait = shy
		}
		guardian = {
			# Notify Guardian - The Amazon is insecure
			character_event = { id = amazon.106 }
		}
	}
}
# Notify Guardian - The Amazon is insecure
character_event = {
	id = amazon.106
	desc = EVTDESCAsamazonchild9001
	picture = GFX_evt_amazon_girl

	is_triggered_only = yes

	# Enable her
	option = {
		name = EVTOPTAsamazonchild9001
		ai_chance = {
			factor = 20
			modifier = {
				factor = 2
				trait = envious
			}
			modifier = {
				factor = 2
				trait = cynical
			}
		}
		FROM = {
			# The Amazon girl enabled
			character_event = { id = amazon.107 }
		}
	}
	# Berate her
	option = {
		name = EVTOPTBsamazonchild9001
		ai_chance = {
			factor = 60
			modifier = {
				factor = 2
				trait = cruel
			}
		}
		FROM = {
			# The Amazon girl berated
			character_event = { id = amazon.108 }
		}
	}
	# Ignore her
	option = {
		name = EVTOPTCsamazonchild9001
		ai_chance = {
			factor = 20
		}
		FROM = {
			# The Amazon girl ignored
			character_event = { id = amazon.109 }
		}
	}
}
# The Amazon girl enabled
character_event = {
	id = amazon.107
	desc = EVTDESCAsamazonchild9002
	picture = GFX_evt_amazon_girl

	has_character_flag = troubled_trainee

	is_triggered_only = yes

	option = {
		name = EVTOPTAsamazonchild9002
		decadence = 1
		random = {
			chance = 5
			change_diplomacy = -1
		}
		random = {
			chance = 20
			add_trait = content
		}
	}
}
# The Amazon girl berated
character_event = {
	id = amazon.108
	desc = EVTDESCAsamazonchild9003
	picture = GFX_evt_amazon_girl

	has_character_flag = troubled_trainee

	is_triggered_only = yes

	option = {
		name = EVTOPTAsamazonchild9003
		random = {
			chance = 60
			remove_trait = shy
		}
		random = {
			chance = 5
			add_trait = ambitious
		}
	}
}
# The Amazon girl ignored
character_event = {
	id = amazon.109
	desc = EVTDESCAsamazonchild9004
	picture = GFX_evt_amazon_girl

	has_character_flag = troubled_trainee

	is_triggered_only = yes

	option = {
		name = EVTOPTAsamazonchild9004
		decadence = 1
		random = {
			chance = 5
			change_diplomacy = -1
		}
		random = {
			chance = 10
			add_trait = paranoid
		}
	}
}

#######################

# The Amazon girl wounded herself during the training
character_event = {
	id = amazon.110
	desc = EVTDESCAsamazonchild10
	picture = GFX_evt_amazon_girl

	has_character_flag = troubled_trainee

	is_triggered_only = yes

	option = {
		name = EVTOPTAsamazonchild10
		if = {
			limit = { trait = wounded }
			change_martial = -1
		}
		else = {
			add_trait = wounded
		}
		guardian = {
			# Notify Guardian - The Amazon has been wounded in training
			character_event = { id = amazon.111 }
		}
	}
}
# Notify Guardian - The Amazon has been wounded in training
character_event = {
	id = amazon.111
	desc = EVTDESCAsamazonchild10001
	picture = GFX_evt_amazon_girl

	is_triggered_only = yes

	# Enable her
	option = {
		name = EVTOPTAsamazonchild10001
		ai_chance = {
			factor = 20
			modifier = {
				factor = 2
				trait = envious
			}
			modifier = {
				factor = 2
				trait = cynical
			}
		}
		FROM = {
			# The Amazon girl enabled
			character_event = { id = amazon.112 }
		}
	}
	# Berate her
	option = {
		name = EVTOPTBsamazonchild10001
		ai_chance = {
			factor = 60
			modifier = {
				factor = 2
				trait = cruel
			}
		}
		FROM = {
			# The Amazon girl berated
			character_event = { id = amazon.113 }
		}
	}
	# Ignore her
	option = {
		name = EVTOPTCsamazonchild10001
		ai_chance = {
			factor = 20
		}
		FROM = {
			# The Amazon girl ignored
			character_event = { id = amazon.114 }
		}
	}
}
# The Amazon girl enabled
character_event = {
	id = amazon.112
	desc = EVTDESCAsamazonchild10002
	picture = GFX_evt_amazon_girl

	has_character_flag = troubled_trainee

	is_triggered_only = yes

	option = {
		name = EVTOPTAsamazonchild10002
		decadence = 1
		remove_trait = wounded
		random = {
			chance = 5
			add_trait = slothful
		}
		random = {
			chance = 20
			add_trait = kind
		}
	}
}
# The Amazon girl berated
character_event = {
	id = amazon.113
	desc = EVTDESCAsamazonchild10003
	picture = GFX_evt_amazon_girl

	has_character_flag = troubled_trainee

	is_triggered_only = yes

	option = {
		name = EVTOPTAsamazonchild10003
		random = {
			chance = 60
			add_trait = brave
		}
		random = {
			chance = 5
			add_trait = ambitious
		}
		random = {
			chance = 10
			add_trait = maimed
		}
	}
}
# The Amazon girl ignored
character_event = {
	id = amazon.114
	desc = EVTDESCAsamazonchild10004
	picture = GFX_evt_amazon_girl

	has_character_flag = troubled_trainee

	is_triggered_only = yes

	option = {
		name = EVTOPTAsamazonchild10004
		decadence = 1
		random = {
			chance = 5
			change_martial = -1
		}
		random = {
			chance = 10
			add_trait = depressed
		}
	}
}

#######################

# The Amazon girl became depressed out of frustration
character_event = {
	id = amazon.115
	desc = EVTDESCAsamazonchild11
	picture = GFX_evt_amazon_girl

	has_character_flag = troubled_trainee

	is_triggered_only = yes

	option = {
		name = EVTOPTAsamazonchild11
		if = {
			limit = { trait = depressed }
			change_diplomacy = -1
		}
		else = {
			add_trait = depressed
		}
		guardian = {
			# Notify Guardian - The Amazon has become depressed
			character_event = { id = amazon.116 }
		}
	}
}
# Notify Guardian - The Amazon has become depressed
character_event = {
	id = amazon.116
	desc = EVTDESCAsamazonchild11001
	picture = GFX_evt_amazon_girl

	is_triggered_only = yes

	trigger = {
		trait = creature_amazon
	}
	# Enable her
	option = {
		name = EVTOPTAsamazonchild11001
		ai_chance = {
			factor = 20
			modifier = {
				factor = 2
				trait = envious
			}
			modifier = {
				factor = 2
				trait = cynical
			}
		}
		FROM = {
			# The Amazon girl enabled
			character_event = { id = amazon.117 }
		}
	}
	# Berate her
	option = {
		name = EVTOPTBsamazonchild11001
		ai_chance = {
			factor = 60
			modifier = {
				factor = 2
				trait = cruel
			}
		}
		FROM = {
			# The Amazon girl berated
			character_event = { id = amazon.118 }
		}
	}
	# Ignore her
	option = {
		name = EVTOPTCsamazonchild11001
		ai_chance = {
			factor = 20
		}
		FROM = {
			# The Amazon girl ignored
			character_event = { id = amazon.119 }
		}
	}
}
# The Amazon girl enabled
character_event = {
	id = amazon.117
	desc = EVTDESCAsamazonchild11002
	picture = GFX_evt_amazon_girl

	has_character_flag = troubled_trainee

	is_triggered_only = yes

	option = {
		name = EVTOPTAsamazonchild11002
		decadence = 1
		random = {
			chance = 15
			add_trait = slothful
		}
		random = {
			chance = 20
			add_trait = content
			# A year later, the Amazon girl became undernourished
			character_event = {
				id = amazon.120
				days = 150
				random = 150
			}
		}
	}
}
# The Amazon girl berated
character_event = {
	id = amazon.118
	desc = EVTDESCAsamazonchild11003
	picture = GFX_evt_amazon_girl

	has_character_flag = troubled_trainee

	is_triggered_only = yes

	option = {
		name = EVTOPTAsamazonchild11003
		random = {
			chance = 60
			remove_trait = depressed
		}
		random = {
			chance = 5
			add_trait = ambitious
		}
		random = {
			chance = 10
			add_trait = stressed
		}
	}
}
# The Amazon girl ignored
character_event = {
	id = amazon.119
	desc = EVTDESCAsamazonchild11004
	picture = GFX_evt_amazon_girl

	has_character_flag = troubled_trainee

	is_triggered_only = yes

	option = {
		name = EVTOPTAsamazonchild11004
		decadence = 1
		random = {
			chance = 5
			change_martial = -1
		}
		random = {
			chance = 10
			add_trait = shy
		}
	}
}
# A year later, the Amazon girl became undernourished
character_event = {
	id = amazon.120
	desc = EVTDESCAsamazonchild11008
	picture = GFX_evt_amazon_girl

	has_character_flag = troubled_trainee

	is_triggered_only = yes

	option = {
		name = EVTOPTAsamazonchild11008
		decadence = 1
		add_trait = is_malnourished
		guardian = {
			# Notify Guardian - The Amazon girl became undernourished
			character_event = {
				id = amazon.121
				days = 15
				random = 5
			}
		}
	}
}
# Notify Guardian - The Amazon girl became undernourished
character_event = {
	id = amazon.121
	desc = EVTDESCAsamazonchild11009
	picture = GFX_evt_amazon_girl

	is_triggered_only = yes

	option = {
		name = EVTOPTAsamazonchild11009
	}
}
#######################

# EVENTS FOR THE ANTIAMAZON TRAINEE

#######################

# The Amazon girl refuses to fight on principle
character_event = {
	id = amazon.122
	desc = EVTDESCAsamazonchild12
	picture = GFX_evt_amazon_girl

	has_character_flag = antiamazon_trainee

	is_triggered_only = yes

	option = {
		name = EVTOPTAsamazonchild12
		add_trait = kind
		guardian = {
			# Notify Guardian - The Amazon doesn't want to fight
			character_event = { id = amazon.123 }
		}
	}
}
# Notify Guardian - The Amazon doesn't want to fight
character_event = {
	id = amazon.123
	desc = EVTDESCAsamazonchild12001
	picture = GFX_evt_amazon_girl

	is_triggered_only = yes

	trigger = { trait = creature_amazon }

	# Enable her
	option = {
		name = EVTOPTAsamazonchild12001
		ai_chance = {
			factor = 20
			modifier = {
				factor = 2
				trait = envious
			}
			modifier = {
				factor = 2
				trait = cynical }
		}
		FROM = {
			# The Amazon girl enabled
			character_event = { id = amazon.124 }
		}
	}
	# Berate her
	option = {
		name = EVTOPTBsamazonchild12001
		ai_chance = {
			factor = 60
			modifier = {
				factor = 2
				trait = cruel
			}
		}
		FROM = {
			# The Amazon girl berated
			character_event = { id = amazon.125 }
		}
	}
	# Ignore her
	option = {
		name = EVTOPTCsamazonchild12001
		ai_chance = {
			factor = 20
		}
		FROM = {
			# The Amazon girl ignored
			character_event = { id = amazon.126 }
		}
	}
}
# The Amazon girl enabled
character_event = {
	id = amazon.124
	desc = EVTDESCAsamazonchild12002
	picture = GFX_evt_amazon_girl

	has_character_flag = antiamazon_trainee

	is_triggered_only = yes

	option = {
		name = EVTOPTAsamazonchild12002
		decadence = 1
		add_trait = gregarious
		change_martial = -2
	}
}
# The Amazon girl berated
character_event = {
	id = amazon.125
	desc = EVTDESCAsamazonchild12003
	picture = GFX_evt_amazon_girl

	has_character_flag = antiamazon_trainee

	is_triggered_only = yes

	option = {
		name = EVTOPTAsamazonchild12003
		random = {
			chance = 60
			remove_trait = kind
		}
		random = {
			chance = 5
			add_trait = wroth
		}
		random = {
			chance = 10
			add_trait = stressed
		}
	}
}
# The Amazon girl ignored
character_event = {
	id = amazon.126
	desc = EVTDESCAsamazonchild12004
	picture = GFX_evt_amazon_girl

	has_character_flag = antiamazon_trainee

	is_triggered_only = yes

	option = {
		name = EVTOPTAsamazonchild12004
		decadence = 1
		change_martial = -2
		random = {
			chance = 10
			add_trait = gregarious
		}
	}
}

#######################

# The Amazon girl refuses to train at all
character_event = {
	id = amazon.127
	desc = EVTDESCAsamazonchild13
	picture = GFX_evt_amazon_girl

	has_character_flag = antiamazon_trainee

	is_triggered_only = yes

	option = {
		name = EVTOPTAsamazonchild13
		add_trait = slothful
		guardian = {
			# Notify Guardian - The Amazon doesn't want to fight
			character_event = { id = amazon.128 }
		}
	}
}
# Notify Guardian - The Amazon doesn't want to fight
character_event = {
	id = amazon.128
	desc = EVTDESCAsamazonchild13001
	picture = GFX_evt_amazon_girl

	is_triggered_only = yes

	# Enable her
	option = {
		name = EVTOPTAsamazonchild13001
		ai_chance = {
			factor = 20
			modifier = {
				factor = 2
				trait = envious
			}
			modifier = {
				factor = 2
				trait = cynical
			}
		}
		FROM = {
			# The Amazon girl enabled
			character_event = { id = amazon.129 }
		}
	}
	# Berate her
	option = {
		name = EVTOPTBsamazonchild13001
		ai_chance = {
			factor = 60
			modifier = {
				factor = 2
				trait = cruel
			}
		}
		FROM = {
			# The Amazon girl berated
			character_event = { id = amazon.130 }
		}
	}
	# Ignore her
	option = {
		name = EVTOPTCsamazonchild13001
		ai_chance = {
			factor = 20
		}
		FROM = {
			# The Amazon girl ignored
			character_event = { id = amazon.131 }
		}

	}
}
# The Amazon girl enabled
character_event = {
	id = amazon.129
	desc = EVTDESCAsamazonchild13002
	picture = GFX_evt_slaanesh_tempt

	has_character_flag = antiamazon_trainee

	is_triggered_only = yes

	option = {
		name = EVTOPTAsamazonchild13002
		decadence = 1
		add_trait = gluttonous
		change_martial = -1
		random = {
			chance = 50
			# A year later, the Amazon girl has grown fat
			character_event = {
				id = amazon.132
				days = 15
				random = 150
			}
		}
	}
}
# The Amazon girl berated
character_event = {
	id = amazon.130
	desc = EVTDESCAsamazonchild13003
	picture = GFX_evt_amazon_girl

	has_character_flag = antiamazon_trainee

	is_triggered_only = yes

	option = {
		name = EVTOPTAsamazonchild13003
		random = {
			chance = 60
			remove_trait = slothful
		}
		random = {
			chance = 5
			add_trait = wroth
		}
		random = {
			chance = 10
			add_trait = stressed
		}
	}
}
# The Amazon girl ignored
character_event = {
	id = amazon.131
	desc = EVTDESCAsamazonchild13004
	picture = GFX_evt_amazon_girl

	has_character_flag = antiamazon_trainee

	is_triggered_only = yes

	option = {
		name = EVTOPTAsamazonchild13004
		decadence = 1
		change_martial = -1
		random = {
			chance = 10
			add_trait = drunkard
		}
	}
}
# A year later, the Amazon girl has grown fat
character_event = {
	id = amazon.132
	desc = EVTDESCAsamazonchild13008
	picture = GFX_evt_slaanesh_tempt

	has_character_flag = antiamazon_trainee

	is_triggered_only = yes

	option = {
		name = EVTOPTAsamazonchild13008
		decadence = 1
		add_trait = is_fat
		guardian = {
			# Notify Guardian - The Amazon girl has grown fat
			character_event = {
				id = amazon.133
				days = 1
				random = 5
			}
		}
	}
}
# Notify Guardian - The Amazon girl has grown fat
character_event = {
	id = amazon.133
	desc = EVTDESCAsamazonchild13009
	picture = GFX_evt_slaanesh_tempt

	is_triggered_only = yes

	option = {
		name = EVTOPTAsamazonchild13009
	}
}

#######################

# The Amazon girl is found kissing a male
character_event = {
	id = amazon.134
	desc = EVTDESCAsamazonchild14
	picture = GFX_evt_amazon_girl

	has_character_flag = antiamazon_trainee

	is_triggered_only = yes

	option = {
		name = EVTOPTAsamazonchild14
		add_trait = lustful
		guardian = {
			character_event = { id = amazon.135 }
		}
	}
}
# Notify Guardian - The Amazon found kissing a male
character_event = {
	id = amazon.135
	desc = EVTDESCAsamazonchild14001
	picture = GFX_evt_amazon_girl

	is_triggered_only = yes

	# Enable her
	option = {
		name = EVTOPTAsamazonchild14001
		ai_chance = {
			factor = 20
			modifier = {
				factor = 2
				trait = envious
			}
			modifier = {
				factor = 2
				trait = cynical
			}
		}
		FROM = {
			# The Amazon girl enabled
			character_event = { id = amazon.136 }
		}
	}
	# Berate her
	option = {
		name = EVTOPTBsamazonchild14001
		ai_chance = {
			factor = 60
			modifier = {
				factor = 2
				trait = cruel
			}
		}
		FROM = {
			# The Amazon girl berated
			character_event = { id = amazon.137 }
		}
	}
	# Ignore her
	option = {
		name = EVTOPTCsamazonchild14001
		ai_chance = {
			factor = 20
		}
		FROM = {
			# The Amazon girl ignored
			character_event = { id = amazon.138 }
		}
	}
}
# The Amazon girl enabled
character_event = {
	id = amazon.136
	desc = EVTDESCAsamazonchild14002
	picture = GFX_evt_slaanesh_tempt

	has_character_flag = antiamazon_trainee

	is_triggered_only = yes

	option = {
		name = EVTOPTAsamazonchild14002
		decadence = 3
		change_intrigue = 2
		change_martial = -3
	}
}
# The Amazon girl berated
character_event = {
	id = amazon.137
	desc = EVTDESCAsamazonchild14003
	picture = GFX_evt_amazon_girl

	has_character_flag = antiamazon_trainee

	is_triggered_only = yes

	option = {
		name = EVTOPTAsamazonchild14003
		random = {
			chance = 60
			remove_trait = lustful
		}
		random = {
			chance = 5
			add_trait = homosexual
		}
		random = {
			chance = 10
			add_trait = depressed
		}
	}
}
# The Amazon girl ignored
character_event = {
	id = amazon.138
	desc = EVTDESCAsamazonchild14004
	picture = GFX_evt_amazon_girl

	has_character_flag = antiamazon_trainee

	is_triggered_only = yes

	option = {
		name = EVTOPTAsamazonchild14004
		decadence = 1
		change_martial = -2
		random = {
			chance = 10
			add_trait = proud
		}
	}
}

#######################

# The Amazon girl attempts to leave
character_event = {
	id = amazon.139
	desc = EVTDESCAsamazonchild15
	picture = GFX_evt_amazon_girl

	has_character_flag = antiamazon_trainee

	is_triggered_only = yes

	option = {
		name = EVTOPTAsamazonchild15
		add_trait = questing
		guardian = {
			# Notify Guardian - The Amazon has escaped
			character_event = { id = amazon.140 }
		}
	}
}
# Notify Guardian - The Amazon has escaped
character_event = {
	id = amazon.140
	desc = EVTDESCAsamazonchild15001
	picture = GFX_evt_amazon_girl

	is_triggered_only = yes

	# Let her
	option = {
		name = EVTOPTAsamazonchild15001
		ai_chance = {
			factor = 30
			modifier = {
				factor = 2
				trait = envious
			}
			modifier = {
				factor = 2
				trait = cynical
			}
		}
		FROM = {
			# The Amazon girl allowed to leave
			character_event = { id = amazon.141 }
		}
	}
	# Catch her
	option = {
		name = EVTOPTBsamazonchild15001
		ai_chance = {
			factor = 70
			modifier = {
				factor = 2
				trait = cruel
			}
		}
		FROM = {
			# The Amazon girl caught
			character_event = { id = amazon.142 }
		}
	}
}
# The Amazon girl allowed to leave
character_event = {
	id = amazon.141
	desc = EVTDESCAsamazonchild15002
	picture = GFX_evt_slaanesh_tempt

	has_character_flag = antiamazon_trainee

	is_triggered_only = yes

	option = {
		name = EVTOPTAsamazonchild15002
		decadence = 5
		change_intrigue = 2
		change_martial = -2
		clr_character_flag = antiamazon_trainee
		add_trait = disinherited_amazon
		banish = yes
		# Notify Guardian - The Amazon girl allowed to run away
		character_event = {
			id = amazon.143
		}
		# Became tamed
		character_event = {
			id = slizardmen.44005
			days = 250
			random = 250
		}
	}
}
# The Amazon girl caught
character_event = {
	id = amazon.142
	desc = EVTDESCAsamazonchild15003
	picture = GFX_evt_amazon_girl

	has_character_flag = antiamazon_trainee

	is_triggered_only = yes

	option = {
		name = EVTOPTAsamazonchild15003
		remove_trait = questing
		add_trait = stressed
		guardian = {
			# Notify Guardian - The Amazon girl caught
			character_event = {
				id = amazon.144
				days = 15
				random = 5
			}
		}
	}
}
# Notify Guardian - The Amazon girl allowed to run away
character_event = {
	id = amazon.143
	desc = EVTDESCAsamazonchild15005
	picture = GFX_evt_slaanesh_tempt

	is_triggered_only = yes

	option = {
		name = EVTOPTAsamazonchild15005
		prestige = -100
	}
}
# Notify Guardian - The Amazon girl caught
character_event = {
	id = amazon.144
	desc = EVTDESCAsamazonchild15006
	picture = GFX_evt_amazon_girl

	is_triggered_only = yes

	option = {
		name = EVTOPTAsamazonchild15006
		prestige = 25
	}
}

#####################

# On_adulthood check the status of the Amazon and start up the final test
character_event = {
	id = amazon.145
	picture = GFX_evt_amazon_girl
	desc = {
		text = EVTDESCAsamazonchild16
		trigger = {
			has_character_flag = excited_trainee
			NOR = {
				trait = incapable
				prisoner = yes
				trait = disinherited_amazon
			 	trait = questing
			}
		}
	}
	desc = {
		text = EVTDESCBsamazonchild16
		trigger = {
			has_character_flag = troubled_trainee
			NOR = {
				trait = incapable
				prisoner = yes
				trait = disinherited_amazon
				trait = questing
			}
		}
	}
	desc = {
		text = EVTDESCCsamazonchild16
		trigger = {
			has_character_flag = antiamazon_trainee
			NOR = {
				trait = incapable
			 	prisoner = yes
				trait = disinherited_amazon
				trait = questing
			}
		}
	}
	desc = {
		text = EVTDESCDsamazonchild16
		trigger = {
			OR = {
				trait = incapable
				prisoner = yes
				trait = disinherited_amazon
				trait = questing
			}
		}
	}

	religion = amazon
	only_women = yes

	is_triggered_only = yes

	option = {
		name = EVTOPTAsamazonchild16
		trigger = {
			NOR = {
				trait = incapable
				prisoner = yes
			 	trait = disinherited_amazon
				trait = questing
			}
		}
		hidden_tooltip = {
			character_event = {
				id = amazon.147
				days = 5
				random = 5
			}
		}
	}
	option = {
		name = EVTOPTBsamazonchild16
		trigger = {
			OR = {
				trait = incapable
				prisoner = yes
				trait = disinherited_amazon
				trait = questing
			}
		}
		decadence = 12
		piety = -10
		add_trait = disinherited_amazon
		remove_trait = creature_amazon
		add_trait = creature_human
		hidden_tooltip = {
			mother = {
				# Notify Mother - The Amazon girl is not able and cannot perform the trial
				character_event = { id = amazon.146 }
			}
		}
	}
}
# Notify Mother - The Amazon girl is not able and cannot perform the trial
character_event = {
	id = amazon.146
	desc = EVTDESCAsamazonchild16001
	picture = GFX_evt_amazon_girl

	is_triggered_only = yes

	option = {
		name = EVTOPTAsamazonchild16001
		decadence = 5
		prestige = -50
		piety = -10
	}
}
# Trial event to determine if amazon Pass/Fail
character_event = {
	id = amazon.147
	hide_window = yes

	is_triggered_only = yes

	immediate = {
		random_list = {
			# You won the trial, now for the rite of passage
			65 = {
				modifier = {
					factor = 1.5
					martial = 8
				}
				modifier = {
					factor = 1.85
					has_character_flag = excited_trainee
				}
				modifier = {
					factor = 1.65
					has_character_flag = antiamazon_trainee
				}
				modifier = {
					factor = 1.25
					intrigue = 5
				}
				modifier = {
					factor = 1.5
					trait = brave
				}
				modifier = {
					factor = 1.5
					trait = strong
				}
				modifier = {
					factor = 1.45
					trait = tough
				}
				modifier = {
					factor = 1.25
					trait = hardy
				}
				modifier = {
					factor = 1.25
					trait = bright
				}
				modifier = {
					factor = 1.35
					trait = smart
				}
				modifier = {
					factor = 1.45
					trait = quick
				}
				modifier = {
					factor = 1.5
					trait = brilliant
				}
				modifier = {
					factor = 1.65
					trait = genius
				}
				modifier = {
					factor = 1.5
					trait = wroth
				}
				modifier = {
					factor = 1.85
					trait = zealous
				}
				modifier = {
					factor = 1.5
					trait = diligent
				}
				modifier = {
					factor = 1.25
					trait = proud
				}
				modifier = {
					factor = 1.5
					trait = ambitious
				}
				modifier = {
					factor = 1.35
					trait = arbitrary
				}
				modifier = {
					factor = 1.35
					trait = paranoid
				}
				modifier = {
					factor = 1.35
					trait = cruel
				}
				modifier = {
					factor = 1.25
					trait = misguided_warrior
				}
				modifier = {
					factor = 1.5
					trait = tough_soldier
				}
				modifier = {
					factor = 1.65
					trait = skilled_tactician
				}
				modifier = {
					factor = 1.85
					trait = brilliant_strategist
				}
				# You won the trial, now for the rite of passage
				character_event = {
					id = amazon.150
				}
			}
			# You lost the trial
			35 = {
				modifier = {
					factor = 1.5
					NOT = { martial = 8 }
				}
				modifier = {
					factor = 1.65
					has_character_flag = troubled_trainee
				}
				modifier = {
					factor = 1.85
					NOR = {
						has_character_flag = troubled_trainee
						has_character_flag = excited_trainee
						has_character_flag = antiamazon_trainee
					}
				}
				modifier = {
					factor = 1.25
					trait = dim
				}
				modifier = {
					factor = 1.35
					trait = dumb
				}
				modifier = {
					factor = 1.45
					trait = slow
				}
				modifier = {
					factor = 1.5
					trait = idiot
				}
				modifier = {
					factor = 1.65
					trait = imbecile
				}
				modifier = {
					factor = 1.5
					trait = craven
				}
				modifier = {
					factor = 1.5
					trait = weak
				}
				modifier = {
					factor = 1.45
					trait = fragile
				}
				modifier = {
					factor = 1.25
					trait = soft
				}
				modifier = {
					factor = 1.25
					trait = lisp
				}
				modifier = {
					factor = 1.35
					trait = clubfooted
				}
				modifier = {
					factor = 1.65
					trait = dwarf
				}
				modifier = {
					factor = 1.5
					trait = hunchback
				}
				modifier = {
					factor = 1.45
					trait = slothful
				}
				modifier = {
					factor = 1.5
					trait = patient
				}
				modifier = {
					factor = 1.85
					trait = cynical
				}
				modifier = {
					factor = 1.5
					trait = kind
				}
				modifier = {
					factor = 1.25
					trait = humble
				}
				modifier = {
					factor = 1.35
					trait = content
				}
				modifier = {
					factor = 2
					trait = blinded
				}
				modifier = {
					factor = 2
					trait = maimed
				}
				modifier = {
					factor = 1.5
					trait = wounded
				}
				modifier = {
					factor = 1.35
					trait = gluttonous
				}
				modifier = {
					factor = 1.75
					trait = is_fat  }
				modifier = {
					factor = 1.75
					trait = is_malnourished
				}
				modifier = {
					factor = 1.25
					trait = stressed
				}
				modifier = {
					factor = 1.5
					trait = depressed
				}
				# You lost the trial
				character_event = {
					id = amazon.148
				}
			}
		}
	}
}
# You lost the trial
character_event = {
	id = amazon.148
	desc = EVTDESCAsamazonchild16003
	picture = GFX_evt_amazon_girl

	is_triggered_only = yes

	option = {
		name = EVTOPTAsamazonchild16003
		decadence = 15
		add_trait = wounded
		add_trait = disinherited_amazon
		remove_trait = creature_amazon
		add_trait = creature_human
		hidden_tooltip = {
			mother = {
				# Inform mother about the daughter losing the trial
				character_event = { id = amazon.149 }
			}
		}
	}
}
# Inform mother about the daughter losing the trial
character_event = {
	id = amazon.149
	desc = EVTDESCAsamazonchild16004
	picture = GFX_evt_amazon_girl

	is_triggered_only = yes

	option = {
		name = EVTOPTAsamazonchild16004
		decadence = 1
		prestige = -25
		piety = -5
	}
}
# You won the trial, now for the rite of passage
character_event = {
	id = amazon.150
	desc = EVTDESCAsamazonchild17
	picture = GFX_evt_amazon_girl

	is_triggered_only = yes

	option = {
		name = EVTOPTAsamazonchild17
		decadence = -5
		clr_character_flag = excited_trainee
		clr_character_flag = troubled_trainee
		clr_character_flag = antiamazon_trainee
		hidden_tooltip = {
			random_list = {
				# Dumb-strong combination
				49 = {
					modifier = {
						factor = 1.25
						trait = hardy
					}
					modifier = {
						factor = 1.5
						trait = tough
					}
					modifier = {
						factor = 1.75
						trait = strong
					}
					modifier = {
						factor = 1.25
						trait = dim
					}
					modifier = {
						factor = 1.35
						trait = dumb
					}
					modifier = {
						factor = 1.5
						trait = slow
					}
					modifier = {
						factor = 1.65
						trait = idiot
					}
					modifier = {
						factor = 1.75
						trait = imbecile
					}
					# Amazon emerges as strong-dumb
					long_character_event = { id = amazon.151 }
				}
				# Dumb-fair combination
				45 = {
					modifier = {
						factor = 1.25
						trait = fair
					}
					modifier = {
						factor = 1.5
						trait = pretty
					}
					modifier = {
						factor = 1.75
						trait = beautiful
					}
					modifier = {
						factor = 1.25
						trait = dim
					}
					modifier = {
						factor = 1.35
						trait = dumb
					}
					modifier = {
						factor = 1.5
						trait = slow
					}
					modifier = {
						factor = 1.65
						trait = idiot
					}
					modifier = {
						factor = 1.75
						trait = imbecile
					}
					# Amazon emerges as pretty-dumb
					long_character_event = { id = amazon.152 }
				}
				# Smart-deformed combination
				5 = {
					modifier = {
						factor = 1.25
						trait = soft
					}
					modifier = {
						factor = 1.5
						trait = fragile
					}
					modifier = {
						factor = 1.75
						trait = weak
					}
					modifier = {
						factor = 0.95
						trait = dim
					}
					modifier = {
						factor = 0.85
						trait = dumb
					}
					modifier = {
						factor = 0.75
						trait = slow
					}
					modifier = {
						factor = 0.65
						trait = idiot
					}
					modifier = {
						factor = 0.5
						trait = imbecile
					}
					modifier = {
						factor = 1.25
						trait = bright
					}
					modifier = {
						factor = 1.35
						trait = smart
					}
					modifier = {
						factor = 1.5
						trait = quick
					}
					modifier = {
						factor = 1.65
						trait = brilliant
					}
					modifier = {
						factor = 1.75
						trait = genius
					}
					# Amazon emerges as smart-freak
					long_character_event = { id = amazon.153 }
				}
				# Immortal
				1 = {
					modifier = {
						factor = 1.5
						trait = genius
					}
					modifier = {
						factor = 1.5
						trait = strong
					}
					modifier = {
						factor = 1.5
						trait = beautiful
					}
					modifier = {
						factor = 0
						NOR = {
							trait = beautiful
							trait = genius
							trait = strong
						}
					}
					# Amazon emerges as immortal
					long_character_event = { id = amazon.154 }
				}
				# Magic
				1 = {
					modifier = {
						factor = 1.5
						trait = genius
					}
					modifier = {
						factor = 1.5
						trait = brilliant
					}
					modifier = {
						factor = 0
						NOR = {
							trait = brilliant
							trait = genius
							trait = magic_potential_1
							trait = magic_potential_2
							trait = magic_potential_3
							trait = magic_potential_4
						}
					}
					modifier = {
						factor = 0
						OR = {
							has_character_modifier = magic_power_1
							has_character_modifier = magic_power_2
							has_character_modifier = magic_power_3
							has_character_modifier = magic_power_4
						}
					}
					# Amazon emerges as mage
					long_character_event = { id = amazon.155 }
				}
			}
		}
	}
}
# Amazon emerges as strong-dumb
long_character_event = {
	id = amazon.151
	desc = EVTDESCAsamazonchild17001
	picture = "GFX_evt_amazon_pool"

	is_triggered_only = yes

	option = {
		name = EVTOPTAsamazonchild17001
		piety = 50
		decadence = -1
		if = {
			limit = { trait = strong }
			change_martial = 5
		}
		if = {
			limit = {
				OR = {
					trait = weak
					trait = soft
					trait = fragile
				}
			}
			remove_trait = weak
			remove_trait = soft
			remove_trait = fragile
			add_trait = tough
		}
		if = {
			limit = {
				OR = {
					trait = tough
					trait = hardy
				}
			}
			remove_trait = tough
			remove_trait = hardy
			add_trait = strong
		}
		if = {
			limit = {
				NOR = {
					trait = weak
					trait = soft
					trait = fragile
					trait = tough
					trait = hardy
					trait = strong
				}
			}
			add_trait = strong
		}
		if = {
			limit = { trait = imbecile }
			change_learning = -5
		}
		if = {
			limit = {
				OR = {
					trait = dim
					trait = dumb
					trait = slow
					trait = idiot
				}
			}
			remove_trait = dim
			remove_trait = dumb
			remove_trait = slow
			remove_trait = idiot
			add_trait = imbecile
		}
		if = {
			limit = {
				OR = {
					trait = bright
					trait = smart
					trait = quick
				}
			}
			remove_trait = tough
			remove_trait = hardy
			remove_trait = quick
			add_trait = dumb
		}
		if = {
			limit = {
				OR = {
					trait = brilliant
					trait = genius
				}
			}
			remove_trait = brilliant
			remove_trait = genius
		}
		if = {
			limit = {
				NOR = {
					trait = dim
					trait = dumb
					trait = slow
					trait = idiot
					trait = imbecile
					trait = bright
					trait = smart
					trait = quick
					trait = brilliant
					trait = genius
				}
			}
			add_trait = slow
		}
		hidden_tooltip = {
			remove_trait = maimed
			remove_trait = wounded
			remove_trait = blinded
			remove_trait = disfigured
			remove_trait = is_fat
			remove_trait = is_malnourished
			remove_trait = stressed
			remove_trait = depressed
		}
		hidden_tooltip = {
			mother = {
				# Inform mother daughter came out strong
				character_event = { id = amazon.156 }
			}
		}
	}
}
# Amazon emerges as pretty-dumb
long_character_event = {
	id = amazon.152
	desc = EVTDESCAsamazonchild17002
	picture = "GFX_evt_amazon_pool"

	is_triggered_only = yes

	option = {
		name = EVTOPTAsamazonchild17002
		piety = 50
		decadence = -1
		if = {
			limit = { trait = beautiful }
			change_diplomacy = 5
		}
		if = {
			limit = {
				OR = {
					trait = fair
					trait = pretty
				}
			}
			remove_trait = pretty
			remove_trait = fair
			add_trait = beautiful
		}
		if = {
			limit = {
				OR = {
					trait = plain
					trait = ugly
					trait = unsightly
				}
			}
			remove_trait = plain
			remove_trait = ugly
			remove_trait = unsightly
			add_trait = fair
		}
		if = {
			limit = {
				NOR = {
					trait = beautiful
					trait = pretty
					trait = fair
					trait = plain
					trait = ugly
					trait = unsightly
				}
			}
			add_trait = pretty
		}
		if = {
			limit = { trait = imbecile }
			change_learning = -5
		}
		if = {
			limit = {
				OR = {
					trait = dim
					trait = dumb
					trait = slow
					trait = idiot
				}
			}
			remove_trait = dim
			remove_trait = dumb
			remove_trait = slow
			remove_trait = idiot
			add_trait = imbecile
		}
		if = {
			limit = {
				OR = {
					trait = bright
					trait = smart
					trait = quick
				}
			}
			remove_trait = bright
			remove_trait = smart
			remove_trait = quick
			add_trait = dumb
		}
		if = {
			limit = {
				OR = {
					trait = brilliant
					trait = genius
				}
			}
			remove_trait = brilliant
			remove_trait = genius
		}
		if = {
			limit = {
				NOR = {
					trait = dim
					trait = dumb
					trait = slow
					trait = idiot
					trait = imbecile
					trait = bright
					trait = smart
					trait = quick
					trait = brilliant
					trait = genius
				}
			}
			add_trait = slow
		}
		hidden_tooltip = {
			remove_trait = maimed
			remove_trait = wounded
			remove_trait = blinded
			remove_trait = disfigured
			remove_trait = is_fat
			remove_trait = is_malnourished
			remove_trait = stressed
			remove_trait = depressed
		}
		hidden_tooltip = {
			mother = {
				# Inform mother daughter came out beautiful
				character_event = { id = amazon.157 }
			}
		}
	}
}
# Amazon emerges as smart-freak
long_character_event = {
	id = amazon.153
	desc = EVTDESCAsamazonchild17003
	picture = "GFX_evt_amazon_pool"

	is_triggered_only = yes

	option = {
		name = EVTOPTAsamazonchild17003
		piety = -50
		decadence = 2
		add_trait = dwarf
		if = {
			limit = {
				NOR = {
					trait = plain
					trait = ugly
					trait = unsightly
				}
			}
			add_trait = ugly
		}
		if = {
			limit = { trait = genius }
			change_learning = 5
		}
		if = {
			limit = {
				OR = {
					trait = bright
					trait = smart
					trait = quick
					trait = brilliant
				}
			}
			remove_trait = bright
			remove_trait = smart
			remove_trait = quick
			remove_trait = brilliant
			add_trait = genius
		}
		if = {
			limit = {
				OR = {
					trait = dim
					trait = dumb
					trait = slow
					trait = idiot
					trait = imbecile
				}
			}
			remove_trait = dim
			remove_trait = dumb
			remove_trait = slow
			remove_trait = idiot
			remove_trait = imbecile
			add_trait = quick
		}
		if = {
			limit = {
				NOR = {
					trait = dim
					trait = dumb
					trait = slow
					trait = idiot
					trait = imbecile
					trait = bright
					trait = smart
					trait = quick
					trait = brilliant
					trait = genius
				}
			}
			add_trait = brilliant
		}
		hidden_tooltip = {
			remove_trait = maimed
			remove_trait = wounded
			remove_trait = blinded
			remove_trait = disfigured
			remove_trait = is_fat
			remove_trait = is_malnourished
			remove_trait = stressed
			remove_trait = depressed
		}
		hidden_tooltip = {
			mother = {
				# Inform mother daughter came out smart
				character_event = { id = amazon.158 }
			}
		}
	}
}
# Amazon emerges as immortal
long_character_event = {
	id = amazon.154
	desc = EVTDESCAsamazonchild17004
	picture = "GFX_evt_amazon_pool"

	is_triggered_only = yes

	option = {
		name = EVTOPTAsamazonchild17004
		piety = 100
		decadence = -5
		add_trait = immortal
		hidden_tooltip = {
			remove_trait = maimed
			remove_trait = wounded
			remove_trait = blinded
			remove_trait = disfigured
			remove_trait = is_fat
			remove_trait = is_malnourished
			remove_trait = stressed
			remove_trait = depressed
		}
		hidden_tooltip = {
			mother = {
				# Inform mother daughter came out immortal
				character_event = { id = amazon.159 }
			}
		}
	}
}
# Amazon emerges as mage
long_character_event = {
	id = amazon.155
	desc = EVTDESCAsamazonchild17009
	picture = "GFX_evt_amazon_pool"

	is_triggered_only = yes

	option = {
		name = EVTOPTAsamazonchild17009
		piety = 100
		decadence = -5
		add_trait = lore_beasts
		if = {
			limit = { has_character_flag = magic_potential_flag_1 }
			clr_character_flag = magic_potential_flag_1
			add_trait = magic_potential_1
		}
		else_if = {
			limit = { has_character_flag = magic_potential_flag_2 }
			clr_character_flag = magic_potential_flag_2
			add_trait = magic_potential_2
		}
		else_if = {
			limit = { has_character_flag = magic_potential_flag_3 }
			clr_character_flag = magic_potential_flag_3
			add_trait = magic_potential_3
		}
		else_if = {
			limit = { has_character_flag = magic_potential_flag_4 }
			clr_character_flag = magic_potential_flag_4
			add_trait = magic_potential_4
		}
		else = {
			add_trait = magic_potential_2
		}
		magic_power_random_effect = yes
		enable_magic_xp_effect = yes
		hidden_tooltip = {
			remove_trait = maimed
			remove_trait = wounded
			remove_trait = blinded
			remove_trait = disfigured
			remove_trait = is_fat
			remove_trait = is_malnourished
			remove_trait = stressed
			remove_trait = depressed
		}
		hidden_tooltip = {
			mother = {
				# Inform mother daughter came out a shaman
				character_event = { id = amazon.160 }
			}
		}
	}
}
# Inform mother daughter came out strong
character_event = {
	id = amazon.156
	desc = EVTDESCAsamazonchild17005
	picture = "GFX_evt_amazon_pool"

	is_triggered_only = yes

	option = {
		name = EVTOPTAsamazonchild17005
	}
}
# Inform mother daughter came out beautiful
character_event = {
	id = amazon.157
	desc = EVTDESCAsamazonchild17006
	picture = "GFX_evt_amazon_pool"

	is_triggered_only = yes

	option = {
		name = EVTOPTAsamazonchild17006
	}
}
# Inform mother daughter came out smart
character_event = {
	id = amazon.158
	desc = EVTDESCAsamazonchild17007
	picture = "GFX_evt_amazon_pool"

	is_triggered_only = yes

	option = {
		name = EVTOPTAsamazonchild17007
	}
}
# Inform mother daughter came out immortal
character_event = {
	id = amazon.159
	desc = EVTDESCAsamazonchild17008
	picture = "GFX_evt_amazon_pool"

	is_triggered_only = yes

	option = {
		name = EVTOPTAsamazonchild17008
	}
}
# Inform mother daughter came out a shaman
character_event = {
	id = amazon.160
	desc = EVTDESCAsamazonchild17010
	picture = "GFX_evt_amazon_pool"

	is_triggered_only = yes

	option = {
		name = EVTOPTAsamazonchild17010
		prestige = 50
		piety = 50
	}
}

#####################

# Young Amazon child may be induced in finding love elsewhere, do to peer pressure
character_event = {
	id = amazon.161
	desc = EVTDESCAsamazonchild18
	picture = GFX_evt_amazon_girl

	religion = amazon
	capable_only = yes
	prisoner = no

	is_triggered_only = yes

	trigger = {
		trait = creature_amazon
		has_lover = no
		NOT = { trait = homosexual }
		liege = {
			any_courtier = {
				trait = creature_amazon
				has_lover = no
				age > 13
				age < 23
				prisoner = no
				NOR = {
					is_close_relative = ROOT
					trait = incapable
				}
		 	}
		}
	}

	option = {
		name = EVTOPTAsamazonchild18
		ai_chance = {
			factor = 40
			modifier = {
				factor = 2
				trait = lustful
			}
			modifier = {
				factor = 1.5
				trait = gregarious
			}
			modifier = {
				factor = 2.5
				trait = homosexual
			}
			modifier =  {
				factor = 1.75
				mother_even_if_dead = { trait = homosexual }
			}
			modifier =  {
				factor = 1.75
				father_even_if_dead = { trait = homosexual }
			}
			modifier =  {
				factor = 1.25
				has_character_flag = excited_trainee
			}
		}
		liege = {
			random_courtier = {
				limit = {
					trait = creature_amazon
					has_lover = no
					age > 13
					age < 23
					prisoner = no
					NOR = {
						is_close_relative = ROOT
						trait = incapable
					}
				}
				# Other amazon girl receives advances
				character_event = { id = amazon.162 }
			}
		}
	}
	option = {
		name = EVTOPTBsamazonchild18
		ai_chance = {
			factor = 60
			modifier = {
				factor = 2
				trait = shy
			}
			modifier = {
				factor = 1.5
				trait = paranoid
			}
			modifier = {
				factor = 1.75
				trait = chaste
			}
			modifier =  {
				factor = 1.75
				has_character_flag = antiamazon_trainee
			}
		}
	}
}
# Other amazon girl receives advances
character_event = {
	id = amazon.162
	desc = EVTDESCAsamazonchild18001
	picture = GFX_evt_amazon_girl

	is_triggered_only = yes

	option = {
		name = EVTOPTAsamazonchild18001
		ai_chance = {
			factor = 30
			modifier = {
				factor = 2
				trait = lustful
			}
			modifier = {
				factor = 1.5
				trait = gregarious
			}
			modifier = {
				factor = 2.5
				trait = homosexual
			}
			modifier =  {
				factor = 1.75
				mother_even_if_dead = { trait = homosexual }
			}
			modifier =  {
				factor = 1.75
				father_even_if_dead = { trait = homosexual }
			}
			modifier =  {
				factor = 1.25
				has_character_flag = excited_trainee
			}
		}
		decadence = -1
		add_trait = homosexual
		add_lover = FROM
		FROM = {
			# The other girl shares your interests
			character_event = { id = amazon.163 }
		}
		mother = {
			# Notify mother of revealed sexuality
			character_event = { id = amazon.165 days = 5 }
		}
	}
	option = {
		name = EVTOPTBsamazonchild18001
		ai_chance = {
			factor = 70
			modifier = {
				factor = 2
				trait = shy
			}
			modifier = {
				factor = 1.5
				trait = paranoid
			}
			modifier = {
				factor = 1.75
				trait = chaste
			}
			modifier =  {
				factor = 1.75
					has_character_flag = antiamazon_trainee
			}
		}
		FROM = {
			# The other girl doesn't share your interests
			character_event = { id = amazon.164 }
		}
	}
}
# The other girl shares your interests
character_event = {
	id = amazon.163
	desc = EVTDESCAsamazonchild18002
	picture = GFX_evt_amazon_girl

	is_triggered_only = yes

	option = {
		name = EVTOPTAsamazonchild18002
		mother = {
			# Notify mother of revealed sexuality
			character_event = {
				id = amazon.165
				days = 5
			}
		}
		decadence = -1
		add_trait = homosexual
		piety = 20
	}
}
# The other girl doesn't share your interests
character_event = {
	id = amazon.164
	desc = EVTDESCAsamazonchild18003
	picture = GFX_evt_amazon_girl

	is_triggered_only = yes

	option = {
		name = EVTOPTAsamazonchild18003
	}
}
# Notify mother of revealed sexuality
character_event = {
	id = amazon.165
	desc = EVTDESCAsamazonchild18004
	picture = GFX_evt_amazon_girl

	is_triggered_only = yes

	option = {
		name = EVTOPTAsamazonchild18004
		piety = 20
	}
}
