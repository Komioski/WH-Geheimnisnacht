namespace = wh_custom_houses

#Select either current house or extinct house
character_event = {
	id = wh_custom_houses.1	
	picture = GFX_evt_throne_room
	
	is_triggered_only = yes
	hide_from = yes
	
	trigger = {
		ai = no
		trait = house_customizer
	}
	
	desc = {
		text = "EVTDESCCUSTOMIZERHOUSES1"
		trigger = { NOT = { is_nomadic = yes } }
	}
	desc = {
		text = "EVTDESCCUSTOMIZERHOUSES1B"
		trigger = { is_nomadic = yes }
	}
	
	option = {
		name = "EVTOPTACUSTOMIZERHOUSES1" #Current House
		trigger = { NOT = { is_nomadic = yes } }
		custom_tooltip = { text = TOOLTIPhouse_customizerA }
		hidden_tooltip = { character_event = { id = wh_custom_houses.4 days = 50 } } #valid for 50 days
	}
	
	# option = {
		# name = "EVTOPTBCUSTOMIZERHOUSES1" #Extinct House
		# trigger = { NOT = { is_nomadic = yes } }
		# custom_tooltip = { text = TOOLTIPhouse_customizerB }
		# set_character_flag = page_1
		# hidden_tooltip = { character_event = { id = wh_custom_houses.2 } }
	# }
	
	option = {
		name = OK
		trigger = { is_nomadic = yes }
		remove_trait = house_customizer
	}
}
#Choose relation to customiser target
character_event = {
	id = wh_custom_houses.3
	desc = "EVTDESCCUSTOMIZERHOUSES3"
	picture = GFX_evt_throne_room
	
	is_triggered_only = yes

	trigger = {
		ai = no
		dynasty = FROM
	}
	
	immediate = {
		character_event = { id = wh_custom_houses.7 days = 1 } #Patrician/Clan maintenance
	}
	
	option = {
		name = {
			text = "EVTOPTACUSTOMIZERHOUSES3" #Child
			trigger = {
				NOR = {
					trait = bastard
					trait = legit_bastard
				}
			}
		}	
		name = {
			text = "EVTOPTGCUSTOMIZERHOUSES3" #Bastard child
			trigger = {
				OR = {
					trait = bastard
					trait = legit_bastard
				}
			}
		}
		trigger = { 
			FROM = {
				could_be_parent_of = ROOT
				# OR = {
					# is_female = no
					# is_married_matrilineally = yes
				# }
				# OR = {
					# is_female = yes
					# is_married_matrilineally = no
					# is_married = no
				# }
			}
		}	
		FROM = {
			show_portrait = yes
			if = {
				limit = { is_female = no }
				ROOT = { set_father = PREV }					
			}
			if = {
				limit = { is_female = yes }
				ROOT = { set_mother = PREV }					
			}
			recalc_succession = yes
		}	
		hidden_tooltip = { character_event = { id = wh_custom_houses.399 } } #locate second parent
		recalc_succession = yes
		if = {
			limit = {
				OR = {
					trait = bastard
					trait = legit_bastard
				}
			}
			hidden_tooltip = { character_event = { id = wh_custom_houses.5 } }	
		}
	}
	
	option = {
		name = {
			text = "EVTOPTBCUSTOMIZERHOUSES3" #Sibling (father)
			trigger = {
				NOR = {
					trait = bastard
					trait = legit_bastard
				}
			}
		}	
		name = {
			text = "EVTOPTFCUSTOMIZERHOUSES3" #Bastard child
			trigger = {
				OR = {
					trait = bastard
					trait = legit_bastard
				}
			}
		}
		trigger = { 
			FROM = {
				father_even_if_dead = {
					dynasty = ROOT
					could_be_parent_of = ROOT	
				}	
			}
		}	
		FROM = {
			father_even_if_dead = {
				show_portrait = yes
				ROOT = { set_father = PREV }
			}	
		}
		hidden_tooltip = { character_event = { id = wh_custom_houses.399 } } #locate second parent	
		recalc_succession = yes	
		if = {
			limit = {
				OR = {
					trait = bastard
					trait = legit_bastard
				}
			}
			hidden_tooltip = { character_event = { id = wh_custom_houses.5 } }	
		}		
	}
	
	option = {
		name = {
			text = "EVTOPTBCUSTOMIZERHOUSES3" #Sibling (father)
			trigger = {
				NOR = {
					trait = bastard
					trait = legit_bastard
				}
			}
		}	
		name = {
			text = "EVTOPTFCUSTOMIZERHOUSES3" #Bastard child
			trigger = {
				OR = {
					trait = bastard
					trait = legit_bastard
				}
			}
		}
		trigger = { 
			FROM = {
				mother_even_if_dead = {
					dynasty = ROOT
					could_be_parent_of = ROOT
				}	
				NOT = {
					father_even_if_dead = {
						dynasty = ROOT
						could_be_parent_of = ROOT
					}
				}
			}
		}	
		FROM = {
			mother_even_if_dead = {
				show_portrait = yes
				ROOT = { set_mother = PREV }
			}	
		}
		hidden_tooltip = { character_event = { id = wh_custom_houses.399 } } #locate second parent		
		recalc_succession = yes
		if = {
			limit = {
				OR = {
					trait = bastard
					trait = legit_bastard
				}
			}
			hidden_tooltip = { character_event = { id = wh_custom_houses.5 } }	
		}
	}
	
	option = { #Uncle (Pat Grandfather)
		name = {
			text = "EVTOPTCCUSTOMIZERHOUSES3"
			trigger = { is_female = no }
		}	
		name = {
			text = "EVTOPTCCUSTOMIZERHOUSES3AUNT"
			trigger = { is_female = yes }
		}
		trigger = { 
			FROM = {
				father_even_if_dead = {
					dynasty = ROOT
					father_even_if_dead = {
						dynasty = ROOT
						could_be_parent_of = ROOT
					}
				}	
			}
		}	
		FROM = {
			father_even_if_dead = {
				father_even_if_dead = {
					show_portrait = yes
					ROOT = { set_father = PREV }	
				}	
			}	
		}	
		hidden_tooltip = { character_event = { id = wh_custom_houses.399 } } #locate second parent
		recalc_succession = yes
	}
	option = { #Uncle (Mat Grandfather)
		name = {
			text = "EVTOPTCCUSTOMIZERHOUSES3"
			trigger = { is_female = no }
		}	
		name = {
			text = "EVTOPTCCUSTOMIZERHOUSES3AUNT"
			trigger = { is_female = yes }
		}
		trigger = { 
			FROM = {
				mother_even_if_dead = {
					dynasty = ROOT
					father_even_if_dead = {
						dynasty = ROOT
						could_be_parent_of = ROOT
					}
				}	
			}
		}	
		FROM = {
			mother_even_if_dead = {
				father_even_if_dead = {
					show_portrait = yes
					ROOT = { set_father = PREV }
				}	
			}	
		}	
		hidden_tooltip = { character_event = { id = wh_custom_houses.399 } } #locate second parent
		recalc_succession = yes
	}
	option = { #Uncle (Mat Grandmother)
		name = {
			text = "EVTOPTCCUSTOMIZERHOUSES3"
			trigger = { is_female = no }
		}	
		name = {
			text = "EVTOPTCCUSTOMIZERHOUSES3AUNT"
			trigger = { is_female = yes }
		}
		trigger = { 
			FROM = {
				mother_even_if_dead = {
					dynasty = ROOT
					mother_even_if_dead = {
						dynasty = ROOT
						could_be_parent_of = ROOT
					}
				}	
			}
		}	
		FROM = {
			mother_even_if_dead = {
				mother_even_if_dead = {
					show_portrait = yes
					ROOT = { set_mother = PREV }
				}	
			}	
		}	
		hidden_tooltip = { character_event = { id = wh_custom_houses.399 } } #locate second parent
		recalc_succession = yes
	}
	option = { #Uncle (Pat Grandmother)
		name = {
			text = "EVTOPTCCUSTOMIZERHOUSES3"
			trigger = { is_female = no }
		}	
		name = {
			text = "EVTOPTCCUSTOMIZERHOUSES3AUNT"
			trigger = { is_female = yes }
		}
		trigger = { 
			FROM = {
				father_even_if_dead = {
					dynasty = ROOT
					mother_even_if_dead = {
						dynasty = ROOT
						could_be_parent_of = ROOT
					}
				}	
			}
		}	
		FROM = {
			father_even_if_dead = {
				mother_even_if_dead = {
					show_portrait = yes
					ROOT = { set_mother = PREV }
				}	
			}	
		}	
		hidden_tooltip = { character_event = { id = wh_custom_houses.399 } } #locate second parent
		recalc_succession = yes
	}
	
	option = { #Great Uncle
		name = {
			text = "EVTOPTDCUSTOMIZERHOUSES3"
			trigger = { is_female = no }
		}	
		name = {
			text = "EVTOPTDCUSTOMIZERHOUSES3AUNT"
			trigger = { is_female = yes }
		}
		trigger = { 
			FROM = {
				father_even_if_dead = {
					dynasty = ROOT
					father_even_if_dead = {
						dynasty = ROOT
						father_even_if_dead = {
							dynasty = ROOT
							could_be_parent_of = ROOT
						}
					}
				}	
			}
		}	
		FROM = {
			father_even_if_dead = {
				father_even_if_dead = {
					father_even_if_dead = {
						show_portrait = yes
						ROOT = { set_father = PREV }
					}	
				}	
			}	
		}	
		hidden_tooltip = { character_event = { id = wh_custom_houses.399 } } #locate second parent
		recalc_succession = yes
	}
	option = { #Nephew/Niece
		name = "EVTOPTKCUSTOMIZERHOUSES3"
		trigger = { 
			FROM = {
				any_sibling_even_if_dead = {
					dynasty = ROOT
					could_be_parent_of = ROOT
					OR = {
						# AND = {
							# is_female = yes
							# is_married_matrilineally = yes
						# }
						# AND = {
							# is_female = no
							# OR = {
								# is_married_matrilineally = no
								# is_married = no
							# }	
						# }
						ROOT = {
							trait = bastard
							trait = legit_bastard
						}
					}
				}	
			}
		}	
		FROM = {
			random_sibling_even_if_dead = {
				limit = {
					dynasty = ROOT
					could_be_parent_of = ROOT
					OR = {
						# AND = {
							# is_female = yes
							# is_married_matrilineally = yes
						# }
						# AND = {
							# is_female = no
							# OR = {
								# is_married_matrilineally = no
								# is_married = no
							# }	
						# }
						ROOT = {
							trait = bastard
							trait = legit_bastard
						}
					}
				}	
				show_portrait = yes
				if = {
					limit = { is_female = no }
					ROOT = { set_father = PREV }					
				}
				if = {
					limit = { is_female = yes }
					ROOT = { set_mother = PREV }					
				}
			}	
		}
		hidden_tooltip = { character_event = { id = wh_custom_houses.399 } } #locate second parent		
		recalc_succession = yes
		if = {
			limit = {
				OR = {
					trait = bastard
					trait = legit_bastard
				}
			}
			hidden_tooltip = { character_event = { id = wh_custom_houses.5 } }	
		}
	}
	option = { #Great Nephew/Niece
		name = "EVTOPTLCUSTOMIZERHOUSES3"
		trigger = { 
			FROM = {
				any_dynasty_member_even_if_dead = {
					OR = {
						father_even_if_dead = { sibling = ROOT_FROM }
						mother_even_if_dead = { sibling = ROOT_FROM }
					}
					dynasty = ROOT
					could_be_parent_of = ROOT
					OR = {
						AND = {
							is_female = yes
							is_married_matrilineally = yes
						}
						AND = {
							is_female = no
							OR = {
								is_married_matrilineally = no
								is_married = no
							}	
						}
						ROOT = {
							trait = bastard
							trait = legit_bastard
						}
					}
				}	
			}
		}	
		FROM = {
			random_dynasty_member_even_if_dead = {
				limit = {
					OR = {
						father_even_if_dead = { sibling = ROOT_FROM }
						mother_even_if_dead = { sibling = ROOT_FROM }
					}
					dynasty = ROOT
					could_be_parent_of = ROOT
					OR = {
						AND = {
							is_female = yes
							is_married_matrilineally = yes
						}
						AND = {
							is_female = no
							OR = {
								is_married_matrilineally = no
								is_married = no
							}	
						}
						ROOT = {
							trait = bastard
							trait = legit_bastard
						}
					}
				}	
				show_portrait = yes
				if = {
					limit = { is_female = no }
					ROOT = { set_father = PREV }					
				}
				if = {
					limit = { is_female = yes }
					ROOT = { set_mother = PREV }					
				}
			}	
		}
		hidden_tooltip = { character_event = { id = wh_custom_houses.399 } } #locate second parent		
		recalc_succession = yes
		if = {
			limit = {
				OR = {
					trait = bastard
					trait = legit_bastard
				}
			}
			hidden_tooltip = { character_event = { id = wh_custom_houses.5 } }	
		}
	}
	option = { #Random Cousin
		name = "EVTOPTJCUSTOMIZERHOUSES3"
		trigger = { 
			FROM = {
				any_dynasty_member_even_if_dead = {
					dynasty = ROOT
					could_be_parent_of = ROOT
					NOR = {
						character = PREV
						is_parent_of = PREV
						is_grandparent_of = PREV
					}
					OR = {
						AND = {
							is_female = yes
							is_married_matrilineally = yes
						}
						AND = {
							is_female = no
							OR = {
								is_married_matrilineally = no
								is_married = no
							}	
						}
						ROOT = {
							trait = bastard
							trait = legit_bastard
						}
					}
				}	
			}
		}	
		FROM = {
			random_dynasty_member_even_if_dead = {
				limit = {
					dynasty = ROOT
					could_be_parent_of = ROOT
					NOR = {
						character = PREV
						is_parent_of = PREV
						is_grandparent_of = PREV
					}
					OR = {
						AND = {
							is_female = yes
							is_married_matrilineally = yes
						}
						AND = {
							is_female = no
							OR = {
								is_married_matrilineally = no
								is_married = no
							}	
						}
						ROOT = {
							trait = bastard
							trait = legit_bastard
						}
					}
				}	
				show_portrait = yes
				if = {
					limit = { is_female = no }
					ROOT = { set_father = PREV }					
				}
				if = {
					limit = { is_female = yes }
					ROOT = { set_mother = PREV }					
				}
			}	
		}	
		hidden_tooltip = { character_event = { id = wh_custom_houses.399 } } #locate second parent
		recalc_succession = yes
	}

	option = { #No relation
		name = EVTOPTECUSTOMIZERHOUSES3
		custom_tooltip = { text = TOOLTIPCUSTOMISERWARNING }
	}
	
	after = {
		father_even_if_dead = {
			any_owned_bloodline = {
				add_bloodline_member = ROOT
			}
		}		
		character_event = { id = traditional_claims.220 } #check mother bloodlines
		character_event = { id = traditional_claims.199 days = 10 } #check for traditional dynastic claims
		
		if = {
			limit = { 
				FROM = { is_vampire_trigger = yes}
				ROOT = { is_vampire_trigger = no } 		
			}
			add_trait = bastard
			hidden_tooltip = { character_event = { id = wh_custom_houses.5 } }
		}
		if = {
			limit = { 
				FROM = { open_follower_of_any_chaos_gods = yes}
				ROOT = { open_follower_of_any_chaos_gods = no } 		
			}
			add_trait = bastard
			hidden_tooltip = { character_event = { id = wh_custom_houses.5 } }
		}
		if = {
			limit = { 
				FROM = { open_follower_of_any_chaos_gods = no}
				ROOT = { open_follower_of_any_chaos_gods = yes } 		
			}
			add_trait = bastard
			hidden_tooltip = { character_event = { id = wh_custom_houses.5 } }
		}		
	}
}	
character_event = { #set new parent's spouse as parent
	id = wh_custom_houses.399
	desc = "EVTDESCCUSTOMIZERHOUSES399"
	picture = GFX_evt_throne_room
	
	is_triggered_only = yes
	hide_window = yes
	
	trigger = { 
		ai = no 
		NOT = { trait = bastard }
		NOT = { trait = legit_bastard }
		NOT = { trait = child_of_consort }
	}

	immediate = { 
		mother_even_if_dead = {
			if = {
				limit = { dynasty = ROOT }
				random_spouse_even_if_dead = {
					limit = { could_be_parent_of = ROOT }
					if = {
						limit = { is_female = no }
						ROOT = { set_father = PREV }					
					}
					if = {
						limit = { is_female = yes }
						ROOT = { set_mother = PREV }					
					}
				}
			}
		}
		father_even_if_dead = {
			if = {
				limit = { dynasty = ROOT }
				random_spouse_even_if_dead = {
					limit = { could_be_parent_of = ROOT }
					if = {
						limit = { is_female = no }
						ROOT = { set_father = PREV }					
					}
					if = {
						limit = { is_female = yes }
						ROOT = { set_mother = PREV }					
					}
				}
			}
		}
	}
	
	option = {
		name = OK
	}
}	
#Customiser time out
character_event = {
	id = wh_custom_houses.4
	desc = "EVTDESCCUSTOMIZERHOUSES4"
	picture = GFX_evt_throne_room
	
	is_triggered_only = yes
	hide_window = yes

	trigger = {
		trait = house_customizer
	}
	
	immediate = { remove_trait = house_customizer }
	
	option = {
		name = OK
	}
}

character_event = {
	id = wh_custom_houses.5
	desc = "EVTDESCHOUSECUSTOMIZER5"
	picture = GFX_evt_throne_room

	is_triggered_only = yes
	hide_window = yes
	
	immediate = {
		dynasty = mother_bastard
		recalc_succession = yes
		any_child = {
			character_event = { id = wh_custom_houses.6 days = 1 }
		}
	}

	option = {
		name = "OK"
	}
}

character_event = {
	id = wh_custom_houses.6
	is_triggered_only = yes
	hide_window = yes
	immediate = { dynasty = FROM }
	option = {
		name = OK
	}
}

#Create new palace/clan to avoid CTD
character_event = {
	id = wh_custom_houses.7
	
	is_triggered_only = yes
	hide_window = yes
	
	immediate = { 
		if = {
			limit = { is_patrician = yes }
			family_palace = { destroy_settlement = THIS }
			create_family_palace = yes
		}	
		# if = {
			# limit = { is_nomadic = yes }
			# liege = { save_event_target_as = nomad_liege }
			# clan_title = { destroy_landed_title = THIS }
			# create_title = {
				# tier = KING
				# landless = yes
				# temporary = no
				# custom_created = yes
				# culture = ROOT
				# holder = ROOT
				# nomad = yes
				# name = CUSTOMISED_NOMAD_CLAN
			# }	
			# primary_title = {
				# set_title_nomad = { title = THIS status = yes }
			# }
			# event_target:nomad_liege = { ROOT = { set_defacto_liege = PREV } }
		# }	
	}
	
	option = {
		name = OK
	}
}