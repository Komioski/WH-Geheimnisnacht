namespace = lizardman

# 101-200: Events related to Slann being awake or sleeping

#lizardman.101: Get negative traits for not being contemplating enough, or remove them for being in deep slumber
character_event = {
	id = lizardman.101
	desc = lizardman101desc
	picture = "GFX_evt_lustria_slann"

	hide_window = yes

	is_triggered_only = yes #Triggered by bi-yearly pulse

	only_rulers = yes #Maybe remove, depending on how we handle sleeping non-ruling Slann

	trigger = {
		is_ruler = yes
		trait = creature_slann
	}

	option = {
		name = OK
		random_list = {
			50 = { #Bad event
				modifier = {
					factor = 0
					NOT = { trait = lizardman_sleepingslann }
				}
				modifier = {
					factor = 0.8
					check_variable = { which = "sleep_level" value = 100 }
				}
				modifier = {
					factor = 0.8
					check_variable = { which = "sleep_level" value = 200 }
				}
				modifier = {
					factor = 0.8
					check_variable = { which = "sleep_level" value = 300 }
				}
				modifier = {
					factor = 0.8
					check_variable = { which = "sleep_level" value = 400 }
				}
				modifier = {
					factor = 0.8
					check_variable = { which = "sleep_level" value = 500 }
				}
				character_event = { id = lizardman.102 }
			}
			50 = { #Good event
				modifier = {
					factor = 0.8
					NOT = { check_variable = { which = "sleep_level" value = 100 } }
				}
				modifier = {
					factor = 0.8
					NOT = { check_variable = { which = "sleep_level" value = 200 } }
				}
				modifier = {
					factor = 0.8
					NOT = { check_variable = { which = "sleep_level" value = 300 } }
				}
				modifier = {
					factor = 0.8
					NOT = { check_variable = { which = "sleep_level" value = 400 } }
				}
				modifier = {
					factor = 0.8
					NOT = { check_variable = { which = "sleep_level" value = 500 } }
				}
				character_event = { id = lizardman.103 }
			}
		}
	}
}

#lizardman.102: Bad event happens because of light sleep
character_event = {
	id = lizardman.102
	desc = lizardman102desc
	picture = "GFX_evt_lustria_slann"


	is_triggered_only = yes

	only_rulers = yes #Maybe remove, depending on how we handle sleeping non-ruling Slann

	trigger = {
		is_ruler = yes
		trait = creature_slann
		# trait = lizardman_sleepingslann
		}

	option = {
		name = lizardman102optA
		random_list = {
			10 = {
				modifier = {
					factor = 2
					NOT = { trait = stressed }
				}
				modifier = {
					factor = 2
					NOT = { trait = depressed }
				}
				modifier = {
					factor = 2
					NOT = { trait = lunatic_3 }
				}
				modifier = {
					factor = 0
					trait = lunatic_3
				}


				if = {
					limit = { trait = stressed
						 trait = depressed
						NOT = { trait = lunatic_3 } }
					change_variable = { which = "lunatic_counter" value = 5 }
					hidden_tooltip = { character_event = { id = mutation.1005 } } #lunacy
				}
				if = {
					limit = { trait = stressed
							NOT = { trait = depressed }
							NOT = { trait = lunatic_3 } }
					add_trait = depressed
				}
				if = {
					limit = { NOT = { trait = stressed }
						NOT = { trait = depressed }
						NOT = { trait = lunatic_3 } }
					add_trait = stressed
				}
			}
			10 = {
				modifier = {
					factor = 0
					is_ill = yes
				}

				if = {
					limit = {
						NOT = {
							has_dlc = "Reapers"
						}
					}
					add_trait = ill
				}
				if = {
					limit = {
						has_dlc = "Reapers"
					}
					add_symptom_effect = yes
				}

			}
			10 = {
				modifier = {
					factor = 0
					trait = slothful
				}
				add_trait = slothful
			}
			10 = {
				modifier = {
					factor = 0
					NOT = { trait = patient }
				}
				remove_trait = patient
			}
			10 = {
				modifier = {
					factor = 0
					NOT = { trait = diligent }
				}
				remove_trait = diligent
			}
			10 = {
				piety = -50
				prestige = -50
			}
		}
	}
}

#lizardman.103: Good event happens because of deep sleep
character_event = {
	id = lizardman.103
	desc = lizardman103desc
	picture = "GFX_evt_lustria_slann"

	is_triggered_only = yes

	only_rulers = yes #Maybe remove, depending on how we handle sleeping non-ruling Slann

	trigger = {
		is_ruler = yes
		trait = creature_slann
		trait = lizardman_sleepingslann
	}

	option = {
		name = lizardman103optA
		random_list = {
		10 = {
			modifier = {
				factor = 2
				trait = stressed
			}
			modifier = {
				factor = 2
				trait = depressed
			}
			modifier = {
				factor = 2
				trait = lunatic_3
			}
			modifier = {
				factor = 0
				NOT = { trait = stressed }
				NOT = { trait = depressed }
				NOT = { trait = lunatic_3 }
			}
			if = {
				limit = { trait = stressed
					NOT = { trait = depressed }
					NOT = { trait = lunatic_3 } }
				remove_trait = stressed
			}
			if = {
				limit = { trait = stressed
					trait = depressed
					NOT = { trait = depressed } }
				remove_trait = depressed
			}
			if = {
				limit = { trait = stressed
					trait = depressed
					trait = lunatic_3 }
				change_variable = { which = "lunatic_counter" value = -5 }
			}
		}
		10 = {
			modifier = {
				factor = 0
				NOT = { trait = ill }
			}
			remove_trait = ill
		}
		10 = {
			modifier = {
				factor = 0
				NOT = { trait = slothful }
			}
			remove_trait = slothful
		}
		10 = {
			modifier = {
				factor = 0
				trait = patient
			}
			add_trait = patient
		}
		10 = {
			modifier = {
				factor = 0
				trait = diligent
			}
			add_trait = diligent
		}
		10 = {
			piety = 50
			prestige = 50
			}
		}
	}
}

#104: Remove recent_sleep_change flag
character_event = {
	id = lizardman.104
	desc = lizardman104desc
	picture = "GFX_evt_lustria_slann"

	only_rulers = yes

	hide_window = yes

	is_triggered_only = yes #2year pulse

	trigger = {
		had_character_flag = { flag = recent_sleep_change months = 18 }
	}

	option = {
		name = OK
		clr_character_flag = recent_sleep_change
	}
}

# 201-300: Events dealing with the Lustrian jungle

#201: The Lustrian jungle is growing
province_event = {
	id = lizardman.201
	desc = lizardman201desc
	picture = "GFX_evt_lustria_jungle"

	mean_time_to_happen = {
		years = 5
		modifier = {
			factor = 3
			OR = { 		#Jungle grows slower for natives
				culture_group = lizardman_group
				culture_group = amazon_group
				culture_group = halfling_lustrian
			}
		}
		modifier = { #Jungle grows slower next to rivers and coast (inland should be wilder and less useful)
			factor = 2
			OR = { borders_major_river = yes
				port = yes }
		}
		modifier = {
			factor = 1.5
			any_neighbor_province = { OR = { borders_major_river = yes
								port = yes } }
		}
		modifier = {
			factor = 1.5
			any_neighbor_province = { is_tribal = no
						is_nomadic = no }
		}
		modifier = {
			factor = 1.15
			holder_scope = { realm_stewardship = 10 }
		}
		modifier = {
			factor = 1.15
			holder_scope = { realm_stewardship = 15 }
		}
		modifier = {
			factor = 1.15
			holder_scope = { realm_stewardship = 20 }
		}
		modifier = {
			factor = 1.15
			holder_scope = { realm_stewardship = 25 }
		}
		modifier = {
			factor = 2
			is_tribal = no
			is_nomadic = no
		}
		modifier = {
			factor = 0.5
			is_nomadic = yes
		}
		modifier = {
			factor = 1.15
			capital_holding = { has_building = tb_hillfort_2 }
		}
		modifier = {
			factor = 1.2
			capital_holding = { has_building = tb_hillfort_3 }
		}
		modifier = {
			factor = 1.25
			capital_holding = { has_building = tb_hillfort_4 }
		}
		modifier = {
			factor = 1.15
			capital_holding = { has_building = ca_keep_2 }
		}
		modifier = {
			factor = 1.2
			capital_holding = { has_building = ca_keep_3 }
		}
		modifier = {
			factor = 1.25
			capital_holding = { has_building = ca_keep_4 }
		}
		modifier = {
			factor = 1.3
			capital_holding = { has_building = ca_keep_5 }
		}
		modifier = {
			factor = 1.35
			capital_holding = { has_building = ca_keep_6 }
		}
		modifier = { #Jungle grows faster if more controlled
			factor = 0.9
			holder_scope = { ai = no }
			has_province_modifier = lustria_light_jungle
		}
		modifier = { #Jungle grows a little slower once it's dense
			factor = 1.5
			holder_scope = { ai = no }
			has_province_modifier = lustria_dense_jungle
		}
	}

	trigger = {
		has_province_modifier = lustria_jungle
		OR = {
			NOT = { has_province_modifier = lustria_oppressive_jungle }
			holder_scope = {
				ai = yes #AI manages its jungle with this event
			}
		}
		terrain = jungle
	}

	option = {
		name = OK
		trigger = { holder_scope = { ai = no } }
		if = {
			limit = { has_province_modifier = lustria_dense_jungle }
			remove_province_modifier = lustria_dense_jungle
			add_province_modifier = { name = lustria_oppressive_jungle duration = -1 }
		}
		if = {
			limit = { has_province_modifier = lustria_medium_jungle }
			remove_province_modifier = lustria_medium_jungle
			add_province_modifier = { name = lustria_dense_jungle duration = -1 }
		}
		if = {
			limit = { has_province_modifier = lustria_light_jungle }
			remove_province_modifier = lustria_light_jungle
			add_province_modifier = { name = lustria_medium_jungle duration = -1 }
		}
		if = {
			limit = {
				NOR = { has_province_modifier = lustria_light_jungle
					has_province_modifier = lustria_medium_jungle
					has_province_modifier = lustria_dense_jungle
					has_province_modifier = lustria_oppressive_jungle }
				}
			add_province_modifier = { name = lustria_light_jungle duration = -1 }
			}
	}

	option = {
		name = OK
		trigger = { holder_scope = { ai = yes } }
		random_list = {
			50 = {
				modifier = {
					factor = 1.1
					holder_scope = { NOT = { realm_stewardship = 15 } }
					}
				if = {
					limit = { has_province_modifier = lustria_dense_jungle }
					remove_province_modifier = lustria_dense_jungle
					add_province_modifier = { name = lustria_oppressive_jungle duration = -1 }
				}
				if = {
					limit = { has_province_modifier = lustria_medium_jungle }
					remove_province_modifier = lustria_medium_jungle
					add_province_modifier = { name = lustria_dense_jungle duration = -1 }
				}
				if = {
					limit = { has_province_modifier = lustria_light_jungle }
					remove_province_modifier = lustria_light_jungle
					add_province_modifier = { name = lustria_medium_jungle duration = -1 }
				}
				if = {
					limit = {
						NOR = { has_province_modifier = lustria_light_jungle
								has_province_modifier = lustria_medium_jungle
								has_province_modifier = lustria_dense_jungle
								has_province_modifier = lustria_oppressive_jungle }
						}
					add_province_modifier = { name = lustria_light_jungle duration = -1 }
				}
			}
			50 = {
				modifier = {
					factor = 1.8
					holder_scope = { trait = creature_skink }
				}
				modifier = {
					factor = 1.2
					holder_scope = { trait = creature_amazon }
				}
				modifier = {
					factor = 1.2
					holder_scope = { culture_group = halfling_lustrian }
				}
				modifier = {
					factor = 2
					OR = { borders_major_river = yes
						port = yes }
				}
				modifier = {
					factor = 1.5
					any_neighbor_province = { OR = { borders_major_river = yes
										port = yes } }
				}
				modifier = {
					factor = 1.5
					any_neighbor_province = { is_tribal = no
								is_nomadic = no }
				}
				modifier = {
					factor = 1.15
					holder_scope = { realm_stewardship = 10 }
				}
				modifier = {
					factor = 1.15
					holder_scope = { realm_stewardship = 15 }
				}
				modifier = {
					factor = 1.15
					holder_scope = { realm_stewardship = 20 }
				}
				modifier = {
					factor = 1.15
					holder_scope = { realm_stewardship = 25 }
				}
				modifier = {
					factor = 1.15
					holder_scope = { independent = no
							top_liege = { realm_stewardship = 15 } }
				}
				modifier = {
					factor = 1.15
					holder_scope = { independent = no
							top_liege = { realm_stewardship = 20 } }
				}
				modifier = {
					factor = 1.15
					holder_scope = { independent = no
							top_liege = { realm_stewardship = 25 } }
				}
				modifier = {
					factor = 1.15
					holder_scope = { independent = no
							top_liege = { realm_stewardship = 30 } }
				}
				if = {
					limit = { has_province_modifier = lustria_medium_jungle }
					remove_province_modifier = lustria_medium_jungle
					add_province_modifier = { name = lustria_light_jungle duration = -1 }
				}
				if = {
					limit = { has_province_modifier = lustria_dense_jungle }
					remove_province_modifier = lustria_dense_jungle
					add_province_modifier = { name = lustria_medium_jungle duration = -1 }
				}
				if = {
					limit = { has_province_modifier = lustria_oppressive_jungle }
					remove_province_modifier = lustria_oppressive_jungle
					add_province_modifier = { name = lustria_dense_jungle duration = -1 }
				}
			}
		}
	}
}

#202: Get sick due to the jungle
character_event = {
	id = lizardman.202
	desc = lizardman202desc
	picture = "GFX_evt_lustria_jungle"

	is_triggered_only = yes

	trigger = { NOT = { culture_group = lizardman_group }
		location = { has_province_modifier = lustria_jungle }
		}

	weight_multiplier = {
		days = 1
		modifier = {
			factor = 1.5
			location = { has_province_modifier = lustria_medium_jungle }
		}
		modifier = {
			factor = 2
			location = { has_province_modifier = lustria_dense_jungle }
		}
		modifier = {
			factor = 3
			location = { has_province_modifier = lustria_oppressive_jungle }
		}
		modifier = {
			factor = 0.9
			health = 2
		}
		modifier = {
			factor = 0.9
			health = 3
		}
		modifier = {
			factor = 0.9
			health = 4
		}
		modifier = {
			factor = 0.9
			health = 5
		}
		modifier = {
			factor = 0.9
			health = 6
		}
		modifier = {
			factor = 0.9
			health = 7
		}
		modifier = {
			factor = 0.9
			health = 8
		}
		modifier = {
			factor = 0.9
			health = 9
		}
		modifier = {
			factor = 0.9
			health = 10
		}
		modifier = {
			factor = 3
			trait = ill
		}
		modifier = {
			factor = 5
			OR = {
				ROOT = { trait = has_measles }
				ROOT = { trait = has_typhus }
				ROOT = { trait = has_tomb_rot }
				ROOT = { trait = has_bone_auge }
				ROOT = { trait = pneumonic }
				ROOT = { trait = leper }
				ROOT = { trait = syphilitic }
				ROOT = { trait = pneumonic }
				}
			}
		modifier = {
			factor = 0.5
			OR = { trait = creature_skink
				trait = creature_saurus }
		}
		modifier = {
			factor = 0.1
			trait = creature_slann
			}
	}

	option = {
		name = OK


				if = {
					limit = {
						NOT = {
							has_dlc = "Reapers"
						}
					}

					random_list = {
						85 = {
							if = {
								limit = { ROOT = { trait = ill } }
								random_list = {
									10 = { ROOT = { add_trait = has_measles } }
									10 = { ROOT = { add_trait = has_typhus } }
									10 = { ROOT = { add_trait = has_tomb_rot } }
									10 = { ROOT = { add_trait = has_bone_auge } }
									10 = { ROOT = { add_trait = pneumonic } }
									}
								if = { #Notify liege and family
									limit = { independent = no }
									liege = { character_event = { id = lizardman.203 } }
									}
							}
							if = { limit = { NOT = { ROOT = { trait = ill } } }
								ROOT = { add_trait = ill }
								}
						}
						5 = {
							modifier = {
								factor = 2
								ROOT = { trait = ill }
								}
							modifier = {
								factor = 5
								OR = {
									ROOT = { trait = has_measles }
									ROOT = { trait = has_typhus }
									ROOT = { trait = has_tomb_rot }
									ROOT = { trait = has_bone_auge }
									ROOT = { trait = pneumonic }
									ROOT = { trait = leper }
									ROOT = { trait = syphilitic }
									ROOT = { trait = pneumonic }
									}
								}
							if = {
							 limit = {
							 is_invincible_trigger = yes
							 }

										antideath_effect = yes
										break = yes
							}
							death = { death_reason = death_trait }
							if = { #Notify liege and family
								limit = { ROOT = { is_ruler = no } }
								liege = { character_event = { id = lizardman.204 } }
								}
							}
						}

				}
				if = {
					limit = {
						has_dlc = "Reapers"
					}
					add_symptom_effect = yes
				}
	}
}

#203: liege notified of courtier getting sick due to jungle
character_event = {
	id = lizardman.203
	desc = lizardman203desc
	picture = "GFX_evt_lustria_jungle"

	notification = yes

	is_triggered_only = yes

	trigger = { always = yes }

	option = {
		name = OK
		}
}

#204: liege notified of courtier dying due to sickness from jungle
character_event = {
	id = lizardman.204
	desc = lizardman204desc
	picture = "GFX_evt_lustria_jungle"

	notification = yes

	is_triggered_only = yes

	trigger = { always = yes }

	option = {
		name = OK
		}
}

#205: Attacked by jungle beast
character_event = {
	id = lizardman.205
	desc = lizardman205desc
	picture = "GFX_evt_lustria_dinosaur"

	is_triggered_only = yes

	trigger = {
		location = { has_province_modifier = lustria_jungle }
	}

	weight_multiplier = {
		days = 1
		modifier = {
			factor = 0.25
			culture_group = lizardman_group
		}
		modifier = {
			factor = 1.5
			location = { has_province_modifier = lustria_medium_jungle }
		}
		modifier = {
			factor = 2
			location = { has_province_modifier = lustria_dense_jungle }
		}
		modifier = {
			factor = 3
			location = { has_province_modifier = lustria_oppressive_jungle }
		}
	}

	option = {
		name = OK
		create_random_soldier = {
			random_traits = no
			dynasty = none
			religion = old_ones
			culture = lizardman #GFX MUST be westerngfx for the correct static icon to appear
						#Creature gets native name #Creatures: Razorbacks, Cold Ones, Terradons, Stegadon, Sauropod, Thunder Lizards, Carnosaur
			name = " "
			female = no
			age = 30
			attributes = {
				martial = 5
				diplomacy = 0
				stewardship = 0
				learning = 0
				intrigue = 0
			}
		}
		#scope to character we created and make him send us a duel invite event - so we can't run away!
		new_character = {
			set_graphical_culture = generic_monster
			add_trait = creature_monster
			add_trait = wroth
			random_list = {
				10 = { give_nickname = nick_the_razorback change_martial = 5 }
				10 = { give_nickname = nick_the_cold_one change_martial = 6 }
				10 = { give_nickname = nick_the_terradon change_martial = 7 }
				10 = { give_nickname = nick_the_stegadon change_martial = 8 }
				10 = { give_nickname = nick_the_sauropod change_martial = 9 }
				10 = { give_nickname = nick_the_thunder_lizard change_martial = 10 }
				10 = { give_nickname = nick_the_carnosaur change_martial = 15 }
			}
			add_trait = brave
			character_event = {id = lizardman.207 days = 1}
		}
	}
}

#207: Creature challenges us to a duel
character_event = {
	id = lizardman.207
	desc = lizardman207desc
	picture = "GFX_evt_lustria_dinosaur"

	is_triggered_only = yes
	trigger = {
		NOT = { has_character_flag = duel }
	}
	option = {
		save_event_target_as = duelist_a
		set_character_flag = duel
		name = OK
		FROM = {
			save_event_target_as = duelist_b
			character_event = {id = duelengine.1 days = 1 }
		}
		ROOT = {
			character_event = { id = lizardman.208 days = 30 } #Kill off the creature to avoid shenanigans.
		}
	}
}

#208: Kill creature, no matter the outcome of the duel
character_event = {
	id = lizardman.208
	desc = lizardman208desc
	picture = "GFX_evt_lustria_dinosaur"

	is_triggered_only = yes

	option = {
		name = OK
		ROOT = {
		if = {
 limit = {
 is_invincible_trigger = yes
 }

			antideath_effect = yes
			break = yes
			}
			death = { death_reason = death_battle }
		}
	}
}

#20X: Village disappears in jungle

#250: Manually add the modifier on startup because the game is stupid
province_event = {
	id = lizardman.250
	desc = lizardman250desc
	picture = "GFX_evt_lustria_jungle"

	hide_window = yes

	is_triggered_only = yes

	trigger = {
		region = world_new_world_lustria
	}

	option = {
		name = OK
		add_province_modifier = { name = lustria_jungle duration = -1 }
		if = {
			limit = {
				holder_scope = {
					any_demesne_province = {
						region = world_new_world_lustria
						NOT = { has_province_modifier = lustria_jungle }
					}
				}
			}
			holder_scope = {
				random_demesne_province = {
					limit = {
						region = world_new_world_lustria
						NOT = { has_province_modifier = lustria_jungle }
					}
					province_event = { id = lizardman.250 }
				}
			}
		}
		if = {
			limit = {
				NOT = {
					OR = {
						has_province_modifier = lustria_light_jungle
						has_province_modifier = lustria_medium_jungle
						has_province_modifier = lustria_dense_jungle
						has_province_modifier = lustria_oppressive_jungle
					}
				}
			}
			random_list = { #Make it so the initial jungle level is random
				25 = {
					modifier = {
						factor = 3 #Kingdom level tier is more likely to have light jungle
						is_capital = yes
						holder_scope = {
							higher_real_tier_than = DUKE
						}
					}
					modifier = {
						factor = 2 #Duke level is a bit more likely to have light jungle
						is_capital = yes
						holder_scope = {
							real_tier = DUKE
						}
					}
					modifier = {
						factor = 1.5
						is_capital = yes
						holder_scope = {
							real_tier = COUNT
						}
					}
					modifier = {
						factor = 3
						OR = {
							borders_major_river = yes
							port = yes
						}
					}
					add_province_modifier = { name = lustria_light_jungle duration = -1 }
				}
				25 = {
					add_province_modifier = { name = lustria_medium_jungle duration = -1 }
					modifier = {
						factor = 2
						OR = {
							borders_major_river = yes
							port = yes
						}
					}
				}
				25 = {
					add_province_modifier = { name = lustria_dense_jungle duration = -1 }
				}
				25 = {
					add_province_modifier = { name = lustria_oppressive_jungle duration = -1 }
					modifier = {
						factor = 0
						OR = {
							borders_major_river = yes
							port = yes
						}
					}
				}
			}
		}
	}
}

# 251: Trigger 250 for held provinces
character_event = {
	id = lizardman.251
	desc = lizardman251desc
	picture = "GFX_evt_lustria_jungle"

	hide_window = yes

	is_triggered_only = yes

	only_rulers = yes

	trigger = {
		is_ruler = yes
	}

	option = {
		name = OK
		ROOT = {
			random_demesne_province = {
				limit = { NOT = { has_province_modifier = lustria_jungle } }
				province_event = { id = lizardman.250 }
			}
		}
	}
}

#261: Choose whom you want to cut back your jungle
character_event = {
	id = lizardman.261
	desc = lizardman261desc
	picture = "GFX_evt_lustria_jungle"

	is_triggered_only = yes

	option = { #Do it yourself
		name = lizardman261Adesc
		trigger = {
			ROOT = {
				in_command = no
					NOT = { trait = incapable }
					NOT = { trait = incapacitated }
					NOT = { trait = resting }
					NOT = { trait = studying_magic }
					NOT = { trait = in_hiding }
			}
		}
		if = {
			limit = { is_tribal = no }
			wealth = -25
		}
		if = {
			limit = { is_tribal = yes }
			wealth = -10
			prestige = -20
		}
		character_event = { id = lizardman.267 days = 20 random = 30 } # Result
	}

	option = { #Send the steward
		name = lizardman261Bdesc
		trigger = {
			ROOT = {
				job_treasurer = {
					character = yes
					in_command = no
					age = 16
					NOT = { trait = incapable }
					NOT = { trait = incapacitated }
					NOT = { trait = resting }
					NOT = { trait = studying_magic }
					NOT = { trait = in_hiding }
				}
			}
		}
		ROOT = {
			job_treasurer = {
				letter_event = { id = lizardman.262 }
			}
		}
		if = {
			limit = { is_tribal = no }
			wealth = -25
		}
		if = {
			limit = { is_tribal = yes }
			wealth = -10
			prestige = -20
		}
	}

	option = { #Nevermind
		name = lizardman261Cdesc
	}
}

#Steward - Charged to cut back the Jungle
letter_event = {
	id = lizardman.262
	desc = lizardman262desc


	is_triggered_only = yes

	hide_window = yes

	option = {
		name = OK
		character_event = { id = lizardman.266 days = 20 random = 30 } # Result
	}
}

#266: Event to resolve cutting back for the steward
character_event = {
	id = lizardman.266
	desc = lizardman266desc
	picture = "GFX_evt_lustria_jungle"

	is_triggered_only = yes

	hide_window = yes

	option = {
		name = OK
	hidden_tooltip = {
		random_list = {
			50 = {
				modifier = {
					factor = 1.1
					stewardship = 2
				}
				modifier = {
					factor = 1.1
					stewardship = 3
				}
				modifier = {
					factor = 1.1
					stewardship = 4
				}
				modifier = {
					factor = 1.1
					stewardship = 5
				}
				modifier = {
					factor = 1.1
					stewardship = 6
				}
				modifier = {
					factor = 1.1
					stewardship = 7
				}
				modifier = {
					factor = 1.1
					stewardship = 8
				}
				modifier = {
					factor = 1.1
					stewardship = 9
				}
				modifier = {
					factor = 1.1
					stewardship = 10
				}
				modifier = {
					factor = 1.1
					stewardship = 12
				}
				modifier = {
					factor = 1.1
					stewardship = 14
				}
				modifier = {
					factor = 1.1
					stewardship = 16
				}
				modifier = {
					factor = 1.1
					stewardship = 18
				}
				modifier = {
					factor = 1.1
					stewardship = 20
				}
				modifier = {
					factor = 1.1
					stewardship = 25
				}
				modifier = {
					factor = 1.1
					stewardship = 30
				}
				modifier = {
					factor = 1.5
					trait = creature_skink
				}
				modifier = {
					factor = 1.45
					trait = creature_amazon
				}
				modifier = {
					factor = 1.45
					culture_group = halfling_lustrian
				}
					if = {
						limit = { FROMFROMFROM = { location = { has_province_modifier = lustria_medium_jungle } } }
						FROMFROMFROM = { location = { remove_province_modifier = lustria_medium_jungle
							add_province_modifier = { name = lustria_light_jungle duration = -1 } } }
					}
					if = {
						limit = { FROMFROMFROM = { location = { has_province_modifier = lustria_dense_jungle } } }
						FROMFROMFROM = { location = { remove_province_modifier = lustria_dense_jungle
							add_province_modifier = { name = lustria_medium_jungle duration = -1 } } }
					}
					if = {
						limit = { FROMFROMFROM = { location = { has_province_modifier = lustria_oppressive_jungle } } }
						FROMFROMFROM = { location = { remove_province_modifier = lustria_oppressive_jungle
							add_province_modifier = { name = lustria_dense_jungle duration = -1 } } }
					}
				FROMFROM = {
					letter_event = { id = lizardman.268 }
				}
				ROOT = { character_event = { id = lizardman.270 } }
			}
			50 = {
				FROMFROM = {
					letter_event = { id = lizardman.269 }
				}
				ROOT = { character_event = { id = lizardman.271 } }
			}
		}
		random_list = {
			95 = { }
			5 = {
				modifier = {
					factor = 1.5
					FROMFROMFROM = { location = { has_province_modifier = lustria_medium_jungle } }
				}
				modifier = {
					factor = 2
					FROMFROMFROM = { location = { has_province_modifier = lustria_dense_jungle } }
				}
				modifier = {
					factor = 3
					FROMFROMFROM = { location = { has_province_modifier = lustria_oppressive_jungle } }
				}
				modifier = {
					factor = 0.9
					health = 2
				}
				modifier = {
					factor = 0.9
					health = 3
				}
				modifier = {
					factor = 0.9
					health = 4
				}
				modifier = {
					factor = 0.9
					health = 5
				}
				modifier = {
					factor = 0.9
					health = 6
				}
				modifier = {
					factor = 0.9
					health = 7
				}
				modifier = {
					factor = 0.9
					health = 8
				}
				modifier = {
					factor = 0.9
					health = 9
				}
				modifier = {
					factor = 0.9
					health = 10
				}
				modifier = {
					factor = 3
					ROOT = {
						trait = ill
					}
				}
				modifier = {
					factor = 5
					OR = {
						ROOT = { trait = has_measles }
						ROOT = { trait = has_typhus }
						ROOT = { trait = has_tomb_rot }
						ROOT = { trait = has_bone_auge }
						ROOT = { trait = pneumonic }
						ROOT = { trait = leper }
						ROOT = { trait = syphilitic }
						ROOT = { trait = pneumonic }
					}
				}
				modifier = {
					factor = 0.5
					ROOT = {
						OR = {
							trait = creature_skink
							trait = creature_saurus
						}
					}
				}
				modifier = {
					factor = 0.1
					ROOT = {
						trait = creature_slann
					}
				}

				if = {
					limit = {
						NOT = {
							ROOT = { trait = ill }
						}
					}
					ROOT = {
						add_trait = ill
					}
				}
				if = {
					limit = {
						ROOT = {
							trait = ill
						}
					}
					random_list = {
						10 = { ROOT = { add_trait = has_measles } }
						10 = { ROOT = { add_trait = has_typhus } }
						10 = { ROOT = { add_trait = has_tomb_rot } }
						10 = { ROOT = { add_trait = has_bone_auge } }
						10 = { ROOT = { add_trait = pneumonic } }
					}
					if = { #Notify liege and family
						limit = { independent = no }
						liege = { character_event = { id = lizardman.203 } }
						}
					}
				}
			}
		}
	}
}

#267: Event to resolve cutting back for the liege doing it himself
character_event = {
	id = lizardman.267
	desc = lizardman266desc
	picture = "GFX_evt_lustria_jungle"

	is_triggered_only = yes

	option = {
		name = OK
	hidden_tooltip = {
		random_list = {
			50 = {
				modifier = {
					factor = 1.1
					ROOT = {
					stewardship = 2
					}
				}
				modifier = {
					factor = 1.1
					ROOT = {
					stewardship = 3
					}
				}
				modifier = {
					factor = 1.1
					ROOT = {
					stewardship = 4
					}
				}
				modifier = {
					factor = 1.1
					stewardship = 5
				}
				modifier = {
					factor = 1.1
					stewardship = 6
				}
				modifier = {
					factor = 1.1
					stewardship = 7
				}
				modifier = {
					factor = 1.1
					stewardship = 8
				}
				modifier = {
					factor = 1.1
					stewardship = 9
				}
				modifier = {
					factor = 1.1
					stewardship = 10
				}
				modifier = {
					factor = 1.1
					stewardship = 12
				}
				modifier = {
					factor = 1.1
					stewardship = 14
				}
				modifier = {
					factor = 1.1
					stewardship = 16
				}
				modifier = {
					factor = 1.1
					stewardship = 18
				}
				modifier = {
					factor = 1.1
					stewardship = 20
				}
				modifier = {
					factor = 1.1
					stewardship = 25
				}
				modifier = {
					factor = 1.1
					stewardship = 30
				}
				modifier = {
					factor = 1.5
					trait = creature_skink
				}
				modifier = {
					factor = 1.45
					trait = creature_amazon
				}
				modifier = {
					factor = 1.45
					culture_group = halfling_lustrian
				}
					if = {
						limit = { FROMFROM = { location = { has_province_modifier = lustria_medium_jungle } } }
						FROMFROM = { location = { remove_province_modifier = lustria_medium_jungle
							add_province_modifier = { name = lustria_light_jungle duration = -1 } } }
					}
					if = {
						limit = { FROMFROM = { location = { has_province_modifier = lustria_dense_jungle } } }
						FROMFROM = { location = { remove_province_modifier = lustria_dense_jungle
							add_province_modifier = { name = lustria_medium_jungle duration = -1 } } }
					}
					if = {
						limit = { FROMFROM = { location = { has_province_modifier = lustria_oppressive_jungle } } }
						FROMFROM = { location = { remove_province_modifier = lustria_oppressive_jungle
							add_province_modifier = { name = lustria_dense_jungle duration = -1 } } }
					}
				ROOT = { character_event = { id = lizardman.270 } }
			}
			50 = {
				ROOT = { character_event = { id = lizardman.271 } }
			}
		}
		random_list = {
			95 = { }
			5 = {
				modifier = {
					factor = 1.5
					FROMFROM = { location = { has_province_modifier = lustria_medium_jungle } }
				}
				modifier = {
					factor = 2
					FROMFROM = { location = { has_province_modifier = lustria_dense_jungle } }
				}
				modifier = {
					factor = 3
					FROMFROM = { location = { has_province_modifier = lustria_oppressive_jungle } }
				}
				modifier = {
					factor = 0.9
					health = 2
				}
				modifier = {
					factor = 0.9
					health = 3
				}
				modifier = {
					factor = 0.9
					health = 4
				}
				modifier = {
					factor = 0.9
					health = 5
				}
				modifier = {
					factor = 0.9
					health = 6
				}
				modifier = {
					factor = 0.9
					health = 7
				}
				modifier = {
					factor = 0.9
					health = 8
				}
				modifier = {
					factor = 0.9
					health = 9
				}
				modifier = {
					factor = 0.9
					health = 10
				}
				modifier = {
					factor = 3
					ROOT = {
						is_ill = yes
					}
				}
				modifier = {
					factor = 0.5
					ROOT = {
						OR = {
							trait = creature_skink
							trait = creature_saurus
						}
					}
				}
				modifier = {
					factor = 0.1
					ROOT = {
						trait = creature_slann
					}
				}
				character_event = { id = lizardman.273 }	# Illness due to cutting back the jungle
				}
			}
		}
	}
}

#268: Liege is notified of success
letter_event = {
	id = lizardman.268
	desc = lizardman268desc

	is_triggered_only = yes

	option = {
		name = OK
	}
}

#269: Liege is notified of failure
letter_event = {
	id = lizardman.269
	desc = lizardman269desc

	is_triggered_only = yes

	option = {
		name = OK
	}
}

#270: Character learns of his own success
character_event = {
	id = lizardman.270
	desc = lizardman270desc
	picture = "GFX_evt_lustria_jungle"

	is_triggered_only = yes

	option = {
		name = OK
	}
}

#271: Character learns of his own failure
character_event = {
	id = lizardman.271
	desc = lizardman271desc
	picture = "GFX_evt_lustria_jungle"

	is_triggered_only = yes

	option = {
		name = OK
	}
}

#273: Tell character he has become sick due to cutting back the jungle
character_event = {
	id = lizardman.273
	desc = lizardman273desc
	picture = "GFX_evt_lustria_jungle"

	is_triggered_only = yes

	option = {
		name = OK

		if = {
			limit = {
				NOT = {
					has_dlc = "Reapers"
				}
			}
			random_list = {
				10 = { ROOT = { add_trait = has_measles } }
				10 = { ROOT = { add_trait = has_typhus } }
				10 = { ROOT = { add_trait = has_tomb_rot } }
				10 = { ROOT = { add_trait = has_bone_auge } }
				10 = { ROOT = { add_trait = pneumonic } }
			}
		}
		if = {
			limit = {
				has_dlc = "Reapers"
			}
			add_symptom_effect = yes
		}

		if = { #Notify liege
			limit = {
				independent = no
			}
			liege = {
				character_event = { id = lizardman.203 }
			}
		}
	}
}

#280: Spoils of the Lustrian jungle (lizardman only)
character_event = {
	id = lizardman.280

	hide_window = yes

	is_triggered_only = yes

	trigger = {
		culture = lizardman
		any_demesne_province = {
			has_province_modifier = lustria_jungle
			OR = {
				has_province_modifier = lustria_medium_jungle
				has_province_modifier = lustria_dense_jungle
				has_province_modifier = lustria_oppressive_jungle
			}
		}
	}

	weight_multiplier = {
		days = 1
		modifier = {
			factor = 1.5
			any_demesne_province = {
				has_province_modifier = lustria_dense_jungle
			}
		}
		modifier = {
			factor = 2
			any_demesne_province = {
				has_province_modifier = lustria_oppressive_jungle
			}
		}
		modifier = {
			factor = 1.5
			realm_stewardship = 30
		}
	}


	option = {
		name = OK
		random_list = {
			25 = { #Plaques found
				character_event = { id = lizardman.281 }
			}
			25 = { #Wild beasts tamed
				character_event = { id = lizardman.282 }
			}
			25 = { #Valuable resources found
				character_event = { id = lizardman.283 }
			}
		}
	}
}

#Holy plaques found
character_event = {
	id = lizardman.281
	desc = lizardman281desc
	picture = "GFX_evt_lustria_jungle"

	is_triggered_only = yes

	option = {
		name = GodsBePraised
		piety = 250
	}
}

#Wild beasts tamed
character_event = {
	id = lizardman.282
	desc = lizardman282desc
	picture = "GFX_evt_lustria_jungle"

	is_triggered_only = yes

	option = {
		name = GodsBePraised
	location = {
		ROOT = {
			spawn_unit = {
				owner = ROOT
				province = PREV
				home = ROOT
				troops = {
					light_cavalry = { 150 150 }
					}
				attrition = 1.0
				maintenance_multiplier = 0.075
				}
			}
		}
	}
}

#Valuable resources found
character_event = {
	id = lizardman.283
	desc = lizardman283desc
	picture = "GFX_evt_lustria_jungle"

	is_triggered_only = yes

	option = {
		name = GodsBePraised
		wealth = 150
	}
}

#300: Events about rampaging beasts

# 300: Rampaging beasts rise up (temporary rebel title created, with a leader and a war)
# Triggered from "on_rebel_revolt"
province_event = {
	id = lizardman.300
	desc = lizardman300desc
	picture = "GFX_evt_lustria_dinosaur"
	border = GFX_event_normal_frame_war

	is_triggered_only = yes

	trigger = {
		has_dlc = "The Old Gods"

		#has_province_modifier = lustria_jungle
		has_province_modifier = lustria_oppressive_jungle
		NOT = { # Not if there is already an ongoing dinosaur rampage for this province
			owner = {
				top_liege = {
					war = yes

					any_war = {
						defender = { character = PREV }
						using_cb = lustrian_rampage
						war_title = ROOT # The county
						}
					}
				}
			}
		# NOT = { # Not if there is already an ongoing revolt
			# owner = {
				# top_liege = {
					# war = yes
					# any_war = {
						# defender = { character = PREV }
						# OR = {
							# AND = {
								# using_cb = peasant_revolt
								# war_title = ROOT # The county
							# }
							# AND = {
								# using_cb = heretic_revolt
								# attacker = { religion = ROOT }
							# }
							# AND = {
								# using_cb = religious_revolt
								# attacker = { religion = ROOT }
							# }
						# }
					# }
				# }
			# }
		# }
	}

	immediate = {
		create_random_soldier = {
			random_traits = no
			dynasty = none
			religion = old_ones
			culture = lizardman #GFX MUST be westerngfx for the static portrait to show
						 #Creature gets native name #Creatures: Razorbacks, Cold Ones, Terradons, Stegadon, Sauropod, Thunder Lizards, Carnosaur
			female = no
			age = 30
			name = " "
			attributes = {
				martial = 5
				diplomacy = 0
				stewardship = 0
				learning = 0
				intrigue = 0
			}
		}
		new_character = {
			set_graphical_culture = generic_monster
			add_trait = creature_monster
			add_trait = wroth
			random_list = {
				10 = { give_nickname = nick_the_razorback change_martial = 5 }
				10 = { give_nickname = nick_the_cold_one change_martial = 6 }
				10 = { give_nickname = nick_the_terradon change_martial = 7 }
				10 = { give_nickname = nick_the_stegadon change_martial = 8 }
				10 = { give_nickname = nick_the_sauropod change_martial = 9 }
				10 = { give_nickname = nick_the_thunder_lizard change_martial = 10 }
				10 = { give_nickname = nick_the_carnosaur change_martial = 15 }
			}
			set_character_flag = rampage_revolter

			create_title = {
				tier = DUKE
				landless = yes
				temporary = yes
				rebel = yes
				culture = THIS
				name = "LUSTRIA_BEAST_RAMPAGE"
				holder = THIS
			}
			set_government_type = feudal_government
			random_list = {
				34 = {
					spawn_unit = {
						province = ROOT
						home = ROOT
						owner = THIS
						leader = THIS
						scaled_by_biggest_garrison = 0.8
						troops = {
							war_elephants = { 1 1 }
							light_cavalry = { 2 2 }
							light_infantry = { 3 3 }
						}
						attrition = 1.0
					}
					create_character = {
						random_traits = yes
						dynasty = none
						religion = THIS
						culture = THIS
						female = no
						age = 30
						trait = tough_soldier
					}
					new_character = {
						random_list = {
							10 = { give_nickname = nick_the_razorback change_martial = 5 }
							10 = { give_nickname = nick_the_cold_one change_martial = 6 }
							10 = { give_nickname = nick_the_terradon change_martial = 7 }
							10 = { give_nickname = nick_the_stegadon change_martial = 8 }
							10 = { give_nickname = nick_the_sauropod change_martial = 9 }
							10 = { give_nickname = nick_the_thunder_lizard change_martial = 10 }
							10 = { give_nickname = nick_the_carnosaur change_martial = 15 }
						}
						spawn_unit = {
							province = ROOT
							home = ROOT
							owner = PREV
							scaled_by_biggest_garrison = 0.8
							troops = {
								war_elephants = { 1 1 }
								light_cavalry = { 2 2 }
								light_infantry = { 7 7 }
							}
							attrition = 1.0
							disband_on_peace = yes
						}
					}
					create_character = {
						random_traits = yes
						dynasty = none
						religion = THIS
						culture = THIS
						female = no
						age = 23
						trait = tough_soldier
					}
					new_character = {
						random_list = {
							10 = { give_nickname = nick_the_razorback change_martial = 5 }
							10 = { give_nickname = nick_the_cold_one change_martial = 6 }
							10 = { give_nickname = nick_the_terradon change_martial = 7 }
							10 = { give_nickname = nick_the_stegadon change_martial = 8 }
							10 = { give_nickname = nick_the_sauropod change_martial = 9 }
							10 = { give_nickname = nick_the_thunder_lizard change_martial = 10 }
							10 = { give_nickname = nick_the_carnosaur change_martial = 15 }
						}
						spawn_unit = {
							province = ROOT
							home = ROOT
							owner = PREV
							scaled_by_biggest_garrison = 0.8
							troops = {
								war_elephants = { 1 1 }
								light_cavalry = { 2 2 }
								light_infantry = { 7 7 }
							}
							attrition = 1.0
							disband_on_peace = yes
						}
					}
				}
				33 = {
					spawn_unit = {
						province = ROOT
						home = ROOT
						owner = THIS
						leader = THIS
						scaled_by_biggest_garrison = 0.8
						troops = {
							light_cavalry = { 1 1 }
							light_infantry = { 9 9 }
						}
						attrition = 1.0
					}
					create_character = {
						random_traits = yes
						dynasty = none
						religion = THIS
						culture = THIS
						female = no
						age = 30
						trait = tough_soldier
					}
					new_character = {
						random_list = {
							10 = { give_nickname = nick_the_razorback change_martial = 5 }
							10 = { give_nickname = nick_the_cold_one change_martial = 6 }
							10 = { give_nickname = nick_the_terradon change_martial = 7 }
							10 = { give_nickname = nick_the_stegadon change_martial = 8 }
							10 = { give_nickname = nick_the_sauropod change_martial = 9 }
							10 = { give_nickname = nick_the_thunder_lizard change_martial = 10 }
							10 = { give_nickname = nick_the_carnosaur change_martial = 15 }
						}
						spawn_unit = {
							province = ROOT
							home = ROOT
							owner = PREV
							scaled_by_biggest_garrison = 0.8
							troops = {
								light_cavalry = { 1 1 }
								light_infantry = { 9 9 }
							}
							attrition = 1.0
							disband_on_peace = yes
						}
					}
					create_character = {
						random_traits = yes
						dynasty = none
						religion = THIS
						culture = THIS
						female = no
						age = 23
						trait = tough_soldier
					}
					new_character = {
						random_list = {
							10 = { give_nickname = nick_the_razorback change_martial = 5 }
							10 = { give_nickname = nick_the_cold_one change_martial = 6 }
							10 = { give_nickname = nick_the_terradon change_martial = 7 }
							10 = { give_nickname = nick_the_stegadon change_martial = 8 }
							10 = { give_nickname = nick_the_sauropod change_martial = 9 }
							10 = { give_nickname = nick_the_thunder_lizard change_martial = 10 }
							10 = { give_nickname = nick_the_carnosaur change_martial = 15 }
						}
						spawn_unit = {
							province = ROOT
							home = ROOT
							owner = PREV
							scaled_by_biggest_garrison = 0.8
							troops = {
								war_elephants = { 1 1 }
								light_cavalry = { 1 1 }
								light_infantry = { 9 9 }
							}
							attrition = 1.0
							disband_on_peace = yes
						}
					}
				}
				33 = {
					spawn_unit = {
						province = ROOT
						home = ROOT
						owner = THIS
						leader = THIS
						scaled_by_biggest_garrison = 0.8
						troops = {
								war_elephants = { 1 1 }
							light_infantry = { 10 10 }
						}
						attrition = 1.0
					}
					create_character = {
						random_traits = yes
						dynasty = none
						religion = THIS
						culture = THIS
						female = no
						age = 30
						trait = peasant_leader
					}
					new_character = {
						random_list = {
							10 = { give_nickname = nick_the_razorback change_martial = 5 }
							10 = { give_nickname = nick_the_cold_one change_martial = 6 }
							10 = { give_nickname = nick_the_terradon change_martial = 7 }
							10 = { give_nickname = nick_the_stegadon change_martial = 8 }
							10 = { give_nickname = nick_the_sauropod change_martial = 9 }
							10 = { give_nickname = nick_the_thunder_lizard change_martial = 10 }
							10 = { give_nickname = nick_the_carnosaur change_martial = 15 }
						}
						spawn_unit = {
							province = ROOT
							home = ROOT
							owner = PREV
							scaled_by_biggest_garrison = 0.8
							troops = {
								light_infantry = { 10 10 }
							}
							attrition = 1.0
							disband_on_peace = yes
						}
					}
					create_character = {
						random_traits = yes
						dynasty = none
						religion = THIS
						culture = THIS
						female = no
						age = 23
						trait = tough_soldier
					}
					new_character = {
						random_list = {
							10 = { give_nickname = nick_the_razorback change_martial = 5 }
							10 = { give_nickname = nick_the_cold_one change_martial = 6 }
							10 = { give_nickname = nick_the_terradon change_martial = 7 }
							10 = { give_nickname = nick_the_stegadon change_martial = 8 }
							10 = { give_nickname = nick_the_sauropod change_martial = 9 }
							10 = { give_nickname = nick_the_thunder_lizard change_martial = 10 }
							10 = { give_nickname = nick_the_carnosaur change_martial = 15 }
						}
						spawn_unit = {
							province = ROOT
							home = ROOT
							owner = PREV
							scaled_by_biggest_garrison = 0.8
							troops = {
								light_infantry = { 8 8 }
							}
							attrition = 1.0
							disband_on_peace = yes
						}
					}
				}
			}

			# DoW on the province top liege
			ROOT = {
				owner = {
					top_liege = {
						reverse_war = {
							target = PREVPREVPREV
							casus_belli = lustrian_rampage
							thirdparty_title = ROOT # The county
						}
					}
				}
			}
		}

		owner = {
			any_liege = { # Inform the lieges
				character_event = {
					id = lizardman.301
				}
			}
		}
	}

	option = {
		name = EVTOPTA_TOG_1060
		trigger = {
			owner = { religion_group = ROOT }
		}
	}
	option = {
		name = EVTOPTB_TOG_1060
		trigger = {
			owner = { NOT = { religion_group = ROOT	} }
		}
	}
}

character_event = {
	id = lizardman.301
	desc = lizardman301desc
	picture = "GFX_evt_lustria_dinosaur"
	border = GFX_event_normal_frame_war

	is_triggered_only = yes

	option = {
		name = EVTOPTA_TOG_1060
	}
}

# Religious Rebels seize a holding. Fired from 'on_siege_over_winner'. Owner of the winning unit is ROOT. The taken Holding title is in FROM.
character_event = {
	id = lizardman.302 #TOG.1065
	picture = "GFX_evt_lustria_dinosaur"

	hide_window = yes
	is_triggered_only = yes

	desc = OK

	trigger = {
		has_character_flag = rampage_revolter
		rebel = yes
	}

	option = {
		name = OK
		FROM = {
			if = {
				limit = {
					OR = {
						NOT = { location = { has_province_modifier = lustria_jungle } }
						location = { has_province_modifier = lustria_oppressive_jungle }
					}
				}
				destroy_random_building = yes
			}
			location = {
				if = {
					limit = {
						FROM = {
							is_capital = yes # The capital holding
						}
						has_province_modifier = lustria_jungle
						has_province_modifier = lustria_dense_jungle
					}
					add_province_modifier = {
						name = lustria_oppressive_jungle
						duration = -1
					}
					remove_province_modifier = lustria_dense_jungle
				}
				if = {
					limit = {
						FROM = {
							is_capital = yes # The capital holding
						}
						has_province_modifier = lustria_medium_jungle
						has_province_modifier = lustria_jungle
					}
					add_province_modifier = {
						name = lustria_dense_jungle
						duration = -1
					}
					remove_province_modifier = lustria_medium_jungle
				}
				if = {
					limit = {
						FROM = {
							is_capital = yes # The capital holding
						}
						has_province_modifier = lustria_light_jungle
						has_province_modifier = lustria_jungle
					}
					add_province_modifier = {
						name = lustria_medium_jungle
						duration = -1
					}
					remove_province_modifier = lustria_light_jungle
				}
				holder_scope = {
					character_event = { id = lizardman.303 }
				}
			}
		}
	}
}

character_event = {
	id = lizardman.303#TOG.1071
	desc = lizardman303desc
	picture = "GFX_evt_lustria_dinosaur"
	border = GFX_event_normal_frame_war

	is_triggered_only = yes

	option = {
		name = "EVTOPTA_TOG_1070"
	}
}

# Rebels kill a local character. Fired from 'on_siege_over_loc_chars'.
# Siege winner unit owner in the 'new_character' scope, lost holding title in FROM, local character in ROOT.
character_event = {
	id = lizardman.304 #TOG.1190
	desc = lizardman304desc
	border = GFX_event_normal_frame_war
	picture ="GFX_evt_lustria_dinosaur"

	is_triggered_only = yes

	trigger = {
		new_character = {
			rebel = yes
			has_character_flag = rampage_revolter
		}
	}

	weight_multiplier = {
		days = 1
		modifier = {
			factor = 0.5
			is_female = yes
		}
		modifier = {
			factor = 0.5
			is_adult = no
		}
	}

	immediate = {
		any_liege = { # Inform the victim's lieges
			character_event = {
				id = lizardman.305
			}
		}
		new_character = {
			ROOT = {
		if = {
 limit = {
 is_invincible_trigger = yes
 }

			antideath_effect = yes
			break = yes
			}
				death = {
					death_reason = death_rabble
					killer = PREV
				}
			}
		}
	}

	option = {
		name = EVTOPTA_TOG_1190
	}
}

# Lieges informed
character_event = {
	id = lizardman.305 #TOG.1191
	picture ="GFX_evt_lustria_dinosaur"
	desc = lizardman305desc
	border = GFX_event_normal_frame_war

	is_triggered_only = yes

	notification = yes

	ai = no

	option = {
		name = EVTOPTA_TOG_1191
	}
}

#400-499: Events dealing with Chameleon Skinks and other holy war stuff

# 400: Return of the Chameleon Skinks
narrative_event = {
	id = lizardman.400
	title = "lizardman400title"
	desc = "lizardman400desc"
	picture = "GFX_evt_crusaders"
	border = "GFX_event_narrative_frame_religion"

	major = yes
	only_playable = yes
	only_men = yes

	trigger = {
		religion = old_ones

		is_heretic = no

		year = 2040
		NOT = { is_title_active = d_chameleon_skinks }
		1 = {
			check_variable = {
				which = "doom_counter" value = 60 #The winds of chaos are strong
			}
		}


	}

	mean_time_to_happen = {
		months = 4
	}

	immediate = {
		activate_title = { title = d_chameleon_skinks status = yes }
		create_random_soldier = {
			dynasty = none
			random_traits = yes
			religion = ROOT
			name = "Oxyotl"
		}
		new_character = {
			add_trait = creature_skink
			d_chameleon_skinks = {
				grant_title = PREV
			}
			set_defacto_liege = THIS
			wealth = 600
		}

		religion_authority = {
			modifier = religious_order_formed
			years = 10
		}
	}
	option = {
		name = "GodsBePraised"
		trigger = {
			religion = ROOT
		}
	}
	option = {
		name = "OK"
		trigger = { NOT = { religion = ROOT } }
	}
}

namespace = slizardmen

# A Skink Priest is generated from a spawning pool
character_event = {
	id = slizardmen.1
	desc = EVTDESCslizardmens1
	picture = GFX_evt_lustria_jungle

	trigger = {
		culture = lizardman
		or = {
			trait = creature_skink
			trait = creature_slann
		}
		higher_tier_than = COUNT

		any_realm_province = {
			any_province_holding = {
				OR = {
					has_building = ct_spawning_pool
					has_building = ca_spawning_pool
				}
				count = 1
			}
		}
	}
	mean_time_to_happen = {
		years = 40
		modifier = {
			factor = 1.25
			lower_tier_than = KING
		}
		modifier = {
			factor = 0.5
			higher_tier_than = KING
		}
		modifier = {
			factor = 0.5
				NOR = {
					AND = {
						trait = lore_heavens
						trait = creature_skink
					}
					AND = {
						trait = lore_beasts
						trait = creature_skink
					}
				}
		}
		modifier = {
			factor = 0.25
			any_courtier = {
				trait = skink_priest
				count = 0
			}
		}
		modifier = {
			factor = 1.25
			any_courtier = {
				trait = skink_priest
				count = 2
			}
		}
		modifier = {
			factor = 1.25
			any_courtier = {
				trait = skink_priest
				count = 3
			}
		}
		modifier = {
			factor = 1.25
			any_courtier = {
				trait = skink_priest
				count = 4
			}
		}
		modifier = {
			factor = 1.25
			any_courtier = {
				trait = skink_priest
				count = 5
			}
		}
		modifier = {
			factor = 0.75
			any_realm_province = {
				any_province_holding = {
					ROOT = { is_liege_or_above = OWNER }
					or = {
						has_building = ct_spawning_pool
						has_building = ca_spawning_pool
					}
					count = 2
				}
			}
		}
		modifier = {
			factor = 0.75
			any_realm_province = {
				any_province_holding = {
					ROOT = { is_liege_or_above = OWNER }
					or = {
						has_building = ct_spawning_pool
						has_building = ca_spawning_pool
					}
					count = 3
				}
			}
		}
		modifier = {
			factor = 0.75
			any_realm_province = {
				any_province_holding = {
					ROOT = { is_liege_or_above = OWNER }
					or = {
						has_building = ct_spawning_pool
						has_building = ca_spawning_pool
					}
					count = 4
				}
			}
		}
		modifier = {
			factor = 0.75
			any_realm_province = {
				any_province_holding = {
					ROOT = { is_liege_or_above = OWNER }
					or = {
						has_building = ct_spawning_pool
						has_building = ca_spawning_pool
					}
					count = 5
				}
			}
		}
		modifier = {
			factor = 0.75
			any_realm_province = {
				any_province_holding = {
					ROOT = { is_liege_or_above = OWNER }
					or = {
						has_building = ct_spawning_pool
						has_building = ca_spawning_pool
					}
					count = 6
				}
			}
		}
		modifier = {
			factor = 0.75
			any_realm_province = {
				any_province_holding = {
					ROOT = { is_liege_or_above = OWNER }
					or = {
						has_building = ct_spawning_pool
						has_building = ca_spawning_pool
					}
					count = 7
				}
			}
		}
		modifier = {
			factor = 0.75
			any_realm_province = {
				any_province_holding = {
					or = {
						has_building = ct_spawning_pool
						has_building = ca_spawning_pool
					}
					count = 8
				}
			}
		}
		modifier = {
			factor = 0.75
			any_realm_province = {
				any_province_holding = {
					ROOT = { is_liege_or_above = OWNER }
					or = {
						has_building = ct_spawning_pool
						has_building = ca_spawning_pool
					}
					count = 9
				}
			}
		}
		modifier = {
			factor = 0.75
			any_realm_province = {
				any_province_holding = {
					ROOT = { is_liege_or_above = OWNER }
					ROOT = { is_liege_or_above = OWNER }
					or = {
						has_building = ct_spawning_pool
						has_building = ca_spawning_pool
					}
					count = 10
				}
			}
		}
	}
	option = {
		name = EVTOPTAslizardmens1
		piety = 50
		hidden_tooltip = {
			random_list = {
			40 = {
				create_character = {
							random_traits = yes
							attributes = { learning = 9 }
							dynasty = RANDOM
							religion = old_ones
							culture = lizardman
							female = no
							age = 16
							}
						}
					35 = {
					create_character = {
							random_traits = yes
							attributes = { learning = 11 }
							dynasty = RANDOM
							religion = old_ones
							culture = lizardman
							female = no
							age = 16
							}
						}
					15 = {
					create_character = {
							random_traits = yes
							attributes = { learning = 13 }
							dynasty = RANDOM
							religion = old_ones
							culture = lizardman
							female = no
							age = 16
							}
						}
					10 = {
					create_character = {
							random_traits = yes
							attributes = { learning = 15 }
							dynasty = RANDOM
							religion = old_ones
							culture = lizardman
							female = no
							age = 16
							}
						}
				}
				new_character = {
					piety = 20
					prestige = 50
					add_trait = creature_skink
					add_trait = skink_priest
					random_list = {
							65 = { add_trait = lore_heavens }
							35 = { add_trait = lore_beasts }
							}
					z_magic_power_random = yes
					}
				} #closes hiddentooltip
		ai_chance = { factor = 50
			}
	}
}

#On_death for Skinks Succession - Pick a random Priest if any is available
character_event = {
	id = slizardmen.2
	hide_window = yes

	is_triggered_only = yes
	only_rulers = yes

	trigger = {
		is_landed = yes
		higher_tier_than = BARON
		or = {
			trait = creature_skink
			trait = creature_slann
		}
	}

	immediate = {
		capital_scope = { province_event = { id = slizardmen.20003 days = 1 } }
	} #closesoption
}

#Ping to province while the randomly selected heir is chosen automatically by Open Elective
province_event = {
	id = slizardmen.20003
	hide_window = yes

	is_triggered_only = yes

	immediate = {
		holder_scope = { character_event = { id = slizardmen.20002 } }
	} #closesoption
}

# Inheritance
character_event = {
	id = slizardmen.20001
	hide_window = yes

	is_triggered_only = yes

	immediate = { 	#if the elected party is of a band, destroy the title.
			any_demesne_title = { limit = { mercenary = yes }
						activate_title = { title = THIS status = no }
						destroy_landed_title = THIS
						}
			wealth = FROM
			FROM = { clear_wealth = THIS }
			FROM = { abdicate_to = ROOT }
			FROM = { any_claim = { remove_claim = PREV } }
			any_vassal = { remove_title = title_skink_heir }
			any_courtier = { remove_title = title_skink_heir }
			any_demesne_title = { refill_holding_levy = yes }
			remove_title = title_skink_heir
			}
}

character_event = {
	id = slizardmen.20002
	hide_window = yes

	is_triggered_only = yes
	immediate = {
		if = { limit = { OR = { any_courtier = { has_minor_title = title_skink_heir
							OR = {	has_character_modifier = magic_power_1
								has_character_modifier = magic_power_2
								has_character_modifier = magic_power_3
								has_character_modifier = magic_power_4
								ROOT = {  NOT = { any_courtier = { trait = creature_skink
											OR = { has_character_modifier = magic_power_1
												has_character_modifier = magic_power_2
												has_character_modifier = magic_power_3
												has_character_modifier = magic_power_4 } } }
									NOT = { any_vassal = { trait = creature_skink
											OR = { has_character_modifier = magic_power_1
												has_character_modifier = magic_power_2
												has_character_modifier = magic_power_3
												has_character_modifier = magic_power_4 } } } }
								}
							 }
					any_vassal = { has_minor_title = title_skink_heir
							OR = {	has_character_modifier = magic_power_1
								has_character_modifier = magic_power_2
								has_character_modifier = magic_power_3
								has_character_modifier = magic_power_4
								ROOT = {  NOT = { any_courtier = { trait = creature_skink
											OR = { has_character_modifier = magic_power_1
												has_character_modifier = magic_power_2
												has_character_modifier = magic_power_3
												has_character_modifier = magic_power_4 } } }
									NOT = { any_vassal = { trait = creature_skink
											OR = { has_character_modifier = magic_power_1
												has_character_modifier = magic_power_2
												has_character_modifier = magic_power_3
												has_character_modifier = magic_power_4 } } } }
								}
							 }
						}
					}
			random_vassal = { limit = { has_minor_title = title_skink_heir }
						character_event = { id = slizardmen.20001 }
				break = yes }
			random_courtier = { limit = { has_minor_title = title_skink_heir }
						character_event = { id = slizardmen.20001 }
				break = yes }
			}
		if = { limit = { OR = { any_courtier = { has_minor_title = title_skink_heir
							NOR = {	has_character_modifier = magic_power_1
								has_character_modifier = magic_power_2
								has_character_modifier = magic_power_3
								has_character_modifier = magic_power_4 } }
					any_vassal = { has_minor_title = title_skink_heir
							NOR = {	has_character_modifier = magic_power_1
								has_character_modifier = magic_power_2
								has_character_modifier = magic_power_3
								has_character_modifier = magic_power_4 } }
					NAND = { any_courtier = { has_minor_title = title_skink_heir }
						any_vassal = { has_minor_title = title_skink_heir } }
					 }
				OR = { any_vassal = { trait = creature_skink
						OR = { has_character_modifier = magic_power_1
							has_character_modifier = magic_power_2
							has_character_modifier = magic_power_3
							has_character_modifier = magic_power_4 } }
					any_courtier = { trait = creature_skink
						OR = { has_character_modifier = magic_power_1
							has_character_modifier = magic_power_2
							has_character_modifier = magic_power_3
							has_character_modifier = magic_power_4 } }
						 }
				 }
			random_vassal = { limit = { trait = creature_skink
						OR = { has_character_modifier = magic_power_1
							has_character_modifier = magic_power_2
							has_character_modifier = magic_power_3
							has_character_modifier = magic_power_4 } }
						character_event = { id = slizardmen.20001 }
				break = yes }
			random_courtier = { limit = { trait = creature_skink
						OR = { has_character_modifier = magic_power_1
							has_character_modifier = magic_power_2
							has_character_modifier = magic_power_3
							has_character_modifier = magic_power_4 } }
						character_event = { id = slizardmen.20001 }
				break = yes }
			} #closesif
	} #closesoption
}

###########################################################
####Faction to remove misaligned Skink

# Skink Chief receives ultimatum letter
letter_event = {
	id = slizardmen.3
	desc = EVTDESCslizardmen3

	is_triggered_only = yes

	trigger = {
		FROM = { in_faction = faction_misaligned_chief }
	}

	immediate = {
		FROM = {
			diplomatic_immunity = yes
			any_faction_backer = {
				faction = faction_misaligned_chief
				diplomatic_immunity = yes
				}
			}
		}

	option = {
		name = EVTOPTAslizardmen3
		ai_chance = {
			factor = 60
			modifier = {
				factor = 0.15
				NOT = {
					FROM = {
						faction_power =  { faction = faction_misaligned_chief
									power = 0.5 }
						}
					}
			}
			modifier = {
				factor = 0.75
				trait = ambitious
			}
			modifier = {
				factor = 1.5
				trait = content
			}
			modifier = {
				factor = 1.25
				trait = humble
			}
			modifier = {
				factor = 1.5
				trait = diligent
			}
			modifier = {
				factor = 1.25
				trait = charitable
			}
			modifier = {
				factor = 1.25
				trait = patient
			}
			modifier = {
				factor = 1.25
				trait = content
			}
			modifier = {
				factor = 0		#Defective Skinks always fight
				trait = defective
			}
		}
			primary_title = {
				gain_title = { target = FROM type = faction_demand }
				}

		hidden_tooltip = {
			any_vassal = {
				limit = {
					ai = no
					NOT = { in_faction = faction_misaligned_chief }
				}
				character_event = { id = slizardmen.7 }
			}
			FROM = {
				letter_event = { id = slizardmen.5 }
				any_faction_backer = {
					faction = faction_misaligned_chief
					letter_event = { id = slizardmen.6 }
					diplomatic_immunity = no
				}
				diplomatic_immunity = no
			}
		}
	}
	option = {
		name = EVTOPTBslizardmen3
		ai_chance = {
			factor = 40
			modifier = {
				factor = 1.25
				trait = envious
			}
			modifier = {
				factor = 1.5
				trait = greedy
			}
			modifier = {
				factor = 1.25
				trait = proud
			}
			modifier = {
				factor = 1.25
				trait = wroth
			}
			modifier = {
				factor = 1.25
				trait = ambitious
			}
			modifier = {
				factor = 0.75
				FROM = { faction_power =  { faction = faction_misaligned_chief
							power = 1.25 } }
			}
			modifier = {
				factor = 0.75
				FROM = { faction_power =  { faction = faction_misaligned_chief
							power = 1.5 } }
			}
			modifier = {
				factor = 0.5
				FROM = {
					faction_power =  { faction = faction_misaligned_chief
								power = 1.0 }
					}
			}
			modifier = {
				factor = 0.5
				FROM = {
					faction_power =
					{
						faction = faction_misaligned_chief
						power = 2.0
					}
				}
			}
			modifier = {
				factor = 0.5
				FROM = {
					faction_power =
					{
						faction = faction_misaligned_chief
						power = 3.0
					}
				}
			}
			modifier = {
				factor = 0.5
				FROM = {
					faction_power =
					{
						faction = faction_misaligned_chief
						power = 4.0
					}
				}
			}
		}
		hidden_tooltip = {
			if = {
				limit = {
					FROM = { faction_power = { faction = faction_misaligned_chief power = 1.0 } }
				}
				random = {
					chance = 25
					character_event = { id = 45002 days = 120 } # Loyalists flock to the liege's banner
				}
			}
		}
		FROM = {
			letter_event = { id = slizardmen.4 days = 3 tooltip = "EVTTOOLTIP8100" }
			tooltip = {
				any_faction_backer = {
					faction = faction_misaligned_chief
				}
			}
			hidden_tooltip = {
				if = {
					limit = {
						NOT = { faction_power = { faction = faction_misaligned_chief power = 0.75 } }
					}
					random_list = {
						50 = {
						}
						30 = {
							character_event = { id = 45000 days = 17 } # A great number of rebels flock to the revolter's banner
						}
						20 = {
							character_event = { id = 45004 days = 17 } # Rebels flock to the revolter's banner
						}
					}
				}
				if = {
					limit = {
						faction_power = { faction = faction_misaligned_chief power = 0.75 }
						NOT = { faction_power = { faction = faction_misaligned_chief power = 1.5 } }
					}
					random_list = {
						75 = {
						}
						5 = {
							character_event = { id = 45000 days = 17 } # A great number of rebels flock to the revolter's banner
						}
						20 = {
							character_event = { id = 45004 days = 17 } # Rebels flock to the revolter's banner
						}
					}
				}
			}
		}
	}
}

# Demand rejected - Skink subjects react with war
letter_event = {
	id = slizardmen.4	#8105
	desc = EVTDESCslizardmen4

	is_triggered_only = yes

	option = {
		name = EVTOPTAslizardmen4

		clr_character_flag = faction_misaligned_chief_ultimatum_taken
			war = {
				target = FROM
				casus_belli = realignment_process_cb
				faction = faction_misaligned_chief
				}
		}
}

# Demand accepted - Faction leader is installed
letter_event = {
	id = slizardmen.5
	desc = EVTDESCslizardmen5

	is_triggered_only = yes

	option = {
		name = EVTOPTAslizardmen5
		clr_character_flag = faction_misaligned_chief_ultimatum_taken
		add_character_modifier = {
			name = faction_misaligned_chief_ultimatum_timer
			hidden = yes
			duration = 4000
		}
	}
}

# Inform faction backers - Faction has won
letter_event = {
	id = slizardmen.6			#8075
	desc = EVTDESCslizardmen6

	show_from_from = yes

	is_triggered_only = yes

	option = {
		name = EVTOPTAslizardmen6
		reverse_opinion = {
			modifier = opinion_grateful
			who = FROMFROM
			years = 100
		}
		add_character_modifier = {
			name = faction_misaligned_chief_ultimatum_timer
			hidden = yes
			duration = 4000
		}
	}
}

# Inform other vassals - Realignment has been accepted
character_event = {
	id = slizardmen.7			#8076
	desc = EVTDESCslizardmen7

	picture = GFX_evt_lizardmen_temple_fire
	border = GFX_event_normal_frame_intrigue

	show_from_from = yes

	is_triggered_only = yes

	option = {
		name = EVTOPTAslizardmen7
	}
}

######################################################
################## SKINK JOB ACTION EVENTS: EXPLORE JUNGLE

# slizardmen.8: Chancellor attacked by Naggaronts
character_event = {
	id = 122000 #USED TO BE slizardmen.8
	title = EVTNAMEslizardmen8
	desc = EVTDESCslizardmen8
	picture = GFX_evt_lustria_dinosaur

	capable_only = yes
	prisoner = no

	trigger = {
		has_job_action = action_explore_ruins
		trait = creature_skink
		NOT = { trait = maimed }
	}

	mean_time_to_happen = {
		years = 20

		modifier = {
			factor = 0.75
			NOT = { martial = 2 }
		}
		modifier = {
			factor = 0.75
			NOT = { martial = 3 }
		}
		modifier = {
			factor = 0.75
			NOT = { martial = 4 }
		}
		modifier = {
			factor = 0.75
			NOT = { martial = 5 }
		}
		modifier = {
			factor = 1.25
			martial = 10
		}
		modifier = {
			factor = 1.25
			martial = 11
		}
		modifier = {
			factor = 1.25
			martial = 12
		}
		modifier = {
			factor = 1.25
			martial = 13
		}
	}

	immediate = {
		hidden_tooltip = {
			random_list = {
				75 = {
					set_character_flag = chancellor_wounded
				}
				25 = {
					set_character_flag = chancellor_maimed
				}
			}
		}
	}

	option = {
		name = EVOPTAslizardmen8
		trigger = {
			has_character_flag = chancellor_wounded
		}
		add_trait = wounded
		liege = { letter_event = { id = slizardmen.9 } }
		clr_character_flag = chancellor_wounded
	}
	option = {
		name = EVOPTBslizardmen8
		trigger = { has_character_flag = chancellor_maimed }
		add_trait = maimed
		liege = { letter_event = { id = slizardmen.10 } }
		clr_character_flag = chancellor_maimed
	}
}

#slizardmen.9: Liege gets a letter about Chancellor being wounded
letter_event = {
	id = slizardmen.9
	desc = EVTDESCslizardmen9

	is_triggered_only = yes

	option = {
		name = EVTOPTAslizardmen9
		tooltip = {
			FROM = { add_trait = wounded }
		}
	}
}

#slizardmen.10: Liege gets a letter about Chancellor being maimed
letter_event = {
	id = slizardmen.10
	desc = EVTDESCslizardmen10

	is_triggered_only = yes

	option = {
		name = EVTOPTAslizardmen10
		tooltip = {
			FROM = { add_trait = maimed }
		}
	}
}

# Found fragment of ancient tablet.
character_event = {
	id = 122001 #USED TO BE slizardmen.11
	title = EVTNAMEslizardmen11
	desc = EVTDESCslizardmen11
	picture = GFX_evt_lizardmen_temples

	capable_only = yes
	prisoner = no

	trigger = {
		culture_group = lizardman_group
		has_job_action = action_explore_ruins
	}

	mean_time_to_happen = {
		years = 416

		modifier = {
			factor = 0.5
			OR = {
				has_focus = focus_scholarship
				liege = { has_focus = focus_scholarship }
			}
		}
		modifier = {
			factor = 1.25
			NOT = { diplomacy = 2 }
		}
		modifier = {
			factor = 1.25
			NOT = { diplomacy = 3 }
		}
		modifier = {
			factor = 1.25
			NOT = { diplomacy = 4 }
		}
		modifier = {
			factor = 1.25
			NOT = { diplomacy = 5 }
		}
		modifier = {
			factor = 0.75
			diplomacy = 10
		}
		modifier = {
			factor = 0.75
			diplomacy = 11
		}
		modifier = {
			factor = 0.75
			diplomacy = 12
		}
		modifier = {
			factor = 0.75
			diplomacy = 13
		}
	}

	option = {
		name = EVTOPTAslizardmen11
			piety = 150
			decadence = -7
			liege = { letter_event = { id = slizardmen.12 days = 3 } }

	}
}

# Notify Liege
letter_event = {
	id = slizardmen.12
	desc = EVTDESCslizardmen12

	is_triggered_only = yes

	option = {
		name = EVTOPTAslizardmen12
		random_list = {
			33 = { military_techpoints = 150 }
			33 = { economy_techpoints = 150 }
			33 = { culture_techpoints = 150 }
		}
		decadence = -5
		piety = 100
			FROM = {
				reverse_opinion = {
					modifier = opinion_grateful
					who = ROOT
					years = 15
					}
			}
	}
}

#The Lizardmen scourges enemy province to take sacrifical prisoners
# ROOT is attacker, FROM is province sieged
character_event = {
	id = slizardmen.13
	desc = EVTDESCslizardmen13
	picture = GFX_evt_lizardmen_saurus

	is_triggered_only = yes

	#only_rulers = yes

	trigger = {
		religion_group = old_ones_group
		FROM = { NOT = { location = { has_province_modifier = province_slave_raid } } }
		FROM = { NOT = { location = { has_province_modifier = province_scourged } } }
		FROM = { NOT = { location = { has_province_modifier = province_slave_raid_chaos_dwarf } } }
		any_war = { attacker = { character = ROOT }
				using_cb = flower_war_raid }
		FROM = { is_capital = yes
			NOT = { culture = nehekharan }
			owner = { NOR = { trait = creature_nehekharan
				trait = vampire_necrarch_visible
				trait = vampire_lahmian_visible
				trait = vampire_carstein_visible
				trait = vampire_jade_visible
				trait = vampire_blood_visible
				trait = vampire_mahtmasi_visible
				trait = vampire_strigoi_visible } } } #only against the living
	}

	option = { #Take all and burn their lands!
		name = EVTOPTAslizardmen13
		if = { limit = { FROM = { owner = { top_liege = { NOT = { character = PREV } } } } }
			FROM = { owner = { top_liege = { character_event = { id = slizardmen.15 } } } }
			}
		FROM = { owner = { character_event = { id = slizardmen.14 } } }
		FROM = { set_province_flag = flag_province_scourged }
		if = { limit = { FROM = { OR = { any_neighbor_province = { is_tribal = yes }
						has_province_flag = flag_province_scourged
						NOT = { num_of_settlements = 2 }
						}
						NOT = { is_nomadic = yes }
					}
				}
			random = { chance = 1
			FROM = { convert_to = TRIBAL }
				} #closesrandom
			} #closesif
		if = { limit = { FROM = { location = { NOT = { has_province_modifier = province_scourged } } } }
			FROM = { location = { add_province_modifier = { name = province_scourged
						duration = 900 } }
				}
		 } #closesif

		wealth = 150
		prestige = 150
		piety = 250
		decadence = 1
		change_variable = { which = "sacrifical_victims" value = 2 }
		if = { limit = { ai = yes }
		change_variable = { which = "sacrifical_victims" value = 2 } }
		ai_chance = {
			factor = 25
			modifier = {
				factor = 1.75
				ROOT = { OR = { trait = lunatic_3
						trait = lunatic_2 } }
				}
			modifier = {
				factor = 2
				trait = cruel
				}
			}
	}
	option = { #Just take them all!
		name = EVTOPTCslizardmen13
		if = { limit = { FROM = { owner = { top_liege = { NOT = { character = PREV } } } } }
			FROM = { owner = { top_liege = { character_event = { id = slizardmen.16 } } } }
			}
		if = { limit = { FROM = { location = { NOT = { has_province_modifier = province_slave_raid } } } }
			FROM = { location = { add_province_modifier = { name = province_slave_raid
									duration = 1000 } }
				}
		 } #closesif
		FROM = { owner = { character_event = { id = slizardmen.16 } } }
		wealth = 25
		prestige = 10
		piety = 10
		change_variable = { which = "sacrifical_victims" value = 6 }
		if = { limit = { ai = yes }
		change_variable = { which = "sacrifical_victims" value = 5 } }
		ai_chance = {
			factor = 75
			modifier = {
				factor = 1.5
				ROOT = { NOR = { trait = possessed
						trait = lunatic_3
						trait = lunatic_2 } }
				}
			modifier = {
				factor = 1.7
				trait = zealous
				}
			}
	}
	option = { #I don't care about this province
		name = EVTOPTBslizardmen13
		piety = -25
		prestige = -25
		if = { limit = { trait = cruel }
			random = { chance = 1
				remove_trait = cruel }
			}
		ai_chance = {
			factor = 1
			modifier = {
				factor = 1.2
				ROOT = { NOR = { trait = possessed
						trait = lunatic_3
						trait = lunatic_2 } }
				}
			modifier = {
				factor = 1.2
				trait = kind
				}
			}
	}
}

character_event = {
	id = slizardmen.14
	desc = EVTDESCslizardmen14
	picture = GFX_evt_lizardmen_saurus

	is_triggered_only = yes

	only_rulers = yes

	option = {
		name = EVTOPTAslizardmen14
		opinion = { modifier = opinion_scourged_lands
					who = FROM }
		ai_chance = { factor = 1 }
	}
}

character_event = {
	id = slizardmen.15
	desc = EVTDESCslizardmen15
	picture = GFX_evt_lizardmen_saurus

	is_triggered_only = yes

	only_rulers = yes

	option = {
		name = EVTOPTAslizardmen15
		opinion = { modifier = opinion_scourged_lands
					who = FROM }
		ai_chance = { factor = 1 }
	}
}

character_event = {
	id = slizardmen.16
	desc = EVTDESCslizardmen16
	picture = GFX_evt_lizardmen_saurus

	is_triggered_only = yes

	only_rulers = yes

	option = {
		name = EVTOPTAslizardmen16
		opinion = { modifier = opinion_scourged_lands
					who = FROM }
		ai_chance = { factor = 1 }
	}
}

#On war over, determine if there's enough victims for a sacrifice and to whom give them.
character_event = {
	id = slizardmen.17
	desc = { text = EVTDESCAslizardmen17
		trigger = { NOT = { check_variable = { which = "sacrifical_victims" which = "sacrifices_needed" } } }
		 }
	desc = { text = EVTDESCBslizardmen17
		trigger = { check_variable = { which = "sacrifical_victims" which = "sacrifices_needed" } }
		 }
	picture = GFX_evt_lizardmen_temples

	is_triggered_only = yes

	only_rulers = yes

	option = {
		name = EVTOPTAslizardmen17
		trigger = { NOT = { check_variable = { which = "sacrifical_victims" which = "sacrifices_needed" } } }
		decadence = 2
		piety = -150
		ai_chance = { factor = 1 }
	}
	option = {
		name = EVTOPTBslizardmen17
		trigger = {
			religion = old_ones
			check_variable = { which = "sacrifical_victims" which = "sacrifices_needed" }
		}
		hidden_tooltip = {
			set_variable = { which = "sacrifical_victims" value = 0 }
		}
		decadence = -4
		piety = 150
		 add_character_modifier = { name = favour_chotec
						duration = 1200 }
		ai_chance = { factor = 35 }
	}
	option = {
		name = EVTOPTCslizardmen17
		trigger = {
			religion = old_ones
			check_variable = { which = "sacrifical_victims" which = "sacrifices_needed" }
		}
		hidden_tooltip = {
			set_variable = { which = "sacrifical_victims" value = 0 }
		}
		decadence = -4
		piety = 150
		 add_character_modifier = { name = favour_quetzl
						duration = 1200 }
		ai_chance = { factor = 35 }
	}
	option = {
		name = EVTOPTDslizardmen17
		trigger = {
			religion = old_ones
			check_variable = { which = "sacrifical_victims" which = "sacrifices_needed" }
		}
		hidden_tooltip = {
			set_variable = { which = "sacrifical_victims" value = 0 }
		}
		decadence = -6
		piety = 150
		 add_character_modifier = { name = favour_xholankha
						duration = 1200 }
		ai_chance = { factor = 25 }
	}
	option = {
		name = EVTOPTEslizardmen17
		trigger = {
			religion = old_ones
			check_variable = { which = "sacrifical_victims" which = "sacrifices_needed_sotek" }
		}
		hidden_tooltip = {
			set_variable = { which = "sacrifical_victims" value = 0 }
		}
		decadence = 7
		piety = 150
		 add_character_modifier = { name = favour_sotek
						duration = 1200 }
		ai_chance = { factor = 5 }
	}
	option = {
		name = EVTOPTFslizardmen17
		trigger = {  religion = amazon
				check_variable = { which = "sacrifical_victims" value = 30 } }
		hidden_tooltip = { change_variable = { which = "sacrifical_victims" value = -30 } }
		decadence = -5
		piety = 150
		 add_character_modifier = { name = favour_rigg
						duration = 1200 }
		ai_chance = { factor = 5 }
	}
	option = {
		name = EVTOPTIslizardmen17
		trigger = {  religion = amazon
				check_variable = { which = "sacrifical_victims" value = 30 } }
		hidden_tooltip = { change_variable = { which = "sacrifical_victims" value = -30 } }
		decadence = -5
		piety = 150
		 add_character_modifier = { name = favour_serena
						duration = 1200 }
		ai_chance = { factor = 5 }
	}
	option = {
		name = EVTOPTGslizardmen17
		trigger = {
			OR = {
				religion = amazon
				religion = kukaili
			}
				check_variable = { which = "sacrifical_victims" value = 25 } }
		hidden_tooltip = { change_variable = { which = "sacrifical_victims" value = -25 } }
		decadence = -5
		piety = 150
		 add_character_modifier = { name = favour_am_gods
						duration = 1200 }
		ai_chance = { factor = 5 }
	}
	option = { #Take slaves for yourself
		name = EVTOPTHslizardmen17
		trigger = {  religion = amazon
				is_female = yes
				check_variable = { which = "sacrifical_victims" value = 15 } }
		hidden_tooltip = { change_variable = { which = "sacrifical_victims" value = -15 } }
		decadence = 15
		hidden_tooltip = {
			create_random_soldier = {
					random_traits = yes
					dynasty = NONE
					culture = ROOT
					religion = ROOT
					female = no
					}
				new_character = {
					add_trait = creature_human
					imprison = ROOT
					add_trait = content
					}
			create_random_soldier = {
					random_traits = yes
					dynasty = NONE
					culture = ROOT
					religion = ROOT
					female = no
					}
				new_character = {
					add_trait = creature_human
					imprison = ROOT
					add_trait = content
					}
			create_random_soldier = {
					random_traits = yes
					dynasty = NONE
					culture = ROOT
					religion = ROOT
					female = no
					}
				new_character = {
					add_trait = creature_human
					imprison = ROOT
					add_trait = content
					}
			create_random_soldier = {
					random_traits = yes
					dynasty = NONE
					culture = ROOT
					religion = ROOT
					female = no
					}
				new_character = {
					add_trait = creature_human
					imprison = ROOT
					add_trait = content
					}
			create_random_soldier = {
					random_traits = yes
					dynasty = NONE
					culture = ROOT
					religion = ROOT
					female = no
					}
				new_character = {
					add_trait = creature_human
					imprison = ROOT
					add_trait = content
					}
			}

		ai_chance = { factor = 1 }
	}
	option = {
		name = EVTOPTIslizardmen17
		trigger = {  religion = kukaili

				check_variable = { which = "sacrifical_victims" value = 30 } }
		hidden_tooltip = { change_variable = { which = "sacrifical_victims" value = -30 } }
		decadence = -5
		piety = 150
		 add_character_modifier = { name = favour_kukaili
						duration = 1200 }
		ai_chance = { factor = 5 }
	}
}

###################################################
###MISALIGNMENT - DECADENCE EVENTS#################

# A Slann dies (ping)
character_event = {
	id = slizardmen.18
	hide_window = yes

	is_triggered_only = yes

	trigger = { trait = creature_slann }

	immediate = {
		1 = { change_variable = { which = "doom_counter" value = 2 } }
		any_playable_ruler = { character_event = { id = slizardmen.20101 days = 1 } } #check for any living Slann
		liege = { character_event = { id = slizardmen.19 } }
	}
}

character_event = {
	id = slizardmen.19
	desc = EVTDESCslizardmen19
	picture = GFX_evt_lustria_slann

	is_triggered_only = yes

	trigger = { trait = creature_skink }

	only_rulers = yes

	option = {
		name = EVTOPTAslizardmen19
		decadence = 50
		add_trait = defective
		ai_chance = { factor = 1 }
		if = { limit = { independent = no }
			any_liege = { character_event = { id = slizardmen.20 } }
			 }
	}
}

character_event = {
	id = slizardmen.20
	desc = EVTDESCslizardmen20
	picture = GFX_evt_lustria_slann

	is_triggered_only = yes

	trigger = { trait = creature_skink }

	only_rulers = yes

	option = {
		name = EVTOPTAslizardmen20
		decadence = 40
		ai_chance = { factor = 1 }
	}
}

character_event = {
	id = slizardmen.20101
	desc = EVTDESCslizardmen20101
	picture = GFX_evt_lustria_slann

	is_triggered_only = yes

	trigger = { trait = creature_skink
		NOT = { creature_slann = { is_alive = yes } } }

	only_rulers = yes

	option = {
		name = EVTOPTAslizardmen20101
		set_global_flag = all_slann_dead
		decadence = 100
		add_trait = defective
		piety = -150
		1 = { change_variable = { which = "doom_counter" value = 10 } }
		ai_chance = { factor = 1 }
	}
}

#Too misaligned - Gained the Defective trait
character_event = {
	id = slizardmen.21
	desc = EVTDESCslizardmen21
	picture = GFX_evt_lizardmen_dying

	only_men = yes
	min_age = 14
	max_age = 350
	capable_only = yes
	prisoner = no
	religion = old_ones

	trigger = {
		uses_decadence = yes
		trait = creature_skink
		NOT = { trait = defective }
		higher_tier_than = BARON
		decadence = 90
	}

	mean_time_to_happen = {
		years = 3

		modifier = {
			factor = 0.85
			trait = indulgent_wastrel
		}
		modifier = {
			factor = 0.95
			trait = naive_appeaser
		}
		modifier = {
			factor = 0.95
			trait = amateurish_plotter
		}
		modifier = {
			factor = 0.5
			trait = hedonist
		}
		modifier = {
			factor = 0.95
			trait = drunkard
		}
		modifier = {
			factor = 0.75
			trait = addict
		}
		modifier = {
			factor = 0.85
			trait = gluttonous
		}
		modifier = {
			factor = 0.05
			trait = slothful
		}
		modifier = {
			factor = 0.5
			trait = cynical
		}
		modifier = {
			factor = 0.5
			trait = arbitrary
		}
		modifier = {
			factor = 3.0
			trait = just
		}
		modifier = {
			factor = 15.0
			trait = diligent
		}
		modifier = {
			factor = 2
			trait = temperate
		}
		modifier = {
			factor = 1.25
			trait = detached_priest
		}
		modifier = {
			factor = 1.35
			trait = martial_cleric
		}
		modifier = {
			factor = 1.45
			trait = scholarly_theologian
		}
		modifier = {
			factor = 1.5
			trait = mastermind_theologian
		}
		modifier = {
			factor = 2
			trait = skink_priest
		}
		modifier = {
			factor = 0.5
			decadence = 95
		}
		modifier = {
			factor = 0.01
			decadence = 100
		}
	}

	option = {
		name = EVTOPTAslizardmen21
		add_trait = defective
		decadence = 5
		piety = -400
	}
}

# Misaligned - Ambitious
character_event = {
	id = slizardmen.22
	desc = EVTDESCslizardmen22
	picture = GFX_evt_lizardmen_dying

	only_men = yes
	min_age = 14
	max_age = 350
	capable_only = yes
	prisoner = no
	only_rulers = yes
	religion = old_ones

	trigger = {
		uses_decadence = yes
		trait = ambitious
	}

	mean_time_to_happen = {
		years = 100
	}

	option = {
		name = EVTOPTAslizardmen22
		decadence = 2
	}
}

# Misaligned - Content
character_event = {
	id = slizardmen.22001
	desc = EVTDESCslizardmen22001
	picture = GFX_evt_lizardmen_saurus

	only_men = yes
	min_age = 14
	max_age = 350
	capable_only = yes
	prisoner = no
	only_rulers = yes
	religion = old_ones

	trigger = {
		uses_decadence = yes
		trait = content
	}

	mean_time_to_happen = {
		years = 125
	}

	option = {
		name = EVTOPTAslizardmen22001
		decadence = -2
	}
}

# Misaligned - Slothful
character_event = {
	id = slizardmen.22002
	desc = EVTDESCslizardmen22002
	picture = GFX_evt_lizardmen_dying

	only_men = yes
	min_age = 14
	max_age = 350
	capable_only = yes
	prisoner = no
	only_rulers = yes
	religion = old_ones

	trigger = {
		uses_decadence = yes
		trait = slothful
	}

	mean_time_to_happen = {
		years = 100
	}

	option = {
		name = EVTOPTAslizardmen22002
		decadence = 6
	}
}

# Misaligned - Diligent
character_event = {
	id = slizardmen.22003
	desc = EVTDESCslizardmen22003
	picture = GFX_evt_lizardmen_saurus

	only_men = yes
	min_age = 14
	max_age = 350
	capable_only = yes
	prisoner = no
	only_rulers = yes
	religion = old_ones

	trigger = {
		uses_decadence = yes
		trait = diligent
	}

	mean_time_to_happen = {
		years = 150
	}

	option = {
		name = EVTOPTAslizardmen22003
		decadence = -5
	}
}

# Misaligned - Wroth
character_event = {
	id = slizardmen.22004
	desc = EVTDESCslizardmen22004
	picture = GFX_evt_lizardmen_dying

	only_men = yes
	min_age = 14
	max_age = 350
	capable_only = yes
	prisoner = no
	only_rulers = yes
	religion = old_ones

	trigger = {
		uses_decadence = yes
		trait = wroth
	}

	mean_time_to_happen = {
		years = 100
	}

	option = {
		name = EVTOPTAslizardmen22004
		decadence = 2
	}
}

# Misaligned - Patient
character_event = {
	id = slizardmen.22005
	desc = EVTDESCslizardmen22005
	picture = GFX_evt_lizardmen_dying

	only_men = yes
	min_age = 14
	max_age = 350
	capable_only = yes
	prisoner = no
	only_rulers = yes
	religion = old_ones

	trigger = {
		uses_decadence = yes
		trait = patient
	}

	mean_time_to_happen = {
		years = 125
	}

	option = {
		name = EVTOPTAslizardmen22005
		decadence = -1
	}
}

# Misaligned - Honest
character_event = {
	id = slizardmen.22006
	desc = EVTDESCslizardmen22006
	picture = GFX_evt_lizardmen_saurus

	only_men = yes
	min_age = 14
	max_age = 350
	capable_only = yes
	prisoner = no
	only_rulers = yes
	religion = old_ones

	trigger = {
		uses_decadence = yes
		trait = honest
	}

	mean_time_to_happen = {
		years = 150
	}

	option = {
		name = EVTOPTAslizardmen22006
		decadence = -1
	}
}

# Misaligned - Deceitful
character_event = {
	id = slizardmen.22007
	desc = EVTDESCslizardmen22007
	picture = GFX_evt_lizardmen_dying

	only_men = yes
	min_age = 14
	max_age = 350
	capable_only = yes
	prisoner = no
	only_rulers = yes
	religion = old_ones

	trigger = {
		uses_decadence = yes
		trait = deceitful
	}

	mean_time_to_happen = {
		years = 150
	}

	option = {
		name = EVTOPTAslizardmen22007
		decadence = 1
	}
}

# Misaligned - Greedy
character_event = {
	id = slizardmen.22008
	desc = EVTDESCslizardmen22008
	picture = GFX_evt_lizardmen_dying

	only_men = yes
	min_age = 14
	max_age = 350
	capable_only = yes
	prisoner = no
	only_rulers = yes
	religion = old_ones

	trigger = {
		uses_decadence = yes
		trait = greedy
	}

	mean_time_to_happen = {
		years = 125
	}

	option = {
		name = EVTOPTAslizardmen22008
		decadence = 1
	}
}

# Misaligned - Charitable
character_event = {
	id = slizardmen.22009
	desc = EVTDESCslizardmen22009
	picture = GFX_evt_lizardmen_dying

	only_men = yes
	min_age = 14
	max_age = 350
	capable_only = yes
	prisoner = no
	only_rulers = yes
	religion = old_ones

	trigger = {
		uses_decadence = yes
		trait = charitable
	}

	mean_time_to_happen = {
		years = 125
	}

	option = {
		name = EVTOPTAslizardmen22009
		decadence = 2
	}
}

# Misaligned - Brave
character_event = {
	id = slizardmen.22010
	desc = EVTDESCslizardmen22010
	picture = GFX_evt_lizardmen_dying

	only_men = yes
	min_age = 14
	max_age = 350
	capable_only = yes
	prisoner = no
	only_rulers = yes
	religion = old_ones

	trigger = {
		uses_decadence = yes
		trait = brave
	}

	mean_time_to_happen = {
		years = 125
	}

	option = {
		name = EVTOPTAslizardmen22010
		decadence = 2
	}
}

# Misaligned - Zealous
character_event = {
	id = slizardmen.22011
	desc = EVTDESCslizardmen22011
	picture = GFX_evt_lizardmen_saurus

	only_men = yes
	min_age = 14
	max_age = 350
	capable_only = yes
	prisoner = no
	only_rulers = yes
	religion = old_ones

	trigger = {
		uses_decadence = yes
		trait = zealous
	}

	mean_time_to_happen = {
		years = 125
	}

	option = {
		name = EVTOPTAslizardmen22011
		decadence = -3
	}
}

# Misaligned - Cynical
character_event = {
	id = slizardmen.22012
	desc = EVTDESCslizardmen22012
	picture = GFX_evt_lizardmen_dying

	only_men = yes
	min_age = 14
	max_age = 350
	capable_only = yes
	prisoner = no
	only_rulers = yes
	religion = old_ones

	trigger = {
		uses_decadence = yes
		trait = cynical
	}

	mean_time_to_happen = {
		years = 125
	}

	option = {
		name = EVTOPTAslizardmen22012
		decadence = 5
	}
}

############################

####The Sleeping Slann#########

# Umbrella event
character_event = {
	id = slizardmen.23
	hide_window = yes

	only_men = yes
	min_age = 2000
	religion = old_ones
	ai = yes

	trigger = {
		trait = creature_slann
		trait = lizardman_sleepingslann
		independent = no
		}

	mean_time_to_happen = {
		years = 6
	}

	immediate = {
		random_list = {
			40 = {
				top_liege = {
					character_event = { id = slizardmen.24 }
				}
			}
			# Reclined his head on a different side
			39 = {
				top_liege = {
					character_event = { id = slizardmen.25 }
				}
			}	# Flies around his body
			20 = {
				top_liege = {
					character_event = { id = slizardmen.26 }
				}
			}	# Snores
			1 = {
				top_liege = {
					character_event = { id = slizardmen.27 }
				}
			}	# Asks for maggot soup
		}
	}
}

# A Skink agrees with your evaluation of the Slann's command
character_event = {
	id = slizardmen.23001
	desc = EVTDESCslizardmen23001

	is_triggered_only = yes
	notification = yes

	immediate = { decadence = -1
			if = { limit = { FROM = { trait = skink_priest } }
				decadence = -7 }
			if = { limit = { FROM = { is_ruler = yes } }
				decadence = -4 }
			if = { limit = { FROM = { trait = defective } }
				decadence = 1 }
			}
	option = {
		}
}

# A Skink disagrees with your evaluation of the Slann's command
character_event = {
	id = slizardmen.23002
	desc = EVTDESCslizardmen23002

	is_triggered_only = yes
	notification = yes

	immediate = { decadence = 4
			if = { limit = { FROM = { trait = skink_priest } }
				decadence = 10 }
			if = { limit = { FROM = { is_ruler = yes } }
				decadence = 5 }
			if = { limit = { FROM = { trait = defective } }
				decadence = -3 }
			}
	option = {
		}
}

# The Slann reclined his head in a different position
character_event = {
	id = slizardmen.24
	desc = EVTDESCslizardmen24
	picture = GFX_evt_lustria_slann

	is_triggered_only = yes
	trigger = {
		not = {
			trait = creature_slann
		}
	}

	option = { #He wants a ritual to be performed!
		name = EVTOPTAslizardmen24
		piety = 50
		hidden_tooltip = {
			any_vassal = {
				limit = {
					trait = creature_skink
					is_ruler = yes
				}
				character_event = { id = slizardmen.24001 }
			}
			any_courtier = {
				limit = {
					trait = skink_priest
					NOT = {
						is_ruler = yes
					}
				}
				character_event = { id = slizardmen.24001 }
			}
		}
		ai_chance = { factor = 25 }
	}

	option = { #He's warning us of a coming threat!
		name = EVTOPTBslizardmen24
		prestige = 50
		hidden_tooltip = { any_vassal = { limit = { trait = creature_skink
							is_ruler = yes }
						character_event = { id = slizardmen.24002 } }
				any_courtier = { limit = { trait = skink_priest
							NOT = { is_ruler = yes } }
						character_event = { id = slizardmen.24002 } } }
		ai_chance = { factor = 25 }
	}

	option = { #He's wants to be moved to a better position!
		name = EVTOPTCslizardmen24
		piety = 25
		hidden_tooltip = { any_vassal = { limit = { trait = creature_skink
							is_ruler = yes }
						character_event = { id = slizardmen.24003 } }
				any_courtier = { limit = { trait = creature_skink
							NOT = { is_ruler = yes } }
						character_event = { id = slizardmen.24003 } } }
		ai_chance = { factor = 25 }
	}

	option = { #He's wants his neck to be cleaned!
		name = EVTOPTDslizardmen24
		prestige = 25
		hidden_tooltip = { any_vassal = { limit = { trait = creature_skink
							is_ruler = yes }
						character_event = { id = slizardmen.24004 } }
				any_courtier = { limit = { trait = skink_priest
							NOT = { is_ruler = yes } }
						character_event = { id = slizardmen.24004 } } }
		ai_chance = { factor = 25 }
	}
}

# The Skink Hierophant believes the Slann wants a ritual to be performed
character_event = {
	id = slizardmen.24001
	desc = EVTDESCslizardmen24001
	picture = GFX_evt_lustria_slann

	is_triggered_only = yes

	option = {	# I Agree
		name = EVTOPTAslizardmen24001
		FROM = { character_event = { id = slizardmen.23001 } }
		ai_chance = { factor = 45
			modifier = { factor = 1.5
				trait = zealous
				}
			modifier = { factor = 1.5
				trait = diligent
				}
			modifier = { factor = 0.5
				trait = cynical
				}
			modifier = { factor = 0.75
				trait = slothful
				}
			modifier = { factor = 1.25
				FROMFROM = { trait = brave }
				}
			modifier = { factor = 1.25
				FROMFROM = { trait = mystic }
				}
			modifier = { factor = 1.25
				FROMFROM = { trait = diligent }
				}
			modifier = { factor = 1.25
				FROMFROM = { trait = zealous }
				}
			modifier = { factor = 1.25
				FROMFROM = { trait = ambitious }
				}
			modifier = { factor = 0.85
				FROMFROM = { trait = cynical }
				}
			modifier = { factor = 0.85
				FROMFROM = { trait = slothful }
				}
			modifier = { factor = 0.85
				FROMFROM = { trait = gluttonous }
				}
			modifier = { factor = 0.85
				FROMFROM = { trait = craven }
				}
			modifier = { factor = 0.85
				FROMFROM = { trait = content }
				}
		 }
	}
	option = {	# I disagree
		name = EVTOPTBslizardmen24001
		FROM = { character_event = { id = slizardmen.23002 } }
		ai_chance = { factor = 55
			modifier = {
				factor = 1.5
				NOT = { opinion = { who = FROM
						 value = 20 } }
				}
			modifier = {
				factor = 1.5
				NOT = { opinion = { who = FROM
						 value = 0 } }
				}
			modifier = {
				factor = 1.75
				NOT = { opinion = { who = FROM
						 value = -50 } }
				}

		}
	}
}

# The Skink Hierophant believes the Slann his warning of a coming threat
character_event = {
	id = slizardmen.24002
	desc = EVTDESCslizardmen24002
	picture = GFX_evt_lustria_slann

	is_triggered_only = yes

	option = {	# I Agree
		name = EVTOPTAslizardmen24002
		FROM = { character_event = { id = slizardmen.23001 } }
		ai_chance = { factor = 45
			modifier = { factor = 1.5
				trait = paranoid
				}
			modifier = { factor = 1.5
				trait = craven
				}
			modifier = { factor = 0.5
				trait = trusting
				}
			modifier = { factor = 0.75
				trait = brave
				}
			modifier = { factor = 0.85
				FROMFROM = { trait = brave }
				}
			modifier = { factor = 1.25
				FROMFROM = { trait = paranoid }
				}
			modifier = { factor = 1.25
				FROMFROM = { trait = craven }
				}
			modifier = { factor = 1.25
				FROMFROM = { trait = zealous }
				}
			modifier = { factor = 1.25
				FROMFROM = { trait = content }
				}
			modifier = { factor = 0.85
				FROMFROM = { trait = slothful }
				}
			modifier = { factor = 0.85
				FROMFROM = { trait = trusting }
				}
			modifier = { factor = 0.85
				FROMFROM = { trait = gregarious }
				}
			modifier = { factor = 0.85
				FROMFROM = { trait = ambitious }
				}
		 }
	}
	option = {	# I disagree
		name = EVTOPTBslizardmen24002
		FROM = { character_event = { id = slizardmen.23002 } }
		ai_chance = { factor = 55
			modifier = {
				factor = 1.5
				NOT = { opinion = { who = FROM
						 value = 20 } }
				}
			modifier = {
				factor = 1.5
				NOT = { opinion = { who = FROM
						 value = 0 } }
				}
			modifier = {
				factor = 1.75
				NOT = { opinion = { who = FROM
						 value = -50 } }
				}

		}
	}
}

# The Skink Hierophant believes the Slann wants to be moved somewhere else
character_event = {
	id = slizardmen.24003
	desc = EVTDESCslizardmen24003
	picture = GFX_evt_lustria_slann

	is_triggered_only = yes

	option = {	# I Agree
		name = EVTOPTAslizardmen24003
		FROM = { character_event = { id = slizardmen.23001 } }
		ai_chance = { factor = 60
			modifier = { factor = 1.5
				trait = cruel
				}
			modifier = { factor = 1.5
				trait = gregarious
				}
			modifier = { factor = 0.5
				trait = kind
				}
			modifier = { factor = 0.75
				trait = shy
				}
			modifier = { factor = 1.25
				FROMFROM = { trait = slothful }
				}
			modifier = { factor = 1.25
				FROMFROM = { trait = envious }
				}
			modifier = { factor = 1.25
				FROMFROM = { trait = greedy }
				}
			modifier = { factor = 1.25
				FROMFROM = { trait = cynical }
				}
			modifier = { factor = 1.25
				FROMFROM = { trait = wroth }
				}
			modifier = { factor = 0.85
				FROMFROM = { trait = diligent }
				}
			modifier = { factor = 0.85
				FROMFROM = { trait = kind }
				}
			modifier = { factor = 0.85
				FROMFROM = { trait = charitable }
				}
			modifier = { factor = 0.85
				FROMFROM = { trait = zealous }
				}
			modifier = { factor = 0.85
				FROMFROM = { trait = patient }
				}
		 }
	}
	option = {	# I disagree
		name = EVTOPTBslizardmen24003
		FROM = { character_event = { id = slizardmen.23002 } }
		ai_chance = { factor = 40
			modifier = {
				factor = 1.5
				NOT = { opinion = { who = FROM
						 value = 20 } }
				}
			modifier = {
				factor = 1.5
				NOT = { opinion = { who = FROM
						 value = 0 } }
				}
			modifier = {
				factor = 1.75
				NOT = { opinion = { who = FROM
						 value = -50 } }
				}

		}
	}
}

# The Skink Hierophant believes the Slann wants his neck cleaned
character_event = {
	id = slizardmen.24004
	desc = EVTDESCslizardmen24004
	picture = GFX_evt_lustria_slann

	is_triggered_only = yes

	option = {	# I Agree
		name = EVTOPTAslizardmen24004
		FROM = { character_event = { id = slizardmen.23001 } }
		ai_chance = { factor = 60
			modifier = { factor = 1.5
				trait = cruel
				}
			modifier = { factor = 1.5
				trait = diligent
				}
			modifier = { factor = 0.5
				trait = kind
				}
			modifier = { factor = 0.75
				trait = slothful
				}
			modifier = { factor = 1.25
				FROMFROM = { trait = slothful }
				}
			modifier = { factor = 1.25
				FROMFROM = { trait = envious }
				}
			modifier = { factor = 1.25
				FROMFROM = { trait = proud }
				}
			modifier = { factor = 1.25
				FROMFROM = { trait = cynical }
				}
			modifier = { factor = 1.25
				FROMFROM = { trait = wroth }
				}
			modifier = { factor = 0.85
				FROMFROM = { trait = diligent }
				}
			modifier = { factor = 0.85
				FROMFROM = { trait = kind }
				}
			modifier = { factor = 0.85
				FROMFROM = { trait = humble }
				}
			modifier = { factor = 0.85
				FROMFROM = { trait = zealous }
				}
			modifier = { factor = 0.85
				FROMFROM = { trait = patient }
				}
		 }
	}
	option = {	# I disagree
		name = EVTOPTBslizardmen24004
		FROM = { character_event = { id = slizardmen.23002 } }
		ai_chance = { factor = 40
			modifier = {
				factor = 1.5
				NOT = { opinion = { who = FROM
						 value = 20 } }
				}
			modifier = {
				factor = 1.5
				NOT = { opinion = { who = FROM
						 value = 0 } }
				}
			modifier = {
				factor = 1.75
				NOT = { opinion = { who = FROM
						 value = -50 } }
				}

		}
	}
}

# Flies are flying in strange shape around the Slann's head
character_event = {
	id = slizardmen.25
	desc = EVTDESCslizardmen25
	picture = GFX_evt_lustria_slann

	is_triggered_only = yes
	trigger = {
		not = {
			trait = creature_slann
		}
	}
	option = { #They're mimicking a costellation to look for!
		name = EVTOPTAslizardmen25
		piety = 50
		hidden_tooltip = { any_vassal = { limit = { trait = creature_skink
							is_ruler = yes }
						character_event = { id = slizardmen.25001 } }
				any_courtier = { limit = { trait = skink_priest
							NOT = { is_ruler = yes } }
						character_event = { id = slizardmen.25001 } } }
		ai_chance = { factor = 25 }
	}

	option = { #They're showing the flow of magic!
		name = EVTOPTBslizardmen25
		prestige = 50
		hidden_tooltip = { any_vassal = { limit = { trait = creature_skink
							is_ruler = yes }
						character_event = { id = slizardmen.25002 } }
				any_courtier = { limit = { trait = skink_priest
							NOT = { is_ruler = yes } }
						character_event = { id = slizardmen.25002 } } }
		ai_chance = { factor = 25 }
	}

	option = { #He called them to use as component for some spell!
		name = EVTOPTCslizardmen25
		piety = 25
		hidden_tooltip = { any_vassal = { limit = { trait = creature_skink
							is_ruler = yes }
						character_event = { id = slizardmen.25003 } }
				any_courtier = { limit = { trait = creature_skink
							NOT = { is_ruler = yes } }
						character_event = { id = slizardmen.25003 } } }
		ai_chance = { factor = 25 }
	}

	option = { #They're sucking his sweat! Shoo them!
		name = EVTOPTDslizardmen25
		prestige = 25
		hidden_tooltip = { any_vassal = { limit = { trait = creature_skink
							is_ruler = yes }
						character_event = { id = slizardmen.25004 } }
				any_courtier = { limit = { trait = skink_priest
							NOT = { is_ruler = yes } }
						character_event = { id = slizardmen.25004 } } }
		ai_chance = { factor = 25 }
	}
}

# The Skink Hierophant believes the flies are mimicking a constellation
character_event = {
	id = slizardmen.25001
	desc = EVTDESCslizardmen25001
	picture = GFX_evt_lustria_slann

	is_triggered_only = yes

	option = {	# I Agree
		name = EVTOPTAslizardmen25001
		FROM = { character_event = { id = slizardmen.23001 } }
		ai_chance = { factor = 55
			modifier = { factor = 1.5
				trait = zealous
				}
			modifier = { factor = 1.5
				trait = scholar
				}
			modifier = { factor = 0.5
				trait = cynical
				}
			modifier = { factor = 0.75
				trait = dim
				}
			modifier = { factor = 0.75
				trait = dumb
				}
			modifier = { factor = 0.75
				trait = slow
				}
			modifier = { factor = 0.75
				trait = idiot
				}
			modifier = { factor = 0.75
				trait = imbecile
				}
			modifier = { factor = 1.25
				FROMFROM = { trait = diligent }
				}
			modifier = { factor = 1.25
				FROMFROM = { trait = scholar }
				}
			modifier = { factor = 1.25
				FROMFROM = { trait = mystic }
				}
			modifier = { factor = 1.25
				FROMFROM = { trait = zealous }
				}
			modifier = { factor = 1.25
				FROMFROM = { trait = gregarious }
				}
			modifier = { factor = 0.85
				FROMFROM = { trait = slothful }
				}
			modifier = { factor = 0.85
				FROMFROM = { trait = wroth }
				}
			modifier = { factor = 0.85
				FROMFROM = { trait = brave }
				}
			modifier = { factor = 0.85
				FROMFROM = { trait = cynical }
				}
			modifier = { factor = 0.85
				FROMFROM = { trait = shy }
				}
		 }
	}
	option = {	# I disagree
		name = EVTOPTBslizardmen25001
		FROM = { character_event = { id = slizardmen.23002 } }
		ai_chance = { factor = 45
			modifier = {
				factor = 1.5
				NOT = { opinion = { who = FROM
						 value = 20 } }
				}
			modifier = {
				factor = 1.5
				NOT = { opinion = { who = FROM
						 value = 0 } }
				}
			modifier = {
				factor = 1.75
				NOT = { opinion = { who = FROM
						 value = -50 } }
				}

		}
	}
}

# The Skink Hierophant believes the flies are following the flow of magic
character_event = {
	id = slizardmen.25002
	desc = EVTDESCslizardmen25002
	picture = GFX_evt_lustria_slann

	is_triggered_only = yes

	option = {	# I Agree
		name = EVTOPTAslizardmen25002
		FROM = { character_event = { id = slizardmen.23001 } }
		ai_chance = { factor = 55
			modifier = { factor = 1.5
				trait = paranoid
				}
			modifier = { factor = 1.5
				trait = mystic
				}
			modifier = { factor = 0.5
				trait = trusting
				}
			modifier = { factor = 0.75
				trait = hunter
				}
			modifier = { factor = 1.75
				FROM = { trait = skink_priest }
				NOT = { trait = skink_priest }
				}
			modifier = { factor = 0.35
				FROM = { NOT = { trait = skink_priest } }
				trait = skink_priest
				}
			modifier = { factor = 1.25
				FROMFROM = { trait = diligent }
				}
			modifier = { factor = 1.25
				FROMFROM = { trait = scholar }
				}
			modifier = { factor = 1.25
				FROMFROM = { trait = mystic }
				}
			modifier = { factor = 1.25
				FROMFROM = { trait = zealous }
				}
			modifier = { factor = 1.25
				FROMFROM = { trait = ambitious }
				}
			modifier = { factor = 0.85
				FROMFROM = { trait = slothful }
				}
			modifier = { factor = 0.85
				FROMFROM = { trait = wroth }
				}
			modifier = { factor = 0.85
				FROMFROM = { trait = brave }
				}
			modifier = { factor = 0.85
				FROMFROM = { trait = cynical }
				}
			modifier = { factor = 0.85
				FROMFROM = { trait = content }
				}
		 }
	}
	option = {	# I disagree
		name = EVTOPTBslizardmen25002
		FROM = { character_event = { id = slizardmen.23002 } }
		ai_chance = { factor = 45
			modifier = {
				factor = 1.5
				NOT = { opinion = { who = FROM
						 value = 20 } }
				}
			modifier = {
				factor = 1.5
				NOT = { opinion = { who = FROM
						 value = 0 } }
				}
			modifier = {
				factor = 1.75
				NOT = { opinion = { who = FROM
						 value = -50 } }
				}

		}
	}
}

# The Skink Hierophant believes the flies are a component for a spell
character_event = {
	id = slizardmen.25003
	desc = EVTDESCslizardmen25003
	picture = GFX_evt_lustria_slann

	is_triggered_only = yes

	option = {	# I Agree
		name = EVTOPTAslizardmen25003
		FROM = { character_event = { id = slizardmen.23001 } }
		ai_chance = { factor = 60
			modifier = { factor = 1.5
				trait = mystic
				}
			modifier = { factor = 1.5
				trait = skink_priest
				}
			modifier = { factor = 0.5
				trait = cynical
				}
			modifier = { factor = 0.75
				trait = gluttonous
				}
			modifier = { factor = 1.25
				FROMFROM = { trait = slothful }
				}
			modifier = { factor = 1.25
				FROMFROM = { trait = gluttonous }
				}
			modifier = { factor = 1.25
				FROMFROM = { trait = hedonist }
				}
			modifier = { factor = 1.25
				FROMFROM = { trait = content }
				}
			modifier = { factor = 1.25
				FROMFROM = { trait = craven }
				}
			modifier = { factor = 0.85
				FROMFROM = { trait = diligent }
				}
			modifier = { factor = 0.85
				FROMFROM = { trait = temperate }
				}
			modifier = { factor = 0.85
				FROMFROM = { trait = brave }
				}
			modifier = { factor = 0.85
				FROMFROM = { trait = ambitious }
				}
			modifier = { factor = 0.85
				FROMFROM = { trait = greedy }
				}
		 }
	}
	option = {	# I disagree
		name = EVTOPTBslizardmen25003
		FROM = { character_event = { id = slizardmen.23002 } }
		ai_chance = { factor = 40
			modifier = {
				factor = 1.5
				NOT = { opinion = { who = FROM
						 value = 20 } }
				}
			modifier = {
				factor = 1.5
				NOT = { opinion = { who = FROM
						 value = 0 } }
				}
			modifier = {
				factor = 1.75
				NOT = { opinion = { who = FROM
						 value = -50 } }
				}

		}
	}
}

# The Skink Hierophant believes the flies are bothering the Slann
character_event = {
	id = slizardmen.25004
	desc = EVTDESCslizardmen25004
	picture = GFX_evt_lustria_slann

	is_triggered_only = yes

	option = {	# I Agree
		name = EVTOPTAslizardmen25004
		FROM = { character_event = { id = slizardmen.23001 } }
		ai_chance = { factor = 40
			modifier = { factor = 1.5
				trait = cynical
				}
			modifier = { factor = 1.5
				trait = kind
				}
			modifier = { factor = 0.5
				trait = zealous
				}
			modifier = { factor = 0.75
				trait = cruel
				}
			modifier = { factor = 1.25
				FROMFROM = { trait = cruel }
				}
			modifier = { factor = 1.25
				FROMFROM = { trait = proud }
				}
			modifier = { factor = 1.25
				FROMFROM = { trait = envious }
				}
			modifier = { factor = 1.25
				FROMFROM = { trait = cynical }
				}
			modifier = { factor = 1.25
				FROMFROM = { trait = shy }
				}
			modifier = { factor = 0.85
				FROMFROM = { trait = kind }
				}
			modifier = { factor = 0.85
				FROMFROM = { trait = humble }
				}
			modifier = { factor = 0.85
				FROMFROM = { trait = charitable }
				}
			modifier = { factor = 0.85
				FROMFROM = { trait = zealous }
				}
			modifier = { factor = 0.85
				FROMFROM = { trait = gregarious }
				}
		 }
	}
	option = {	# I disagree
		name = EVTOPTBslizardmen25004
		FROM = { character_event = { id = slizardmen.23002 } }
		ai_chance = { factor = 60
			modifier = {
				factor = 1.5
				NOT = { opinion = { who = FROM
						 value = 20 } }
				}
			modifier = {
				factor = 1.5
				NOT = { opinion = { who = FROM
						 value = 0 } }
				}
			modifier = {
				factor = 1.75
				NOT = { opinion = { who = FROM
						 value = -50 } }
				}

		}
	}
}

# The Slann just started snoring!
character_event = {
	id = slizardmen.26
	desc = EVTDESCslizardmen26
	picture = GFX_evt_lustria_slann

	is_triggered_only = yes
	trigger = {
		not = {
			trait = creature_slann
		}
	}
	option = { #It's a prophecy in the tongue of the Old Ones!
		name = EVTOPTAslizardmen26
		piety = 50
		hidden_tooltip = { any_vassal = { limit = { trait = creature_skink
							is_ruler = yes }
						character_event = { id = slizardmen.26001 } }
				any_courtier = { limit = { trait = skink_priest
							NOT = { is_ruler = yes } }
						character_event = { id = slizardmen.26001 } } }
		ai_chance = { factor = 25 }
	}

	option = { #He's casting a very complicate spell!
		name = EVTOPTBslizardmen26
		prestige = 50
		hidden_tooltip = { any_vassal = { limit = { trait = creature_skink
							is_ruler = yes }
						character_event = { id = slizardmen.26002 } }
				any_courtier = { limit = { trait = skink_priest
							NOT = { is_ruler = yes } }
						character_event = { id = slizardmen.26002 } } }
		ai_chance = { factor = 25 }
	}

	option = { #The light is bothering him!
		name = EVTOPTCslizardmen26
		piety = 25
		hidden_tooltip = { any_vassal = { limit = { trait = creature_skink
							is_ruler = yes }
						character_event = { id = slizardmen.26003 } }
				any_courtier = { limit = { trait = creature_skink
							NOT = { is_ruler = yes } }
						character_event = { id = slizardmen.26003 } } }
		ai_chance = { factor = 25 }
	}

	option = { #He's asking for food!
		name = EVTOPTDslizardmen26
		prestige = 25
		hidden_tooltip = { any_vassal = { limit = { trait = creature_skink
							is_ruler = yes }
						character_event = { id = slizardmen.26004 } }
				any_courtier = { limit = { trait = skink_priest
							NOT = { is_ruler = yes } }
						character_event = { id = slizardmen.26004 } } }
		ai_chance = { factor = 25 }
	}
}

# The Skink Hierophant believes the Slann is giving a prophecy
character_event = {
	id = slizardmen.26001
	desc = EVTDESCslizardmen26001
	picture = GFX_evt_lustria_slann

	is_triggered_only = yes

	option = {	# I Agree
		name = EVTOPTAslizardmen26001
		FROM = { character_event = { id = slizardmen.23001 } }
		ai_chance = { factor = 55
			modifier = { factor = 1.5
				trait = zealous
				}
			modifier = { factor = 1.5
				trait = scholar
				}
			modifier = { factor = 1.5
				trait = mystic
				}
			modifier = { factor = 0.75
				trait = skink_priest
				}
			modifier = { factor = 0.5
				trait = cynical
				}
			modifier = { factor = 1.25
				FROMFROM = { trait = diligent }
				}
			modifier = { factor = 1.25
				FROMFROM = { trait = deceitful }
				}
			modifier = { factor = 1.25
				FROMFROM = { trait = shy }
				}
			modifier = { factor = 1.25
				FROMFROM = { trait = zealous }
				}
			modifier = { factor = 1.25
				FROMFROM = { trait = mystic }
				}
			modifier = { factor = 0.85
				FROMFROM = { trait = slothful }
				}
			modifier = { factor = 0.85
				FROMFROM = { trait = honest }
				}
			modifier = { factor = 0.85
				FROMFROM = { trait = gregarious }
				}
			modifier = { factor = 0.85
				FROMFROM = { trait = cynical }
				}
			modifier = { factor = 0.85
				FROMFROM = { trait = wroth }
				}
		 }
	}
	option = {	# I disagree
		name = EVTOPTBslizardmen26001
		FROM = { character_event = { id = slizardmen.23002 } }
		ai_chance = { factor = 45
			modifier = {
				factor = 1.5
				NOT = { opinion = { who = FROM
						 value = 20 } }
				}
			modifier = {
				factor = 1.5
				NOT = { opinion = { who = FROM
						 value = 0 } }
				}
			modifier = {
				factor = 1.75
				NOT = { opinion = { who = FROM
						 value = -50 } }
				}

		}
	}
}

# The Skink Hierophant believes the Slann is casting a complex spell
character_event = {
	id = slizardmen.26002
	desc = EVTDESCslizardmen26002
	picture = GFX_evt_lustria_slann

	is_triggered_only = yes

	option = {	# I Agree
		name = EVTOPTAslizardmen26002
		FROM = { character_event = { id = slizardmen.23001 } }
		ai_chance = { factor = 55
			modifier = { factor = 1.5
				trait = paranoid
				}
			modifier = { factor = 1.5
				trait = mystic
				}
			modifier = { factor = 0.5
				trait = trusting
				}
			modifier = { factor = 0.75
				trait = hunter
				}
			modifier = { factor = 1.75
				FROM = { trait = skink_priest }
				NOT = { trait = skink_priest }
				}
			modifier = { factor = 0.35
				FROM = { NOT = { trait = skink_priest } }
				trait = skink_priest
				}
			modifier = { factor = 1.25
				trait = dim
				}
			modifier = { factor = 1.25
				trait = dumb
				}
			modifier = { factor = 1.25
				trait = slow
				}
			modifier = { factor = 1.25
				trait = idiot
				}
			modifier = { factor = 1.25
				trait = imbecile
				}
			modifier = { factor = 1.25
				FROMFROM = { trait = diligent }
				}
			modifier = { factor = 1.25
				FROMFROM = { trait = scholar }
				}
			modifier = { factor = 1.25
				FROMFROM = { trait = mystic }
				}
			modifier = { factor = 1.25
				FROMFROM = { trait = ambitious }
				}
			modifier = { factor = 1.25
				FROMFROM = { trait = shy }
				}
			modifier = { factor = 0.85
				FROMFROM = { trait = slothful }
				}
			modifier = { factor = 0.85
				FROMFROM = { trait = wroth }
				}
			modifier = { factor = 0.85
				FROMFROM = { trait = brave }
				}
			modifier = { factor = 0.85
				FROMFROM = { trait = content }
				}
			modifier = { factor = 0.85
				FROMFROM = { trait = honest }
				}
		 }
	}
	option = {	# I disagree
		name = EVTOPTBslizardmen26002
		FROM = { character_event = { id = slizardmen.23002 } }
		ai_chance = { factor = 45
			modifier = {
				factor = 1.5
				NOT = { opinion = { who = FROM
						 value = 20 } }
				}
			modifier = {
				factor = 1.5
				NOT = { opinion = { who = FROM
						 value = 0 } }
				}
			modifier = {
				factor = 1.75
				NOT = { opinion = { who = FROM
						 value = -50 } }
				}

		}
	}
}

# The Skink Hierophant believes the Slann is bothered by the light
character_event = {
	id = slizardmen.26003
	desc = EVTDESCslizardmen26003
	picture = GFX_evt_lustria_slann

	is_triggered_only = yes

	option = {	# I Agree
		name = EVTOPTAslizardmen26003
		FROM = { character_event = { id = slizardmen.23001 } }
		ai_chance = { factor = 60
			modifier = { factor = 1.5
				trait = cynical
				}
			modifier = { factor = 1.5
				trait = diligent
				}
			modifier = { factor = 1.5
				trait = kind
				}
			modifier = { factor = 0.5
				trait = zealous
				}
			modifier = { factor = 0.75
				trait = slothful
				}
			modifier = { factor = 0.75
				trait = cruel
				}
			modifier = { factor = 1.25
				FROMFROM = { trait = slothful }
				}
			modifier = { factor = 1.25
				FROMFROM = { trait = ambitious }
				}
			modifier = { factor = 1.25
				FROMFROM = { trait = proud }
				}
			modifier = { factor = 1.25
				FROMFROM = { trait = cruel }
				}
			modifier = { factor = 1.25
				FROMFROM = { trait = shy }
				}
			modifier = { factor = 0.85
				FROMFROM = { trait = diligent }
				}
			modifier = { factor = 0.85
				FROMFROM = { trait = content }
				}
			modifier = { factor = 0.85
				FROMFROM = { trait = humble }
				}
			modifier = { factor = 0.85
				FROMFROM = { trait = kind }
				}
			modifier = { factor = 0.85
				FROMFROM = { trait = gregarious }
				}
		 }
	}
	option = {	# I disagree
		name = EVTOPTBslizardmen26003
		FROM = { character_event = { id = slizardmen.23002 } }
		ai_chance = { factor = 40
			modifier = {
				factor = 1.5
				NOT = { opinion = { who = FROM
						 value = 20 } }
				}
			modifier = {
				factor = 1.5
				NOT = { opinion = { who = FROM
						 value = 0 } }
				}
			modifier = {
				factor = 1.75
				NOT = { opinion = { who = FROM
						 value = -50 } }
				}

		}
	}
}

# The Skink Hierophant believes the Slann is hungry
character_event = {
	id = slizardmen.26004
	desc = EVTDESCslizardmen26004
	picture = GFX_evt_lustria_slann

	is_triggered_only = yes

	option = {	# I Agree
		name = EVTOPTAslizardmen26004
		FROM = { character_event = { id = slizardmen.23001 } }
		ai_chance = { factor = 50
			modifier = { factor = 1.5
				trait = gluttonous
				}
			modifier = { factor = 1.5
				trait = kind
				}
			modifier = { factor = 0.5
				trait = temperate
				}
			modifier = { factor = 0.75
				trait = cruel
				}
			modifier = { factor = 0.75
				trait = zealous
				}
			modifier = { factor = 1.25
				FROMFROM = { trait = gluttonous }
				}
			modifier = { factor = 1.25
				FROMFROM = { trait = gregarious }
				}
			modifier = { factor = 1.25
				FROMFROM = { trait = greedy }
				}
			modifier = { factor = 1.25
				FROMFROM = { trait = slothful }
				}
			modifier = { factor = 1.25
				FROMFROM = { trait = proud }
				}
			modifier = { factor = 0.85
				FROMFROM = { trait = temperate }
				}
			modifier = { factor = 0.85
				FROMFROM = { trait = shy }
				}
			modifier = { factor = 0.85
				FROMFROM = { trait = charitable }
				}
			modifier = { factor = 0.85
				FROMFROM = { trait = diligent }
				}
			modifier = { factor = 0.85
				FROMFROM = { trait = humble }
				}
		 }
	}
	option = {	# I disagree
		name = EVTOPTBslizardmen26004
		FROM = { character_event = { id = slizardmen.23002 } }
		ai_chance = { factor = 50
			modifier = {
				factor = 1.5
				NOT = { opinion = { who = FROM
						 value = 20 } }
				}
			modifier = {
				factor = 1.5
				NOT = { opinion = { who = FROM
						 value = 0 } }
				}
			modifier = {
				factor = 1.75
				NOT = { opinion = { who = FROM
						 value = -50 } }
				}

		}
	}
}

# The Slann just asked for a maggot soup!
character_event = {
	id = slizardmen.27
	desc = EVTDESCslizardmen27
	picture = GFX_evt_lustria_slann

	is_triggered_only = yes
	trigger = {
		not = {
			trait = creature_slann
		}
	}
	option = { #It's a metaphor for something to come!
		name = EVTOPTAslizardmen27
		piety = 50
		hidden_tooltip = { any_vassal = { limit = { trait = creature_skink
							is_ruler = yes }
						character_event = { id = slizardmen.27001 } }
				any_courtier = { limit = { trait = skink_priest
							NOT = { is_ruler = yes } }
						character_event = { id = slizardmen.27001 } } }
		ai_chance = { factor = 25 }
	}

	option = { #He demands a sacrifice in his name!
		name = EVTOPTBslizardmen27
		prestige = 50
		hidden_tooltip = { any_vassal = { limit = { trait = creature_skink
							is_ruler = yes }
						character_event = { id = slizardmen.27002 } }
				any_courtier = { limit = { trait = skink_priest
							NOT = { is_ruler = yes } }
						character_event = { id = slizardmen.27002 } } }
		ai_chance = { factor = 25 }
	}

	option = { #His skin is dry! He wants to be washed!
		name = EVTOPTCslizardmen27
		piety = 25
		hidden_tooltip = { any_vassal = { limit = { trait = creature_skink
							is_ruler = yes }
						character_event = { id = slizardmen.27003 } }
				any_courtier = { limit = { trait = creature_skink
							NOT = { is_ruler = yes } }
						character_event = { id = slizardmen.27003 } } }
		ai_chance = { factor = 25 }
	}

	option = { #He wants to eat a maggot soup!
		name = EVTOPTDslizardmen27
		prestige = 25
		hidden_tooltip = { any_vassal = { limit = { trait = creature_skink
							is_ruler = yes }
						character_event = { id = slizardmen.27004 } }
				any_courtier = { limit = { trait = skink_priest
							NOT = { is_ruler = yes } }
						character_event = { id = slizardmen.27004 } } }
		ai_chance = { factor = 25 }
	}
}

# The Skink Hierophant believes the Slann is speaking in riddles
character_event = {
	id = slizardmen.27001
	desc = EVTDESCslizardmen27001
	picture = GFX_evt_lustria_slann

	is_triggered_only = yes

	option = {	# I Agree
		name = EVTOPTAslizardmen27001
		FROM = { character_event = { id = slizardmen.23001 } }
		ai_chance = { factor = 60
			modifier = { factor = 1.5
				trait = zealous
				}
			modifier = { factor = 1.5
				trait = deceitful
				}
			modifier = { factor = 1.5
				trait = paranoid
				}
			modifier = { factor = 1.25
				trait = skink_priest
				}
			modifier = { factor = 0.5
				trait = honest
				}
			modifier = { factor = 0.5
				trait = trusting
				}
			modifier = { factor = 0.5
				trait = cynical
				}
			modifier = { factor = 0.75
				trait = dim
				}
			modifier = { factor = 0.75
				trait = dumb
				}
			modifier = { factor = 0.75
				trait = slow
				}
			modifier = { factor = 0.75
				trait = idiot
				}
			modifier = { factor = 0.75
				trait = imbecile
				}
			modifier = { factor = 1.25
				FROMFROM = { trait = deceitful }
				}
			modifier = { factor = 1.25
				FROMFROM = { trait = cruel }
				}
			modifier = { factor = 1.25
				FROMFROM = { trait = mystic }
				}
			modifier = { factor = 1.25
				FROMFROM = { trait = zealous }
				}
			modifier = { factor = 1.25
				FROMFROM = { trait = shy }
				}
			modifier = { factor = 0.85
				FROMFROM = { trait = honest }
				}
			modifier = { factor = 0.85
				FROMFROM = { trait = kind }
				}
			modifier = { factor = 0.85
				FROMFROM = { trait = brave }
				}
			modifier = { factor = 0.85
				FROMFROM = { trait = cynical }
				}
			modifier = { factor = 0.85
				FROMFROM = { trait = gregarious }
				}
		 }
	}
	option = {	# I disagree
		name = EVTOPTBslizardmen27001
		FROM = { character_event = { id = slizardmen.23002 } }
		ai_chance = { factor = 40
			modifier = {
				factor = 1.5
				NOT = { opinion = { who = FROM
						 value = 20 } }
				}
			modifier = {
				factor = 1.5
				NOT = { opinion = { who = FROM
						 value = 0 } }
				}
			modifier = {
				factor = 1.75
				NOT = { opinion = { who = FROM
						 value = -50 } }
				}

		}
	}
}

# The Skink Hierophant believes the Slann is demanding a sacrifice
character_event = {
	id = slizardmen.27002
	desc = EVTDESCslizardmen27002
	picture = GFX_evt_lustria_slann

	is_triggered_only = yes

	option = {	# I Agree
		name = EVTOPTAslizardmen27002
		FROM = { character_event = { id = slizardmen.23001 } }
		ai_chance = { factor = 60
			modifier = { factor = 1.5
				trait = zealous
				}
			modifier = { factor = 1.5
				trait = mystic
				}
			modifier = { factor = 1.5
				trait = impaler
				}
			modifier = { factor = 1.5
				trait = cruel
				}
			modifier = { factor = 0.75
				trait = trusting
				}
			modifier = { factor = 0.75
				trait = honest
				}
			modifier = { factor = 1.25
				FROMFROM = { trait = cruel }
				}
			modifier = { factor = 1.25
				FROMFROM = { trait = greedy }
				}
			modifier = { factor = 1.25
				FROMFROM = { trait = ambitious }
				}
			modifier = { factor = 1.25
				FROMFROM = { trait = zealous }
				}
			modifier = { factor = 1.25
				FROMFROM = { trait = envious }
				}
			modifier = { factor = 0.85
				FROMFROM = { trait = kind }
				}
			modifier = { factor = 0.85
				FROMFROM = { trait = charitable }
				}
			modifier = { factor = 0.85
				FROMFROM = { trait = content }
				}
			modifier = { factor = 0.85
				FROMFROM = { trait = cynical }
				}
			modifier = { factor = 0.85
				FROMFROM = { trait = humble }
				}
		 }
	}
	option = {	# I disagree
		name = EVTOPTBslizardmen27002
		FROM = { character_event = { id = slizardmen.23002 } }
		ai_chance = { factor = 40
			modifier = {
				factor = 1.5
				NOT = { opinion = { who = FROM
						 value = 20 } }
				}
			modifier = {
				factor = 1.5
				NOT = { opinion = { who = FROM
						 value = 0 } }
				}
			modifier = {
				factor = 1.75
				NOT = { opinion = { who = FROM
						 value = -50 } }
				}

		}
	}
}

# The Skink Hierophant believes the Slann wants to be bathed
character_event = {
	id = slizardmen.27003
	desc = EVTDESCslizardmen27003
	picture = GFX_evt_lustria_slann

	is_triggered_only = yes

	option = {	# I Agree
		name = EVTOPTAslizardmen27003
		FROM = { character_event = { id = slizardmen.23001 } }
		ai_chance = { factor = 60
			modifier = { factor = 1.25
				trait = cynical
				}
			modifier = { factor = 1.5
				trait = diligent
				}
			modifier = { factor = 1.5
				trait = kind
				}
			modifier = { factor = 0.75
				trait = zealous
				}
			modifier = { factor = 0.75
				trait = slothful
				}
			modifier = { factor = 0.75
				trait = cruel
				}
			modifier = { factor = 1.25
				FROMFROM = { trait = slothful }
				}
			modifier = { factor = 1.25
				FROMFROM = { trait = proud }
				}
			modifier = { factor = 1.25
				FROMFROM = { trait = content }
				}
			modifier = { factor = 1.25
				FROMFROM = { trait = cynical }
				}
			modifier = { factor = 1.25
				FROMFROM = { trait = gregarious }
				}
			modifier = { factor = 0.85
				FROMFROM = { trait = diligent }
				}
			modifier = { factor = 0.85
				FROMFROM = { trait = humble }
				}
			modifier = { factor = 0.85
				FROMFROM = { trait = ambitious }
				}
			modifier = { factor = 0.85
				FROMFROM = { trait = zealous }
				}
			modifier = { factor = 0.85
				FROMFROM = { trait = shy }
				}
		 }
	}
	option = {	# I disagree
		name = EVTOPTBslizardmen27003
		FROM = { character_event = { id = slizardmen.23002 } }
		ai_chance = { factor = 40
			modifier = {
				factor = 1.5
				NOT = { opinion = { who = FROM
						 value = 20 } }
				}
			modifier = {
				factor = 1.5
				NOT = { opinion = { who = FROM
						 value = 0 } }
				}
			modifier = {
				factor = 1.75
				NOT = { opinion = { who = FROM
						 value = -50 } }
				}

		}
	}
}

# The Skink Hierophant believes the Slann wants to be fed
character_event = {
	id = slizardmen.27004
	desc = EVTDESCslizardmen27004
	picture = GFX_evt_lustria_slann

	is_triggered_only = yes

	option = {	# I Agree
		name = EVTOPTAslizardmen27004
		FROM = { character_event = { id = slizardmen.23001 } }
		ai_chance = { factor = 40
			modifier = { factor = 1.5
				trait = gluttonous
				}
			modifier = { factor = 1.5
				trait = kind
				}
			modifier = { factor = 0.5
				trait = temperate
				}
			modifier = { factor = 0.75
				trait = cruel
				}
			modifier = { factor = 0.75
				trait = zealous
				}
			modifier = { factor = 1.25
				FROMFROM = { trait = slothful }
				}
			modifier = { factor = 1.25
				FROMFROM = { trait = gluttonous }
				}
			modifier = { factor = 1.25
				FROMFROM = { trait = greedy }
				}
			modifier = { factor = 1.25
				FROMFROM = { trait = craven }
				}
			modifier = { factor = 1.25
				FROMFROM = { trait = gregarious }
				}
			modifier = { factor = 0.85
				FROMFROM = { trait = diligent }
				}
			modifier = { factor = 0.85
				FROMFROM = { trait = temperate }
				}
			modifier = { factor = 0.85
				FROMFROM = { trait = charitable }
				}
			modifier = { factor = 0.85
				FROMFROM = { trait = brave }
				}
			modifier = { factor = 0.85
				FROMFROM = { trait = shy }
				}
		 }
	}
	option = {	# I disagree
		name = EVTOPTBslizardmen27004
		FROM = { character_event = { id = slizardmen.23002 } }
		ai_chance = { factor = 60
			modifier = {
				factor = 1.5
				NOT = { opinion = { who = FROM
						 value = 20 } }
				}
			modifier = {
				factor = 1.5
				NOT = { opinion = { who = FROM
						 value = 0 } }
				}
			modifier = {
				factor = 1.75
				NOT = { opinion = { who = FROM
						 value = -50 } }
				}

		}
	}
}

##################################
# LIZARDMEN GREAT EXPEDITION

character_event = {
	id = slizardmen.28
	hide_window = yes

	only_men = yes
	min_age = 2000
	religion = old_ones
	ai = yes

	trigger = {
			religion_authority = 0.05
		NOT = { creature_slann = { has_character_modifier = tablet_cooldown } }
		any_independent_ruler = { NOT = { religion_group = old_ones_group }
					higher_tier_than = DUKE }
		trait = lizardman_sleepingslann
		independent = no

		}

	mean_time_to_happen = {
		years = 83
	}

	immediate = {  add_character_modifier = { name = tablet_cooldown
						hidden = yes
						duration = 10950 }

			top_liege = { long_character_event = { id = slizardmen.29 } }
	}
}

#On first start, to set the stage
#character_event = {
#	id = slizardmen.28001
#	hide_window = yes
#
#	only_men = yes
#	min_age = 2000
#	religion = old_ones
#	ai = yes
#
#	trigger = {
#			religion_authority = 0.05
#		top_liege = { ai = no }
#		NOT = { has_global_flag = startup_liz_expedition }
#		NOT = { creature_slann = { has_character_modifier = tablet_cooldown } }
#		any_independent_ruler = { NOT = { religion_group = old_ones_group }
#					NOT = { character = ROOT }
#						is_landed = yes
#						is_nomadic = no
#						any_demesne_title = { tier = KING }
#					higher_tier_than = DUKE }
#		trait = lizardman_sleepingslann
#		independent = no
#
#		}
#
#	is_triggered_only = yes
#
#	immediate = { set_global_flag = startup_liz_expedition
#			 add_character_modifier = { name = tablet_cooldown
#						hidden = yes
#						duration = 10950 }
#
#			top_liege = { long_character_event = { id = slizardmen.29 days = 200 random = 150 } }
#	}
#}

# The Slann calls for a great mission.
long_character_event = {
	id = slizardmen.29
	title = EVTTITLEslizardmen29
	desc = EVTDESCslizardmen29
	picture = GFX_evt_lustria_slann

	is_triggered_only = yes

	option = {
		name = EVTOPTAslizardmen29
		piety = 50
		spawn_fleet = {
			province = closest
			owner = ROOT
			match_character = ROOT
			match_mult = 2
			match_min = 100
			disband_on_peace = yes
			earmark = liz_fleet
		}
		set_character_flag = sanctioned_by_slann
			random_independent_ruler = { limit = { NOT = { religion_group = old_ones_group }
								NOT = { character = ROOT }
								NOT = { capital_scope = { region = world_dragon_isles } }
										is_landed = yes
										is_nomadic = no
										any_demesne_title = { tier = KING }
										higher_tier_than = DUKE }
						hidden_tooltip = { long_character_event = { id = slizardmen.29001 } }

						random_realm_province = {
									ROOT = {
										war = {
											casus_belli = tablet_search
											target = PREVPREVPREV # The top liege of the owner
											thirdparty_title = PREVPREV # The de jure kingdom
											tier = KING
											}
										}
									}
								 }

		hidden_tooltip = { any_independent_ruler = { limit = { religion = ROOT
								capital_scope = { region = world_new_world }
								NOT = { character = ROOT } }
								long_character_event = { id = slizardmen.29002 days = 2 random = 7 } } }
		ai_chance = { factor = 1 }
	}
}

# Notify Attacked party
long_character_event = {
	id = slizardmen.29001
	title = EVTTITLEslizardmen29001
	desc = EVTDESCslizardmen29001
	picture = GFX_evt_lizardmen_saurus

	is_triggered_only = yes

	option = {
		name = EVTOPTAslizardmen29001
		random_realm_province = {
					limit = { kingdom = { OR = { has_holder = no
									holder_scope = { character = ROOT } }
								}
						}
								ROOT = {
									FROM = {
										war = {
											casus_belli = tablet_search
											target = ROOT # The top liege of the owner
											thirdparty_title = PREVPREV
											tier = KING
											}
										}
									}
								 }

		ai_chance = { factor = 1 }
	}
}

# Notify Other independent Skinks
long_character_event = {
	id = slizardmen.29002
	title = EVTTITLEslizardmen29002
	desc = EVTDESCslizardmen29002
	picture = GFX_evt_lustria_slann

	is_triggered_only = yes

	option = {
		name = EVTOPTAslizardmen29002
		piety = 50
		decadence = -1
		spawn_fleet = {
			province = closest
			owner = ROOT
			match_character = ROOT
			match_mult = 2
			match_min = 50
			disband_on_peace = yes
			earmark = liz_fleet
		}
		join_attacker_wars = FROM
		ai_chance = { factor = 75
				modifier = { factor = 10
						trait = creature_slann }
				modifier = { factor = 1.75
						trait = zealous }
				 }
	}
	option = {
		name = EVTOPTBslizardmen29002
		decadence = 1
		piety = -50
		ai_chance = { factor = 25
				modifier = { factor = 1.75
						trait = cynical }
				}
	}
}

##################################
###THE SLANN AWAKENING EVENTS#####

#On each declared war (on_action), check if there's a Slann vassal and see if he awakes or frowns on the war.
character_event = {
	id = slizardmen.30
	hide_window = yes

	trigger = { OR = { FROM = { trait = creature_skink
				independent = yes
				any_war = { OR = { is_primary_war_attacker = yes
						 is_primary_war_defender = yes } }
				any_vassal = { trait = creature_slann
						trait = lizardman_sleepingslann }

				}
			ROOT = { trait = creature_skink
				independent = yes
				any_war = { OR = { is_primary_war_attacker = yes
						 is_primary_war_defender = yes } }
				any_vassal = { trait = creature_slann
						trait = lizardman_sleepingslann }

				}
			}
		}

	is_triggered_only = yes

	immediate = { if = { limit = { FROM = { trait = creature_skink } }
			FROM = {
			random_list = { 95 = {
					modifier = { factor = 0.85
						trait = ambitious }
					modifier = { factor = 0.85
						trait = diligent }
					modifier = { factor = 1.25
						trait = slothful }
						 }
					4 = { #Restless Slann, abort the war?
						random_vassal = { limit = { trait = creature_slann }
								character_event = { id = slizardmen.31 days = 100 random = 50 } }
					modifier = { factor = 0
						any_war = { using_cb = tablet_search } }
					 }
					1 = { #Slann awakens to fight
						random_vassal = { limit = { trait = creature_slann }
								character_event = { id = slizardmen.32 days = 7 random = 7 } }
					modifier = { factor = 10
						any_war = { using_cb = tablet_search } }
					 }
			 	}
			 }
		 }
		if = { limit = { ROOT = { trait = creature_skink } }
			ROOT = {
			random_list = { 95 = {
					modifier = { factor = 0.85
						trait = ambitious }
					modifier = { factor = 0.85
						trait = diligent }
					modifier = { factor = 1.25
						trait = slothful }
						 }
					4 = { #Restless Slann, abort the war?
						random_vassal = { limit = { trait = creature_slann }
								character_event = { id = slizardmen.31 days = 100 random = 50 } }
					modifier = { factor = 0
						any_war = { using_cb = tablet_search } }
					 }
					1 = { #Slann awakens to fight
						random_vassal = { limit = { trait = creature_slann }
								character_event = { id = slizardmen.32 days = 7 random = 7 } }
					modifier = { factor = 10
						any_war = { using_cb = tablet_search } }
					 }
			 	}
			 }
		 }
	}
}

#Ping restless Slann
character_event = {
	id = slizardmen.31
	hide_window = yes

	is_triggered_only = yes

	immediate = { top_liege = { character_event = { id = slizardmen.31005 } } }
}

# Restless Slann, abort the war?
character_event = {
	id = slizardmen.31005
	desc = EVTDESCslizardmen31005
	picture = GFX_evt_lustria_slann

	is_triggered_only = yes

	trigger = { war = yes
			NOT = { has_character_flag = warring_slann } }

	option = {
		name = EVTOPTAslizardmen31005
		decadence = -3
		hidden_tooltip = { any_war = { end_war = invalid } }
		ai_chance = { factor = 10
				modifier = { factor = 1.75
						trait = zealous }
				 }
	}
	option = {
		name = EVTOPTBslizardmen31005
		decadence = 15
		ai_chance = { factor = 90
				modifier = { factor = 1.75
						trait = cynical }
				}
	}
}

#Ping awakening Slann
character_event = {
	id = slizardmen.32
	hide_window = yes

	is_triggered_only = yes

	immediate = { top_liege = { character_event = { id = slizardmen.32005 } }
	}
}

# The Slann has awaken, step aside
character_event = {
	id = slizardmen.32005
	desc = EVTDESCslizardmen32005
	picture = GFX_evt_lustria_slann

	is_triggered_only = yes

	trigger = { war = yes
			NOT = { has_character_flag = warring_slann } }

	option = {
		name = EVTOPTAslizardmen32005
			hidden_tooltip = {
		add_trait = s_target_trait
		add_friend = FROM	#To keep track
			FROM = { remove_trait = lizardman_sleepingslann
				set_character_flag = warring_slann
				wealth = ROOT
				ROOT = { clear_wealth = THIS }
				any_demesne_title = { set_title_flag = old_slann_demesne }
				ROOT = { abdicate_to = FROM
					any_claim = { remove_claim = PREV } }
				set_government_type = lizardmen_government }
			 }

	}
}

#On war ended (on action) the Slann goes to rest again.
character_event = {
	id = slizardmen.33
	hide_window = yes

	only_rulers = yes

	trigger = { OR = { FROM = { has_character_flag = warring_slann }
			ROOT = { has_character_flag = warring_slann }
			}
		}

	is_triggered_only = yes

	immediate = { if = { limit = { ROOT = { has_character_flag = warring_slann } }
			ROOT = { character_event = { id = slizardmen.33005 days = 2 random = 4 } }
		 }
		if = { limit = { FROM = { has_character_flag = warring_slann } }
			FROM = { character_event = { id = slizardmen.33005 days = 2 random = 4 } }
		 }
	}
}

# The Slann returns to sleep and gives the titles back to the Skink
character_event = {
	id = slizardmen.33005
	desc = EVTDESCslizardmen33005
	picture = GFX_evt_lustria_slann

	is_triggered_only = yes

	option = {
		name = EVTOPTAslizardmen33005
			hidden_tooltip = {
		if = { limit = { s_target_trait = { any_friend = { character = ROOT } } }
			s_target_trait = { limit = { any_friend = { character = ROOT } }
				wealth = ROOT
				ROOT = { clear_wealth = THIS }
				ROOT = { abdicate_to = PREV }
				any_demesne_title = { limit = { has_title_flag = old_slann_demesne }
							grant_title = ROOT
							clr_title_flag = old_slann_demesne }
				set_government_type = lizardmen_government
				remove_trait = s_target_trait
				remove_friend = ROOT
				}
				ROOT = {  clr_character_flag = warring_slann
					any_claim = { remove_claim = PREV }
					set_government_type = theocracy_government
					add_trait = lizardman_sleepingslann }
			break = yes
			}

		if = { limit = { NOT = { s_target_trait = { any_friend = { character = ROOT } } } }

			random_courtier = { limit = { trait = creature_skink }
				wealth = ROOT
				ROOT = { clear_wealth = THIS }
				ROOT = { abdicate_to = PREV }
				any_demesne_title = { limit = { has_title_flag = old_slann_demesne }
							grant_title = ROOT
							clr_title_flag = old_slann_demesne }
				set_government_type = lizardmen_government
				remove_trait = s_target_trait
				remove_opinion = { who = ROOT
							modifier = opinion_formerskink_beacon }
				}
				ROOT = {  clr_character_flag = warring_slann
					any_claim = { remove_claim = PREV }
					set_government_type = theocracy_government
					add_trait = lizardman_sleepingslann }
			break = yes
			}
		if = { limit = { NOT = { s_target_trait = { any_friend = { character = ROOT } } }
				NOT = { any_courtier = { trait = creature_skink } }
				}
				create_random_steward = {
					random_traits = yes
					dynasty = random
					culture = ROOT
					religion = ROOT
					female = no
				}
			new_character = { add_trait = creature_skink
				wealth = ROOT
				ROOT = { clear_wealth = THIS }
				ROOT = { abdicate_to = PREV }
				any_demesne_title = { limit = { has_title_flag = old_slann_demesne }
							grant_title = ROOT
							clr_title_flag = old_slann_demesne }
				set_government_type = lizardmen_government
				remove_trait = s_target_trait
				remove_opinion = { who = ROOT
							modifier = opinion_formerskink_beacon }
				}
				ROOT = {  clr_character_flag = warring_slann
					any_claim = { remove_claim = PREV }
					set_government_type = theocracy_government
					add_trait = lizardman_sleepingslann }
			break = yes
			}
		}
	}
}

#A Skink tries to awake a Slann
character_event = {
	id = slizardmen.34
	hide_window = yes

	is_triggered_only = yes

	immediate = {
		random_list = { 50 = { # Awakes
				FROM = { character_event = { id = slizardmen.32005 } } }
			50 = {
					modifier = { factor = 1.75
						trait = slothful
						 }
					modifier = { factor = 1.5
						trait = content
						 }
					modifier = { factor = 1.25
						trait = patient
						 }
					modifier = { factor = 0.85
						trait = wroth
						 }
					modifier = { factor = 0.85
						trait = diligent
						 }
					modifier = { factor = 0.85
						trait = ambitious
						 }
					modifier = { factor = 0.75
						FROM = { any_war = { defender = { character = ROOT
										NOT = { war_score = 0 } } }
							 }
						 }
					modifier = { factor = 0.75
						FROM = { any_war = { defender = { character = ROOT
										NOT = { war_score = -20 } } }
							 }
						 }
					modifier = { factor = 0.75
						FROM = { any_war = { defender = { character = ROOT
										NOT = { war_score = -40 } } }
							 }
						 }
					modifier = { factor = 0.75
						FROM = { any_war = { defender = { character = ROOT
										NOT = { war_score = -60 } } }
							 }
						 }
					modifier = { factor = 0.75
						FROM = { any_war = { defender = { character = ROOT
										NOT = { war_score = -80 } } }
							 }
						 }
					modifier = { factor = 0.5
						FROM = { any_war = { defender = { character = ROOT
										NOT = { war_score = -90 } } }
							 }
						 }
					modifier = { factor = 0.95
						FROM = { any_war = { defender = { character = ROOT } }
							 }
						 }
					modifier = { factor = 0.5
						FROM = { any_war = { using_cb = tablet_search } } }
				FROM = { character_event = { id = slizardmen.34001 } } }
		}
	}
}

# The Slann doesn't wake
character_event = {
	id = slizardmen.34001
	desc = EVTDESCslizardmen34001
	picture = GFX_evt_lustria_slann

	is_triggered_only = yes


	option = {
		name = EVTOPTAslizardmen34001
		decadence = 8
	}
}

####Investigate Alignment Plot events

# A plot backer sees an opportunity - The Skink is a drunkard
character_event = {
	id = slizardmen.35
	desc = EVTDESCslizardmen35
	picture = GFX_evt_whispers
	border = GFX_event_normal_frame_intrigue

	capable_only = yes
	prisoner = no
	is_part_of_plot = yes
	religion_group = old_ones_group

	trigger = {
		plot_target_char = { trait = drunkard }
		any_backed_character = {
			has_plot = plot_investigate_alignment
			plot_power = 0.5
			plot_target_char = {
				age = 16
				prisoner = no
				trait = creature_skink
				NOT = { trait = incapable }
				NOT = { trait = in_hiding }
			}
			ROOT = {
				plot_power_contribution =
				{
					plotter = PREV
					power = 0.025
				}
			}
		}
	}

	mean_time_to_happen = {
		years = 541

		modifier = {
			factor = 0.6
			any_backed_character = {
			has_plot = plot_investigate_alignment
				ROOT = {
					plot_power_contribution =
					{
						plotter = PREV
						power = 0.10
					}
				}
			}
		}
		modifier = {
			factor = 0.6
			any_backed_character = {
			has_plot = plot_investigate_alignment
				ROOT = {
					plot_power_contribution =
					{
						plotter = PREV
						power = 0.20
					}
				}
			}
		}
		modifier = {
			factor = 0.6
			any_backed_character = {
			has_plot = plot_investigate_alignment
				ROOT = {
					plot_power_contribution =
					{
						plotter = PREV
						power = 0.30
					}
				}
			}
		}
		modifier = {
			factor = 0.6
			any_backed_character = {
			has_plot = plot_investigate_alignment
				ROOT = {
					plot_power_contribution =
					{
						plotter = PREV
						power = 0.40
					}
				}
			}
		}
		modifier = {
			factor = 0.6
			any_backed_character = {
			has_plot = plot_investigate_alignment
				ROOT = {
					plot_power_contribution =
					{
						plotter = PREV
						power = 0.50
					}
				}
			}
		}
		modifier = {
			factor = 0.6
			any_backed_character = {
			has_plot = plot_investigate_alignment
				ROOT = {
					plot_power_contribution =
					{
						plotter = PREV
						power = 0.60
					}
				}
			}
		}
		modifier = {
			factor = 0.6
			any_backed_character = {
				has_plot = plot_investigate_alignment
				ROOT = {
					plot_power_contribution =
					{
						plotter = PREV
						power = 0.70
					}
				}
			}
		}
		modifier = {
			factor = 0.6
			any_backed_character = {
				has_plot = plot_investigate_alignment
				ROOT = {
					plot_power_contribution =
					{
						plotter = PREV
						power = 0.80
					}
				}
			}
		}
		modifier = {
			factor = 0.6
			any_backed_character = {
				has_plot = plot_investigate_alignment
				ROOT = {
					plot_power_contribution =
					{
						plotter = PREV
						power = 0.90
					}
				}
			}
		}

		modifier = {
			factor = 0.33
			any_backed_character = {
				has_plot = plot_investigate_alignment
				plot_power = 1.0
			}
		}
		modifier = {
			factor = 0.33
			any_backed_character = {
				has_plot = plot_investigate_alignment
				plot_power = 1.5
			}
		}
		modifier = {
			factor = 0.33
			any_backed_character = {
				has_plot = plot_investigate_alignment
				plot_power = 2.0
			}
		}
	}

	option = {
		name = EVTOPTAslizardmen35
		trigger = {
			any_backed_character = {
				has_plot = plot_investigate_alignment
				plot_power = 1.0
			}
		}
		random_backed_character = {
			limit = {
				has_plot = plot_investigate_alignment
				plot_power = 1.0
			}
			character_event = { id = slizardmen.35001 days = 3 }
		}
	}
}

# Realized the Target drinks too much ripplejuice
character_event = {
	id = slizardmen.35001
	desc = EVTDESCslizardmen35001
	picture = GFX_evt_whispers

	is_triggered_only = yes


	option = {
		name = EVTOPTAslizardmen35001
		plot_target_char = { decadence = 2 }
		opinion = { modifier = opinion_grateful
			who = FROM
			years = 1 }
	}
}

# A plot backer sees an opportunity - The Skink is an addict
character_event = {
	id = slizardmen.36
	desc = EVTDESCslizardmen36
	picture = GFX_evt_whispers
	border = GFX_event_normal_frame_intrigue

	capable_only = yes
	prisoner = no
	religion_group = old_ones_group
	is_part_of_plot = yes
	trigger = {
		plot_target_char = { trait = addict }
		any_backed_character = {
			has_plot = plot_investigate_alignment
			plot_power = 0.5
			plot_target_char = {
				age = 16
				prisoner = no
				trait = creature_skink
				NOT = { trait = incapable }
				NOT = { trait = in_hiding }
			}
			ROOT = {
				plot_power_contribution =
				{
					plotter = PREV
					power = 0.025
				}
			}
		}
	}

	mean_time_to_happen = {
		years = 541

		modifier = {
			factor = 0.6
			any_backed_character = {
			has_plot = plot_investigate_alignment
				ROOT = {
					plot_power_contribution =
					{
						plotter = PREV
						power = 0.10
					}
				}
			}
		}
		modifier = {
			factor = 0.6
			any_backed_character = {
			has_plot = plot_investigate_alignment
				ROOT = {
					plot_power_contribution =
					{
						plotter = PREV
						power = 0.20
					}
				}
			}
		}
		modifier = {
			factor = 0.6
			any_backed_character = {
			has_plot = plot_investigate_alignment
				ROOT = {
					plot_power_contribution =
					{
						plotter = PREV
						power = 0.30
					}
				}
			}
		}
		modifier = {
			factor = 0.6
			any_backed_character = {
			has_plot = plot_investigate_alignment
				ROOT = {
					plot_power_contribution =
					{
						plotter = PREV
						power = 0.40
					}
				}
			}
		}
		modifier = {
			factor = 0.6
			any_backed_character = {
			has_plot = plot_investigate_alignment
				ROOT = {
					plot_power_contribution =
					{
						plotter = PREV
						power = 0.50
					}
				}
			}
		}
		modifier = {
			factor = 0.6
			any_backed_character = {
			has_plot = plot_investigate_alignment
				ROOT = {
					plot_power_contribution =
					{
						plotter = PREV
						power = 0.60
					}
				}
			}
		}
		modifier = {
			factor = 0.6
			any_backed_character = {
				has_plot = plot_investigate_alignment
				ROOT = {
					plot_power_contribution =
					{
						plotter = PREV
						power = 0.70
					}
				}
			}
		}
		modifier = {
			factor = 0.6
			any_backed_character = {
				has_plot = plot_investigate_alignment
				ROOT = {
					plot_power_contribution =
					{
						plotter = PREV
						power = 0.80
					}
				}
			}
		}
		modifier = {
			factor = 0.6
			any_backed_character = {
				has_plot = plot_investigate_alignment
				ROOT = {
					plot_power_contribution =
					{
						plotter = PREV
						power = 0.90
					}
				}
			}
		}

		modifier = {
			factor = 0.33
			any_backed_character = {
				has_plot = plot_investigate_alignment
				plot_power = 1.0
			}
		}
		modifier = {
			factor = 0.33
			any_backed_character = {
				has_plot = plot_investigate_alignment
				plot_power = 1.5
			}
		}
		modifier = {
			factor = 0.33
			any_backed_character = {
				has_plot = plot_investigate_alignment
				plot_power = 2.0
			}
		}
	}

	option = {
		name = EVTOPTAslizardmen36
		trigger = {
			any_backed_character = {
				has_plot = plot_investigate_alignment
				plot_power = 1.0
			}
		}
		random_backed_character = {
			limit = {
				has_plot = plot_investigate_alignment
				plot_power = 1.0
			}
			character_event = { id = slizardmen.36001 days = 3 }
		}
	}
}

# Realized the Target drinks too much ripplejuice
character_event = {
	id = slizardmen.36001
	desc = EVTDESCslizardmen36001
	picture = GFX_evt_whispers

	is_triggered_only = yes


	option = {
		name = EVTOPTAslizardmen36001
		plot_target_char = { decadence = 2 }
		opinion = { modifier = opinion_grateful
			who = FROM
			years = 1 }
	}
}

# A plot backer sees an opportunity - The Skink is slothful
character_event = {
	id = slizardmen.37
	desc = EVTDESCslizardmen37
	picture = GFX_evt_whispers
	border = GFX_event_normal_frame_intrigue

	capable_only = yes
	prisoner = no
	religion_group = old_ones_group
	is_part_of_plot = yes
	trigger = {
		plot_target_char = { trait = slothful }
		any_backed_character = {
			has_plot = plot_investigate_alignment
			plot_power = 0.5
			plot_target_char = {
				age = 16
				prisoner = no
				trait = creature_skink
				NOT = { trait = incapable }
				NOT = { trait = in_hiding }
			}
			ROOT = {
				plot_power_contribution =
				{
					plotter = PREV
					power = 0.025
				}
			}
		}
	}

	mean_time_to_happen = {
		years = 541

		modifier = {
			factor = 0.6
			any_backed_character = {
			has_plot = plot_investigate_alignment
				ROOT = {
					plot_power_contribution =
					{
						plotter = PREV
						power = 0.10
					}
				}
			}
		}
		modifier = {
			factor = 0.6
			any_backed_character = {
			has_plot = plot_investigate_alignment
				ROOT = {
					plot_power_contribution =
					{
						plotter = PREV
						power = 0.20
					}
				}
			}
		}
		modifier = {
			factor = 0.6
			any_backed_character = {
			has_plot = plot_investigate_alignment
				ROOT = {
					plot_power_contribution =
					{
						plotter = PREV
						power = 0.30
					}
				}
			}
		}
		modifier = {
			factor = 0.6
			any_backed_character = {
			has_plot = plot_investigate_alignment
				ROOT = {
					plot_power_contribution =
					{
						plotter = PREV
						power = 0.40
					}
				}
			}
		}
		modifier = {
			factor = 0.6
			any_backed_character = {
			has_plot = plot_investigate_alignment
				ROOT = {
					plot_power_contribution =
					{
						plotter = PREV
						power = 0.50
					}
				}
			}
		}
		modifier = {
			factor = 0.6
			any_backed_character = {
			has_plot = plot_investigate_alignment
				ROOT = {
					plot_power_contribution =
					{
						plotter = PREV
						power = 0.60
					}
				}
			}
		}
		modifier = {
			factor = 0.6
			any_backed_character = {
				has_plot = plot_investigate_alignment
				ROOT = {
					plot_power_contribution =
					{
						plotter = PREV
						power = 0.70
					}
				}
			}
		}
		modifier = {
			factor = 0.6
			any_backed_character = {
				has_plot = plot_investigate_alignment
				ROOT = {
					plot_power_contribution =
					{
						plotter = PREV
						power = 0.80
					}
				}
			}
		}
		modifier = {
			factor = 0.6
			any_backed_character = {
				has_plot = plot_investigate_alignment
				ROOT = {
					plot_power_contribution =
					{
						plotter = PREV
						power = 0.90
					}
				}
			}
		}

		modifier = {
			factor = 0.33
			any_backed_character = {
				has_plot = plot_investigate_alignment
				plot_power = 1.0
			}
		}
		modifier = {
			factor = 0.33
			any_backed_character = {
				has_plot = plot_investigate_alignment
				plot_power = 1.5
			}
		}
		modifier = {
			factor = 0.33
			any_backed_character = {
				has_plot = plot_investigate_alignment
				plot_power = 2.0
			}
		}
	}

	option = {
		name = EVTOPTAslizardmen37
		trigger = {
			any_backed_character = {
				has_plot = plot_investigate_alignment
				plot_power = 1.0
			}
		}
		random_backed_character = {
			limit = {
				has_plot = plot_investigate_alignment
				plot_power = 1.0
			}
			character_event = { id = slizardmen.37001 days = 3 }
		}
	}
}

# Realized the Target does something wrong
character_event = {
	id = slizardmen.37001
	desc = EVTDESCslizardmen37001
	picture = GFX_evt_whispers

	is_triggered_only = yes


	option = {
		name = EVTOPTAslizardmen37001
		plot_target_char = { decadence = 2 }
		opinion = { modifier = opinion_grateful
			who = FROM
			years = 1 }
	}
}

# A plot backer sees an opportunity - The Skink writes fiction
character_event = {
	id = slizardmen.38
	desc = EVTDESCslizardmen38
	picture = GFX_evt_whispers
	border = GFX_event_normal_frame_intrigue

	capable_only = yes
	prisoner = no
	religion_group = old_ones_group
	is_part_of_plot = yes
	trigger = {
		plot_target_char = { OR = { trait = bright
						trait = smart
						trait = quick
						trait = brilliant
						trait = genius
						trait = poet
						trait = scholar } }
		any_backed_character = {
			has_plot = plot_investigate_alignment
			plot_power = 0.5
			plot_target_char = {
				age = 16
				prisoner = no
				trait = creature_skink
				NOT = { trait = incapable }
				NOT = { trait = in_hiding }
			}
			ROOT = {
				plot_power_contribution =
				{
					plotter = PREV
					power = 0.025
				}
			}
		}
	}

	mean_time_to_happen = {
		years = 541

		modifier = {
			factor = 0.6
			any_backed_character = {
			has_plot = plot_investigate_alignment
				ROOT = {
					plot_power_contribution =
					{
						plotter = PREV
						power = 0.10
					}
				}
			}
		}
		modifier = {
			factor = 0.6
			any_backed_character = {
			has_plot = plot_investigate_alignment
				ROOT = {
					plot_power_contribution =
					{
						plotter = PREV
						power = 0.20
					}
				}
			}
		}
		modifier = {
			factor = 0.6
			any_backed_character = {
			has_plot = plot_investigate_alignment
				ROOT = {
					plot_power_contribution =
					{
						plotter = PREV
						power = 0.30
					}
				}
			}
		}
		modifier = {
			factor = 0.6
			any_backed_character = {
			has_plot = plot_investigate_alignment
				ROOT = {
					plot_power_contribution =
					{
						plotter = PREV
						power = 0.40
					}
				}
			}
		}
		modifier = {
			factor = 0.6
			any_backed_character = {
			has_plot = plot_investigate_alignment
				ROOT = {
					plot_power_contribution =
					{
						plotter = PREV
						power = 0.50
					}
				}
			}
		}
		modifier = {
			factor = 0.6
			any_backed_character = {
			has_plot = plot_investigate_alignment
				ROOT = {
					plot_power_contribution =
					{
						plotter = PREV
						power = 0.60
					}
				}
			}
		}
		modifier = {
			factor = 0.6
			any_backed_character = {
				has_plot = plot_investigate_alignment
				ROOT = {
					plot_power_contribution =
					{
						plotter = PREV
						power = 0.70
					}
				}
			}
		}
		modifier = {
			factor = 0.6
			any_backed_character = {
				has_plot = plot_investigate_alignment
				ROOT = {
					plot_power_contribution =
					{
						plotter = PREV
						power = 0.80
					}
				}
			}
		}
		modifier = {
			factor = 0.6
			any_backed_character = {
				has_plot = plot_investigate_alignment
				ROOT = {
					plot_power_contribution =
					{
						plotter = PREV
						power = 0.90
					}
				}
			}
		}

		modifier = {
			factor = 0.33
			any_backed_character = {
				has_plot = plot_investigate_alignment
				plot_power = 1.0
			}
		}
		modifier = {
			factor = 0.33
			any_backed_character = {
				has_plot = plot_investigate_alignment
				plot_power = 1.5
			}
		}
		modifier = {
			factor = 0.33
			any_backed_character = {
				has_plot = plot_investigate_alignment
				plot_power = 2.0
			}
		}
	}

	option = {
		name = EVTOPTAslizardmen38
		trigger = {
			any_backed_character = {
				has_plot = plot_investigate_alignment
				plot_power = 1.0
			}
		}
		random_backed_character = {
			limit = {
				has_plot = plot_investigate_alignment
				plot_power = 1.0
			}
			character_event = { id = slizardmen.38001 days = 3 }
		}
	}
}

# Realized the Target does something wrong
character_event = {
	id = slizardmen.38001
	desc = EVTDESCslizardmen38001
	picture = GFX_evt_whispers

	is_triggered_only = yes


	option = {
		name = EVTOPTAslizardmen38001
		plot_target_char = { decadence = 2 }
		opinion = { modifier = opinion_grateful
			who = FROM
			years = 1 }
	}
}

# A plot backer sees an opportunity - The Skink dabbles in the occult
character_event = {
	id = slizardmen.39
	desc = EVTDESCslizardmen39
	picture = GFX_evt_whispers
	border = GFX_event_normal_frame_intrigue

	capable_only = yes
	prisoner = no
	religion_group = old_ones_group
	is_part_of_plot = yes
	trigger = {
		plot_target_char = { trait = mystic }
		any_backed_character = {
			has_plot = plot_investigate_alignment
			plot_power = 0.5
			plot_target_char = {
				age = 16
				prisoner = no
				trait = creature_skink
				NOT = { trait = incapable }
				NOT = { trait = in_hiding }
			}
			ROOT = {
				plot_power_contribution =
				{
					plotter = PREV
					power = 0.025
				}
			}
		}
	}

	mean_time_to_happen = {
		years = 575

		modifier = {
			factor = 0.6
			any_backed_character = {
			has_plot = plot_investigate_alignment
				ROOT = {
					plot_power_contribution =
					{
						plotter = PREV
						power = 0.10
					}
				}
			}
		}
		modifier = {
			factor = 0.6
			any_backed_character = {
			has_plot = plot_investigate_alignment
				ROOT = {
					plot_power_contribution =
					{
						plotter = PREV
						power = 0.20
					}
				}
			}
		}
		modifier = {
			factor = 0.6
			any_backed_character = {
			has_plot = plot_investigate_alignment
				ROOT = {
					plot_power_contribution =
					{
						plotter = PREV
						power = 0.30
					}
				}
			}
		}
		modifier = {
			factor = 0.6
			any_backed_character = {
			has_plot = plot_investigate_alignment
				ROOT = {
					plot_power_contribution =
					{
						plotter = PREV
						power = 0.40
					}
				}
			}
		}
		modifier = {
			factor = 0.6
			any_backed_character = {
			has_plot = plot_investigate_alignment
				ROOT = {
					plot_power_contribution =
					{
						plotter = PREV
						power = 0.50
					}
				}
			}
		}
		modifier = {
			factor = 0.6
			any_backed_character = {
			has_plot = plot_investigate_alignment
				ROOT = {
					plot_power_contribution =
					{
						plotter = PREV
						power = 0.60
					}
				}
			}
		}
		modifier = {
			factor = 0.6
			any_backed_character = {
				has_plot = plot_investigate_alignment
				ROOT = {
					plot_power_contribution =
					{
						plotter = PREV
						power = 0.70
					}
				}
			}
		}
		modifier = {
			factor = 0.6
			any_backed_character = {
				has_plot = plot_investigate_alignment
				ROOT = {
					plot_power_contribution =
					{
						plotter = PREV
						power = 0.80
					}
				}
			}
		}
		modifier = {
			factor = 0.6
			any_backed_character = {
				has_plot = plot_investigate_alignment
				ROOT = {
					plot_power_contribution =
					{
						plotter = PREV
						power = 0.90
					}
				}
			}
		}

		modifier = {
			factor = 0.33
			any_backed_character = {
				has_plot = plot_investigate_alignment
				plot_power = 1.0
			}
		}
		modifier = {
			factor = 0.33
			any_backed_character = {
				has_plot = plot_investigate_alignment
				plot_power = 1.5
			}
		}
		modifier = {
			factor = 0.33
			any_backed_character = {
				has_plot = plot_investigate_alignment
				plot_power = 2.0
			}
		}
	}

	option = {
		name = EVTOPTAslizardmen39
		trigger = {
			any_backed_character = {
				has_plot = plot_investigate_alignment
				plot_power = 1.0
			}
		}
		random_backed_character = {
			limit = {
				has_plot = plot_investigate_alignment
				plot_power = 1.0
			}
			character_event = { id = slizardmen.39001 days = 3 }
		}
	}
}

# Realized the Target does something wrong
character_event = {
	id = slizardmen.39001
	desc = EVTDESCslizardmen39001
	picture = GFX_evt_whispers

	is_triggered_only = yes


	option = {
		name = EVTOPTAslizardmen39001
		plot_target_char = { decadence = 5 }
		opinion = { modifier = opinion_grateful
			who = FROM
			years = 1 }
	}
}

# A plot backer sees an opportunity - The Skink hoards trinkets for himself
character_event = {
	id = slizardmen.40
	desc = EVTDESCslizardmen40
	picture = GFX_evt_whispers
	border = GFX_event_normal_frame_intrigue

	capable_only = yes
	prisoner = no
	religion_group = old_ones_group
	is_part_of_plot = yes

	trigger = {
		plot_target_char = { OR = { trait = ambitious
					 trait = greedy
					trait = envious } }
		any_backed_character = {
			has_plot = plot_investigate_alignment
			plot_power = 0.5
			plot_target_char = {
				age = 16
				prisoner = no
				trait = creature_skink
				NOT = { trait = incapable }
				NOT = { trait = in_hiding }
			}
			ROOT = {
				plot_power_contribution =
				{
					plotter = PREV
					power = 0.025
				}
			}
		}
	}

	mean_time_to_happen = {
		years = 575

		modifier = {
			factor = 0.6
			any_backed_character = {
			has_plot = plot_investigate_alignment
				ROOT = {
					plot_power_contribution =
					{
						plotter = PREV
						power = 0.10
					}
				}
			}
		}
		modifier = {
			factor = 0.6
			any_backed_character = {
			has_plot = plot_investigate_alignment
				ROOT = {
					plot_power_contribution =
					{
						plotter = PREV
						power = 0.20
					}
				}
			}
		}
		modifier = {
			factor = 0.6
			any_backed_character = {
			has_plot = plot_investigate_alignment
				ROOT = {
					plot_power_contribution =
					{
						plotter = PREV
						power = 0.30
					}
				}
			}
		}
		modifier = {
			factor = 0.6
			any_backed_character = {
			has_plot = plot_investigate_alignment
				ROOT = {
					plot_power_contribution =
					{
						plotter = PREV
						power = 0.40
					}
				}
			}
		}
		modifier = {
			factor = 0.6
			any_backed_character = {
			has_plot = plot_investigate_alignment
				ROOT = {
					plot_power_contribution =
					{
						plotter = PREV
						power = 0.50
					}
				}
			}
		}
		modifier = {
			factor = 0.6
			any_backed_character = {
			has_plot = plot_investigate_alignment
				ROOT = {
					plot_power_contribution =
					{
						plotter = PREV
						power = 0.60
					}
				}
			}
		}
		modifier = {
			factor = 0.6
			any_backed_character = {
				has_plot = plot_investigate_alignment
				ROOT = {
					plot_power_contribution =
					{
						plotter = PREV
						power = 0.70
					}
				}
			}
		}
		modifier = {
			factor = 0.6
			any_backed_character = {
				has_plot = plot_investigate_alignment
				ROOT = {
					plot_power_contribution =
					{
						plotter = PREV
						power = 0.80
					}
				}
			}
		}
		modifier = {
			factor = 0.6
			any_backed_character = {
				has_plot = plot_investigate_alignment
				ROOT = {
					plot_power_contribution =
					{
						plotter = PREV
						power = 0.90
					}
				}
			}
		}

		modifier = {
			factor = 0.33
			any_backed_character = {
				has_plot = plot_investigate_alignment
				plot_power = 1.0
			}
		}
		modifier = {
			factor = 0.33
			any_backed_character = {
				has_plot = plot_investigate_alignment
				plot_power = 1.5
			}
		}
		modifier = {
			factor = 0.33
			any_backed_character = {
				has_plot = plot_investigate_alignment
				plot_power = 2.0
			}
		}
	}

	option = {
		name = EVTOPTAslizardmen40
		trigger = {
			any_backed_character = {
				has_plot = plot_investigate_alignment
				plot_power = 1.0
			}
		}
		random_backed_character = {
			limit = {
				has_plot = plot_investigate_alignment
				plot_power = 1.0
			}
			character_event = { id = slizardmen.40001 days = 3 }
		}
	}
}

# Realized the Target does something wrong
character_event = {
	id = slizardmen.40001
	desc = EVTDESCslizardmen40001
	picture = GFX_evt_whispers

	is_triggered_only = yes


	option = {
		name = EVTOPTAslizardmen40001
		plot_target_char = { decadence = 5 }
		opinion = { modifier = opinion_grateful
			who = FROM
			years = 1 }
	}
}

# A plot backer sees an opportunity - The Skink acts shifty
character_event = {
	id = slizardmen.41
	desc = EVTDESCslizardmen41
	picture = GFX_evt_whispers
	border = GFX_event_normal_frame_intrigue

	capable_only = yes
	prisoner = no
	religion_group = old_ones_group
	is_part_of_plot = yes

	trigger = {
		plot_target_char = { OR = { trait = arbitrary
					 trait = shy
					trait = paranoid
					trait = deceitful } }
		any_backed_character = {
			has_plot = plot_investigate_alignment
			plot_power = 0.5
			plot_target_char = {
				age = 16
				prisoner = no
				trait = creature_skink
				NOT = { trait = incapable }
				NOT = { trait = in_hiding }
			}
			ROOT = {
				plot_power_contribution =
				{
					plotter = PREV
					power = 0.025
				}
			}
		}
	}

	mean_time_to_happen = {
		years = 516

		modifier = {
			factor = 0.6
			any_backed_character = {
			has_plot = plot_investigate_alignment
				ROOT = {
					plot_power_contribution =
					{
						plotter = PREV
						power = 0.10
					}
				}
			}
		}
		modifier = {
			factor = 0.6
			any_backed_character = {
			has_plot = plot_investigate_alignment
				ROOT = {
					plot_power_contribution =
					{
						plotter = PREV
						power = 0.20
					}
				}
			}
		}
		modifier = {
			factor = 0.6
			any_backed_character = {
			has_plot = plot_investigate_alignment
				ROOT = {
					plot_power_contribution =
					{
						plotter = PREV
						power = 0.30
					}
				}
			}
		}
		modifier = {
			factor = 0.6
			any_backed_character = {
			has_plot = plot_investigate_alignment
				ROOT = {
					plot_power_contribution =
					{
						plotter = PREV
						power = 0.41
					}
				}
			}
		}
		modifier = {
			factor = 0.6
			any_backed_character = {
			has_plot = plot_investigate_alignment
				ROOT = {
					plot_power_contribution =
					{
						plotter = PREV
						power = 0.50
					}
				}
			}
		}
		modifier = {
			factor = 0.6
			any_backed_character = {
			has_plot = plot_investigate_alignment
				ROOT = {
					plot_power_contribution =
					{
						plotter = PREV
						power = 0.60
					}
				}
			}
		}
		modifier = {
			factor = 0.6
			any_backed_character = {
				has_plot = plot_investigate_alignment
				ROOT = {
					plot_power_contribution =
					{
						plotter = PREV
						power = 0.70
					}
				}
			}
		}
		modifier = {
			factor = 0.6
			any_backed_character = {
				has_plot = plot_investigate_alignment
				ROOT = {
					plot_power_contribution =
					{
						plotter = PREV
						power = 0.80
					}
				}
			}
		}
		modifier = {
			factor = 0.6
			any_backed_character = {
				has_plot = plot_investigate_alignment
				ROOT = {
					plot_power_contribution =
					{
						plotter = PREV
						power = 0.90
					}
				}
			}
		}

		modifier = {
			factor = 0.33
			any_backed_character = {
				has_plot = plot_investigate_alignment
				plot_power = 1.0
			}
		}
		modifier = {
			factor = 0.33
			any_backed_character = {
				has_plot = plot_investigate_alignment
				plot_power = 1.5
			}
		}
		modifier = {
			factor = 0.33
			any_backed_character = {
				has_plot = plot_investigate_alignment
				plot_power = 2.0
			}
		}
	}

	option = {
		name = EVTOPTAslizardmen41
		trigger = {
			any_backed_character = {
				has_plot = plot_investigate_alignment
				plot_power = 1.0
			}
		}
		random_backed_character = {
			limit = {
				has_plot = plot_investigate_alignment
				plot_power = 1.0
			}
			character_event = { id = slizardmen.41001 days = 3 }
		}
	}
}

# Realized the Target does something wrong
character_event = {
	id = slizardmen.41001
	desc = EVTDESCslizardmen41001
	picture = GFX_evt_whispers

	is_triggered_only = yes


	option = {
		name = EVTOPTAslizardmen41001
		plot_target_char = { decadence = 4 }
		opinion = { modifier = opinion_grateful
			who = FROM
			years = 1 }
	}
}

# A plot backer sees an opportunity - The Skink acts too brashly
character_event = {
	id = slizardmen.42
	desc = EVTDESCslizardmen42
	picture = GFX_evt_whispers
	border = GFX_event_normal_frame_intrigue

	capable_only = yes
	prisoner = no

	religion_group = old_ones_group
	is_part_of_plot = yes

	trigger = {
		plot_target_char = { OR = { trait = brave
					 trait = proud
					trait = aggressive_leader
					trait = cruel
					trait = wroth } }
		any_backed_character = {
			has_plot = plot_investigate_alignment
			plot_power = 0.5
			plot_target_char = {
				age = 16
				prisoner = no
				trait = creature_skink
				NOT = { trait = incapable }
				NOT = { trait = in_hiding }
			}
			ROOT = {
				plot_power_contribution =
				{
					plotter = PREV
					power = 0.025
				}
			}
		}
	}

	mean_time_to_happen = {
		years = 516

		modifier = {
			factor = 0.6
			any_backed_character = {
			has_plot = plot_investigate_alignment
				ROOT = {
					plot_power_contribution =
					{
						plotter = PREV
						power = 0.10
					}
				}
			}
		}
		modifier = {
			factor = 0.6
			any_backed_character = {
			has_plot = plot_investigate_alignment
				ROOT = {
					plot_power_contribution =
					{
						plotter = PREV
						power = 0.20
					}
				}
			}
		}
		modifier = {
			factor = 0.6
			any_backed_character = {
			has_plot = plot_investigate_alignment
				ROOT = {
					plot_power_contribution =
					{
						plotter = PREV
						power = 0.30
					}
				}
			}
		}
		modifier = {
			factor = 0.6
			any_backed_character = {
			has_plot = plot_investigate_alignment
				ROOT = {
					plot_power_contribution =
					{
						plotter = PREV
						power = 0.42
					}
				}
			}
		}
		modifier = {
			factor = 0.6
			any_backed_character = {
			has_plot = plot_investigate_alignment
				ROOT = {
					plot_power_contribution =
					{
						plotter = PREV
						power = 0.50
					}
				}
			}
		}
		modifier = {
			factor = 0.6
			any_backed_character = {
			has_plot = plot_investigate_alignment
				ROOT = {
					plot_power_contribution =
					{
						plotter = PREV
						power = 0.60
					}
				}
			}
		}
		modifier = {
			factor = 0.6
			any_backed_character = {
				has_plot = plot_investigate_alignment
				ROOT = {
					plot_power_contribution =
					{
						plotter = PREV
						power = 0.70
					}
				}
			}
		}
		modifier = {
			factor = 0.6
			any_backed_character = {
				has_plot = plot_investigate_alignment
				ROOT = {
					plot_power_contribution =
					{
						plotter = PREV
						power = 0.80
					}
				}
			}
		}
		modifier = {
			factor = 0.6
			any_backed_character = {
				has_plot = plot_investigate_alignment
				ROOT = {
					plot_power_contribution =
					{
						plotter = PREV
						power = 0.90
					}
				}
			}
		}

		modifier = {
			factor = 0.33
			any_backed_character = {
				has_plot = plot_investigate_alignment
				plot_power = 1.0
			}
		}
		modifier = {
			factor = 0.33
			any_backed_character = {
				has_plot = plot_investigate_alignment
				plot_power = 1.5
			}
		}
		modifier = {
			factor = 0.33
			any_backed_character = {
				has_plot = plot_investigate_alignment
				plot_power = 2.0
			}
		}
	}

	option = {
		name = EVTOPTAslizardmen42
		trigger = {
			any_backed_character = {
				has_plot = plot_investigate_alignment
				plot_power = 1.0
			}
		}
		random_backed_character = {
			limit = {
				has_plot = plot_investigate_alignment
				plot_power = 1.0
			}
			character_event = { id = slizardmen.42001 days = 3 }
		}
	}
}

# Realized the Target does something wrong
character_event = {
	id = slizardmen.42001
	desc = EVTDESCslizardmen42001
	picture = GFX_evt_whispers

	is_triggered_only = yes


	option = {
		name = EVTOPTAslizardmen42001
		plot_target_char = { decadence = 4 }
		opinion = { modifier = opinion_grateful
			who = FROM
			years = 1 }
	}
}

# The captured pygmies
long_character_event = {
	id = slizardmen.43
	desc = EVTDESCslizardmen43
	picture = "GFX_evt_amazon"

	is_triggered_only = yes

	only_men = yes
	min_age = 16
	max_age = 350
	capable_only = yes
	prisoner = no
	only_rulers = yes
	religion = old_ones
	ai = no

	option = { #Take noses
		name = EVTOPTAslizardmen43
		piety = 150
	}
	option = { #Roast them for the tribe
		name = EVTOPTBslizardmen43
		prestige = 300
		decadence = 1
	}
	option = { #Steal their stuff
		name = EVTOPTCslizardmen43
		wealth = 50
		decadence = 1
	}
}

# The captured Amazon
long_character_event = {
	id = slizardmen.44
	desc = EVTDESCslizardmen44
	picture = "GFX_evt_amazon_queen"

	is_triggered_only = yes

	only_men = yes
	min_age = 16
	max_age = 350
	capable_only = yes
	prisoner = no
	only_rulers = yes
	religion = old_ones
	ai = no

	option = { #Take tech inside her
		name = EVTOPTAslizardmen44
		trigger = { OR = { trait = skink_priest
				trait = creature_slann } }
		military_techpoints = 75
		piety = 50
	}
	option = { #Take as pet for zoo
		name = EVTOPTBslizardmen44
					create_character = {
							random_traits = yes
							dynasty = random
							religion = amazon
							culture = amazon_main
							female = yes
							age = 23
							attributes = { martial = 15
									}
							trait = creature_amazon
							trait = brave
							}
				new_character = { imprison = ROOT
						add_rival = ROOT }
		prestige = 300
		piety = 150
		decadence = 2
	}
	option = { #Steal her stuff
		name = EVTOPTCslizardmen44
		wealth = 50
		decadence = 1
	}
}

###########################################
#############AMAZON DECADENCE EVENTS#######
###########################################


# You're complacent! And therefore banished!
character_event = {
	id = slizardmen.44101
	desc = EVTDESCslizardmen44101
	picture = "GFX_evt_amazon"

	is_triggered_only = yes

	option = {
		name = EVTOPTAslizardmen44101
		remove_trait = complacent
		add_trait = questing
		remove_trait = creature_amazon
		add_trait = creature_human
		add_trait = disinherited_amazon
		banish = yes
		random_list  = { 35 = { character_event = { id = slizardmen.44001 days = 900 random = 900 } } #Died honorably
				35 = { character_event = { id = slizardmen.44003 days = 900 random = 900 } } #Died dishonorably
				25 = { character_event = { id = slizardmen.44005 days = 900 random = 900 } } #Became submissive
				5 = {
					modifier = { factor = 1.4
							trait = brave }
					modifier = { factor = 1.4
							trait = strong }
					modifier = { factor = 1.4
							trait = wroth }
					modifier = { factor = 1.4
							trait = hunter }
					modifier = { factor = 1.4
							trait = duelist }
					modifier = { factor = 1.4
							trait = brilliant_strategist }
					modifier = { factor = 0.4
							trait = craven }
					character_event = { id = slizardmen.44007 days = 900 random = 900 } } #Returns in glory
				 }
	}
}

#Died honorably
character_event = {
	id = slizardmen.44001
	desc = EVTDESCslizardmen44001
	picture = "GFX_evt_amazon"

	is_triggered_only = yes

	option = {
		name = EVTOPTAslizardmen44001
		if = {
 limit = {
 is_invincible_trigger = yes
 }

			antideath_effect = yes
			break = yes
			}
		death = { death_reason = death_battle }
		FROMFROMFROM = { character_event = { id = slizardmen.44002 } }
	}
}

#Died honorably - Notify parent
character_event = {
	id = slizardmen.44002
	desc = EVTDESCslizardmen44002
	picture = "GFX_evt_amazon"

	is_triggered_only = yes

	option = {
		name = EVTOPTAslizardmen44002
		piety = -50
	}
}

#Died dishonorably
character_event = {
	id = slizardmen.44003
	desc = EVTDESCslizardmen44003
	picture = "GFX_evt_amazon"

	is_triggered_only = yes

	option = {
		name = EVTOPTAslizardmen44003
		if = {
 limit = {
 is_invincible_trigger = yes
 }

			antideath_effect = yes
			break = yes
			}
		death = { death_reason = death_battle }
		FROMFROMFROM = { character_event = { id = slizardmen.44004 } }
	}
}

#Died dishonorably - Notify parent
character_event = {
	id = slizardmen.44004
	desc = EVTDESCslizardmen44004
	picture = "GFX_evt_amazon"

	is_triggered_only = yes

	option = {
		name = EVTOPTAslizardmen44004
		piety = -50
		decadence = 5
	}
}

#Became tamed
character_event = {
	id = slizardmen.44005
	desc = EVTDESCslizardmen44005
	picture = "GFX_evt_amazon"

	is_triggered_only = yes

	option = {
		name = EVTOPTAslizardmen44005
		remove_trait = questing
		any_independent_ruler = { limit = { religion_group = old_world_group }
				ROOT = { move_character = PREV
					religion = PREV
					culture = PREV
					remove_trait = brave
					remove_trait = wroth
					remove_trait = cruel
					add_trait = content
					random = { chance = 25
						add_trait = gluttonous
						add_trait = fat }
					random = { chance = 25
						add_trait = kind }
					random = { chance = 25
						add_trait = drunkard }
					random = { chance = 25
						add_trait = addict } } }
		FROMFROMFROM = { character_event = { id = slizardmen.44006 } }
	}
}

#Became tamed - Notify parent
character_event = {
	id = slizardmen.44006
	desc = EVTDESCslizardmen44006
	picture = "GFX_evt_amazon"

	is_triggered_only = yes

	option = {
		name = EVTOPTAslizardmen44006
		piety = -50
		decadence = 8
	}
}

#Returned in glory
character_event = {
	id = slizardmen.44007
	desc = EVTDESCslizardmen44007
	picture = "GFX_evt_amazon"

	is_triggered_only = yes

	option = {
		name = EVTOPTAslizardmen44007
		remove_trait = questing
		FROMFROMFROM = { character_event = { id = slizardmen.44008 } }
	}
}

#Returned in glory - Notify parent
character_event = {
	id = slizardmen.44008
	desc = EVTDESCslizardmen44008
	picture = "GFX_evt_amazon"

	is_triggered_only = yes

	option = {
		name = EVTOPTAslizardmen44008
		piety = 50
		prestige = 75
		decadence = -2
		remove_trait = disinherited_amazon
		remove_trait = creature_human
		add_trait = creature_amazon
		hidden_tooltip = { FROM = { move_character = ROOT
					religion = amazon
					culture = amazon_main
					remove_trait = craven
					remove_trait = kind
					remove_trait = content
					random = { chance = 25
						add_trait = brave }
					random = { chance = 25
						add_trait = cruel }
					random = { chance = 25
						add_trait = wroth }
					random = { chance = 25
						add_trait = hunter } } }
	}
	option = {
		name = EVTOPTAslizardmen44008
		piety = 50
		prestige = 75
		decadence = -4
		hidden_tooltip = { FROM = { move_character = ROOT
					religion = amazon
					culture = amazon_main
					remove_trait = craven
					remove_trait = kind
					remove_trait = content
					random = { chance = 25
						add_trait = brave }
					random = { chance = 25
						add_trait = cruel }
					random = { chance = 25
						add_trait = wroth }
					random = { chance = 25
						add_trait = hunter } } }
	}
}

####Faction to remove Complacent Amazon

# Amazon Queen receives ultimatum letter
letter_event = {
	id = slizardmen.45
	desc = EVTDESCslizardmen45

	is_triggered_only = yes

	trigger = {
		FROM = { in_faction = faction_complacent_queen }
	}

	immediate = {
		FROM = {
			diplomatic_immunity = yes
			any_faction_backer = {
				faction = faction_complacent_queen
				diplomatic_immunity = yes
				}
			}
		}

	option = {
		name = EVTOPTAslizardmen45
		ai_chance = {
			factor = 30
			modifier = {
				factor = 0.15
				NOT = {
					FROM = {
						faction_power =  { faction = faction_complacent_queen
									power = 0.5 }
						}
					}
			}
			modifier = {
				factor = 0.75
				trait = ambitious
			}
			modifier = {
				factor = 1.5
				trait = content
			}
			modifier = {
				factor = 1.25
				trait = humble
			}
			modifier = {
				factor = 1.5
				trait = diligent
			}
			modifier = {
				factor = 1.25
				trait = charitable
			}
			modifier = {
				factor = 1.25
				trait = patient
			}
			modifier = {
				factor = 1.25
				trait = content
			}
		}
			primary_title = {
				gain_title = { target = FROM type = faction_demand }
				}

		hidden_tooltip = {
			any_vassal = {
				limit = {
					ai = no
					NOT = { in_faction = faction_complacent_queen }
				}
				character_event = { id = slizardmen.49 }
			}
			FROM = {
				letter_event = { id = slizardmen.47 }
				any_faction_backer = {
					faction = faction_complacent_queen
					letter_event = { id = slizardmen.48 }
					diplomatic_immunity = no
				}
				diplomatic_immunity = no
			}
		}
	}
	option = {
		name = EVTOPTBslizardmen45
		ai_chance = {
			factor = 40
			modifier = {
				factor = 1.25
				trait = envious
			}
			modifier = {
				factor = 1.5
				trait = greedy
			}
			modifier = {
				factor = 1.25
				trait = proud
			}
			modifier = {
				factor = 1.25
				trait = wroth
			}
			modifier = {
				factor = 1.25
				trait = ambitious
			}
			modifier = {
				factor = 0.75
				FROM = { faction_power =  { faction = faction_complacent_queen
							power = 1.25 } }
			}
			modifier = {
				factor = 0.75
				FROM = { faction_power =  { faction = faction_complacent_queen
							power = 1.5 } }
			}
			modifier = {
				factor = 0.5
				FROM = {
					faction_power =  { faction = faction_complacent_queen
								power = 1.0 }
					}
			}
			modifier = {
				factor = 0.5
				FROM = {
					faction_power =
					{
						faction = faction_complacent_queen
						power = 2.0
					}
				}
			}
			modifier = {
				factor = 0.5
				FROM = {
					faction_power =
					{
						faction = faction_complacent_queen
						power = 3.0
					}
				}
			}
			modifier = {
				factor = 0.5
				FROM = {
					faction_power =
					{
						faction = faction_complacent_queen
						power = 4.0
					}
				}
			}
		}
		hidden_tooltip = {
			if = {
				limit = {
					FROM = { faction_power = { faction = faction_complacent_queen power = 1.0 } }
				}
				random = {
					chance = 25
					character_event = { id = 45002 days = 120 } # Loyalists flock to the liege's banner
				}
			}
		}
		FROM = {
			letter_event = { id = slizardmen.46 days = 3 tooltip = "EVTTOOLTIP8100" }
			tooltip = {
				any_faction_backer = {
					faction = faction_misaligned_chief
				}
			}
			hidden_tooltip = {
				if = {
					limit = {
						NOT = { faction_power = { faction = faction_complacent_queen power = 0.75 } }
					}
					random_list = {
						50 = {
						}
						30 = {
							character_event = { id = 45000 days = 17 } # A great number of rebels flock to the revolter's banner
						}
						20 = {
							character_event = { id = 45004 days = 17 } # Rebels flock to the revolter's banner
						}
					}
				}
				if = {
					limit = {
						faction_power = { faction = faction_complacent_queen power = 0.75 }
						NOT = { faction_power = { faction = faction_complacent_queen power = 1.5 } }
					}
					random_list = {
						75 = {
						}
						5 = {
							character_event = { id = 45000 days = 17 } # A great number of rebels flock to the revolter's banner
						}
						20 = {
							character_event = { id = 45004 days = 17 } # Rebels flock to the revolter's banner
						}
					}
				}
			}
		}
	}
}

# Demand rejected - Amazon subjects react with war
letter_event = {
	id = slizardmen.46	#8105
	desc = EVTDESCslizardmen46

	is_triggered_only = yes

	option = {
		name = EVTOPTAslizardmen46

		clr_character_flag = faction_complacent_queen_ultimatum_taken
			war = {
				target = FROM
				casus_belli = strengthen_amazonia_cb
				faction = faction_complacent_queen
				}
		}
}

# Demand accepted - Faction leader is installed
letter_event = {
	id = slizardmen.47
	desc = EVTDESCslizardmen47

	is_triggered_only = yes

	option = {
		name = EVTOPTAslizardmen47
		clr_character_flag = faction_complacent_queen_ultimatum_taken
		add_character_modifier = {
			name = faction_complacent_queen_ultimatum_timer
			hidden = yes
			duration = 4000
		}
	}
}
# Inform faction backers - Faction has won
letter_event = {
	id = slizardmen.48			#8075
	desc = EVTDESCslizardmen48

	show_from_from = yes

	is_triggered_only = yes

	option = {
		name = EVTOPTAslizardmen48
		reverse_opinion = {
			modifier = opinion_grateful
			who = FROMFROM
			years = 100
		}
		add_character_modifier = {
			name = faction_complacent_queen_ultimatum_timer
			hidden = yes
			duration = 4000
		}
	}
}

# Inform other vassals - Realignment has been accepted
character_event = {
	id = slizardmen.49			#8076
	desc = EVTDESCslizardmen49

	picture = GFX_evt_amazon
	border = GFX_event_normal_frame_intrigue

	show_from_from = yes

	is_triggered_only = yes

	option = {
		name = EVTOPTAslizardmen49
	}
}

####################
##Add complacent trait

character_event = {
	id = slizardmen.50
	desc = EVTDESCslizardmen50
	picture = GFX_evt_slaanesh_tempt

	only_women = yes
	min_age = 16
	capable_only = yes
	prisoner = no
	religion = amazon

	trigger = {
		num_of_dynasty_members = 3 # Does not trigger for tiny dynasties
		uses_decadence = yes
		NOT = { trait = complacent }
		OR = { trait = slothful
			trait = craven
			trait = content
			trait = gluttonous
			trait = drunkard
			trait = addict
			trait = weak
			trait = incapable
			trait = infirm
			trait = hedonist
			trait = fat
			trait = seductress }
		biggest_realm_size_relative = {
				NOT = { character = PREV }
				realm_size = 3
				}
	}

	mean_time_to_happen = {
		years = 5

		modifier = {
			factor = 0.5
			trait = indulgent_wastrel
		}
		modifier = {
			factor = 0.75
			trait = naive_appeaser
		}
		modifier = {
			factor = 0.75
			trait = amateurish_plotter
		}
		modifier = {
			factor = 0.25
			trait = hedonist
		}
		modifier = {
			factor = 5
			trait = homosexual
		}
		modifier = {
			factor = 0.5
			trait = gluttonous
		}
		modifier = {
			factor = 0.5
			trait = slothful
		}
		modifier = {
			factor = 0.5
			trait = content
		}
		modifier = {
			factor = 0.5
			trait = fat
		}
		modifier = {
			factor = 0.75
			trait = kind
		}
		modifier = {
			factor = 0.75
			NOT = { trait = homosexual }
			trait = lustful
		}
		modifier = {
			factor = 0.75
			trait = arbitrary
		}
		modifier = {
			factor = 3.0
			trait = wroth
		}
		modifier = {
			factor = 3.0
			trait = just
		}
		modifier = {
			factor = 20.0
			trait = brave
		}
		modifier = {
			factor = 10.0
			trait = temperate
		}
		modifier = {
			factor = 2.0
			trait = misguided_warrior
		}
		modifier = {
			factor = 4.0
			trait = tough_soldier
		}
		modifier = {
			factor = 8.0
			trait = skilled_tactician
		}
		modifier = {
			factor = 10.0
			trait = brilliant_strategist
		}
		modifier = {
			factor = 100
			trait = questing
		}
		modifier = {
			factor = 0.95
			tier = BARON
		}
		modifier = {
			factor = 0.75
			tier = COUNT
		}
		modifier = {
			factor = 0.5
			tier = DUKE
		}
		modifier = {
			factor = 0.75
			any_lover = { trait = pet_consort
					count = 1 }
		}
		modifier = {
			factor = 0.5
			any_lover = { trait = pet_consort
					count = 2 }
		}
		modifier = {
			factor = 0.25
			any_lover = { trait = pet_consort
					count = 3 }
		}
		modifier = {
			factor = 0.15
			any_lover = { NOT = { trait = pet_consort }
					is_female = no }
		}
		modifier = {
			factor = 0.5
			highest_ranked_relative = {
				tier = KING
			}
		}
		modifier = {
			factor = 0.5
			highest_ranked_relative = {
				tier = EMPEROR
			}
		}
		modifier = {
			factor = 0.5
			biggest_realm_size_relative = {
				realm_size = 150
			}
		}
		modifier = {
			factor = 0.5
			biggest_realm_size_relative = {
				realm_size = 250
			}
		}
	}

	option = {
		name = EVTOPTAlizardmen50
		add_trait = complacent

		hidden_tooltip = {
			any_dynasty_member = {
				limit = {
					ai = no
				}
				character_event = { id = slizardmen.51 days = 1 }
			}
		}
	}
}

# Every 5 year pulse, increase decadency of Complacent character
character_event = {
	id = slizardmen.50001
	hide_window = yes

	only_women = yes
	min_age = 14
	max_age = 150
	capable_only = yes
	prisoner = no
	religion = amazon

	trigger = { trait = complacent }

	is_triggered_only = yes


	immediate = { decadence = 25
	}
}

# Inform relative has become complacent
character_event = {
	id = slizardmen.51
	desc = EVTDESCslizardmen51
	picture = GFX_evt_slaanesh_tempt

	is_triggered_only = yes

	option = {
		name = EVTOPTAslizardmen51
		piety = -25
	}
}

# Complacent - Content
character_event = {
	id = slizardmen.52001
	desc = EVTDESCslizardmen52001
	picture = GFX_evt_slaanesh_tempt

	ai = no
	only_women = yes
	min_age = 14
	max_age = 150
	capable_only = yes
	prisoner = no
	only_rulers = yes
	religion = amazon

	trigger = {
		uses_decadence = yes
		trait = content
		trait = creature_amazon
	}

	mean_time_to_happen = {
		years = 54
	}

	option = {
		name = EVTOPTAslizardmen52001
		decadence = 2
	}
}

# Complacent - Craven
character_event = {
	id = slizardmen.52002
	desc = EVTDESCslizardmen52002
	picture = GFX_evt_slaanesh_tempt

	ai = no
	only_women = yes
	min_age = 13
	max_age = 120
	capable_only = yes
	prisoner = no
	only_rulers = yes
	religion = amazon

	trigger = {
		uses_decadence = yes
		trait = craven
		trait = creature_amazon
	}

	mean_time_to_happen = {
		years = 54
	}

	option = {
		name = EVTOPTAslizardmen52002
		decadence = 3
	}
}

# Complacent - Lustful
character_event = {
	id = slizardmen.52003
	desc = EVTDESCslizardmen52003
	picture = GFX_evt_slaanesh_tempt

	ai = no
	only_women = yes
	min_age = 13
	max_age = 120
	capable_only = yes
	prisoner = no
	only_rulers = yes
	religion = amazon

	trigger = {
		uses_decadence = yes
		trait = lustful
		trait = creature_amazon
		NOT = { trait = homosexual }
	}

	mean_time_to_happen = {
		years = 54
	}

	option = {
		name = EVTOPTAslizardmen52003
		decadence = 3
	}
}

# Complacent - Gluttonous
character_event = {
	id = slizardmen.52004
	desc = EVTDESCslizardmen52004
	picture = GFX_evt_slaanesh_tempt

	ai = no
	only_women = yes
	min_age = 13
	max_age = 120
	capable_only = yes
	prisoner = no
	only_rulers = yes
	religion = amazon

	trigger = {
		uses_decadence = yes
		OR = { trait = addict
			trait = drunkard
			trait = gluttonous }
		trait = creature_amazon
	}

	mean_time_to_happen = {
		years = 54
	}

	option = {
		name = EVTOPTAslizardmen52004
		decadence = 1
		hidden_tooltip = { character_event = { id = sinsa.1147 days = 150 random = 50 } }
	}
}

# Complacent - Slothful
character_event = {
	id = slizardmen.52005
	desc = EVTDESCslizardmen52005
	picture = GFX_evt_slaanesh_tempt

	ai = no
	only_women = yes
	min_age = 13
	max_age = 120
	capable_only = yes
	prisoner = no
	only_rulers = yes
	religion = amazon

	trigger = {
		uses_decadence = yes
		trait = slothful
		trait = creature_amazon
	}

	mean_time_to_happen = {
		years = 54
	}

	option = {
		name = EVTOPTAslizardmen52005
		decadence = 2
	}
}

# Complacent - Brave
character_event = {
	id = slizardmen.52006
	desc = EVTDESCslizardmen52006
	picture = GFX_evt_amazon_queen

	ai = no
	only_women = yes
	min_age = 13
	max_age = 120
	capable_only = yes
	prisoner = no
	only_rulers = yes
	religion = amazon

	trigger = {
		uses_decadence = yes
		trait = brave
		trait = creature_amazon
	}

	mean_time_to_happen = {
		years = 54
	}

	option = {
		name = EVTOPTAslizardmen52006
		decadence = -3
	}
}

# Complacent - Homosexual
character_event = {
	id = slizardmen.52007
	desc = EVTDESCslizardmen52007
	picture = GFX_evt_amazon_queen

	ai = no
	only_women = yes
	min_age = 13
	max_age = 120
	capable_only = yes
	prisoner = no
	only_rulers = yes
	religion = amazon

	trigger = {
		uses_decadence = yes
		trait = homosexual
		trait = creature_amazon
	}

	mean_time_to_happen = {
		years = 62
	}

	option = {
		name = EVTOPTAslizardmen52007
		decadence = -5
	}
}

# Complacent - Undernourished/Weak
character_event = {
	id = slizardmen.52008
	desc = EVTDESCslizardmen52008
	picture = GFX_evt_slaanesh_tempt

	ai = no
	only_women = yes
	min_age = 13
	max_age = 120
	capable_only = yes
	prisoner = no
	only_rulers = yes
	religion = amazon

	trigger = {
		uses_decadence = yes
		OR = { trait = undernourished
			 trait = weak
			trait = soft
			trait = fragile }
		trait = creature_amazon
	}

	mean_time_to_happen = {
		years = 54
	}

	option = {
		name = EVTOPTAslizardmen52008
		decadence = 4
	}
}

# Complacent - Strong
character_event = {
	id = slizardmen.52009
	desc = EVTDESCslizardmen52009
	picture = GFX_evt_amazon_queen

	ai = no
	only_women = yes
	min_age = 13
	max_age = 120
	capable_only = yes
	prisoner = no
	only_rulers = yes
	religion = amazon

	trigger = {
		uses_decadence = yes
		OR = { trait = strong
			 trait = hardy
			trait = tough }
		trait = creature_amazon
	}

	mean_time_to_happen = {
		years = 54
	}

	option = {
		name = EVTOPTAslizardmen52009
		decadence = -3
	}
}

# Complacent - Diplomatic education
character_event = {
	id = slizardmen.52010
	desc = EVTDESCslizardmen52010
	picture = GFX_evt_slaanesh_tempt

	ai = no
	only_women = yes
	min_age = 13
	max_age = 120
	capable_only = yes
	prisoner = no
	only_rulers = yes
	religion = amazon

	trigger = {
		uses_decadence = yes
		OR = { trait = naive_appeaser
			 trait = underhanded_rogue
			trait = charismatic_negotiator
			trait = grey_eminence }
		trait = creature_amazon
	}

	mean_time_to_happen = {
		years = 54
	}

	option = {
		name = EVTOPTAslizardmen52010
		decadence = 1
	}
}

# Complacent - Martial education
character_event = {
	id = slizardmen.52011
	desc = EVTDESCslizardmen52011
	picture = GFX_evt_amazon_queen

	ai = no
	only_women = yes
	min_age = 13
	max_age = 120
	capable_only = yes
	prisoner = no
	only_rulers = yes
	religion = amazon

	trigger = {
		uses_decadence = yes
		OR = { trait = misguided_warrior
			 trait = tough_soldier
			trait = skilled_tactician
			trait = brilliant_strategist }
		trait = creature_amazon
	}

	mean_time_to_happen = {
		years = 54
	}

	option = {
		name = EVTOPTAslizardmen52011
		decadence = -1
	}
}

# Complacent - Fat
character_event = {
	id = slizardmen.52012
	desc = EVTDESCslizardmen52012
	picture = GFX_evt_slaanesh_tempt

	ai = no
	only_women = yes
	min_age = 13
	max_age = 120
	capable_only = yes
	prisoner = no
	only_rulers = yes
	religion = amazon

	trigger = {
		uses_decadence = yes
		trait = fat
		trait = creature_amazon
	}

	mean_time_to_happen = {
		years = 54
	}

	option = {
		name = EVTOPTAslizardmen52012
		decadence = 4
	}
}

# Complacent - Deformed
character_event = {
	id = slizardmen.52013
	desc = EVTDESCslizardmen52013
	picture = GFX_evt_slaanesh_tempt

	ai = no
	only_women = yes
	min_age = 13
	max_age = 120
	capable_only = yes
	prisoner = no
	only_rulers = yes
	religion = amazon

	trigger = {
		uses_decadence = yes
		OR = { trait = hunchback
			 trait = dwarf
			trait = clubfooted
			trait = mutation_minor
			trait = mutation_major
			trait = mutation_massive }
		trait = creature_amazon
	}

	mean_time_to_happen = {
		years = 54
	}

	option = {
		name = EVTOPTAslizardmen52013
		decadence = 5
	}
}

#####Flavor events for the Amazonian Festival#####

#Umbrella event for amazonian feast
character_event = {
	id = slizardmen.53
	hide_window = yes

	trigger = { trait = creature_amazon
		has_character_flag = holding_amazon_ritual }

	is_triggered_only = yes

	immediate = {
		random_list = { 15 = { character_event = { id = slizardmen.54 } } #Drinking contest
				5 = { character_event = { id = slizardmen.55 } } #Eating contest
				 20 = { character_event = { id = slizardmen.56 } } #Mud Fighting
				 4 = { character_event = { id = slizardmen.57 } } #Love
				 10 = { modifier = { factor = 1.5
						check_variable = { which = "drinking_count" value = 4 }
						 }
					modifier = { factor = 0.2
						NOT = { check_variable = { which = "drinking_count" value = 1 } }
						 }
					character_event = { id = slizardmen.53001 } } #Drank too much
				 10 = { modifier = { factor = 1.5
						check_variable = { which = "eating_count" value = 4 }
						 }
					modifier = { factor = 0.2
						NOT = { check_variable = { which = "eating_count" value = 1 } }
						 }
					character_event = { id = slizardmen.53002 } } #Eaten too much
				 5 = { character_event = { id = slizardmen.53003 } } #Taken bad herbs
				 5 = { character_event = { id = slizardmen.53004 } } #Taken good herbs
				 5 = { character_event = { id = slizardmen.53005 } } #Fun while drunk
				 16 = { character_event = { id = slizardmen.53006 } } #Dancing
				 5 = { modifier = { factor = 0
						NOT = { check_variable = { which = "drinking_count" value = 1 } }
						NOT = { check_variable = { which = "eating_count" value = 1 } }
						 }
					long_character_event = { id = slizardmen.53007 } } #Passing the Snake
				 }
	}
}

# Drinking a lot during the festival
character_event = {
	id = slizardmen.53001
	desc = EVTDESCslizardmen53001
	picture = GFX_evt_amazon_feast

	trigger = { trait = creature_amazon
		has_character_flag = holding_amazon_ritual }

	is_triggered_only = yes

	option = {
		name = EVTOPTAslizardmen53001
		decadence = 2
		random = { chance = 5
			add_trait = drunkard }
	}
}

# Eating a lot during the festival
character_event = {
	id = slizardmen.53002
	desc = EVTDESCslizardmen53002
	picture = GFX_evt_amazon_feast

	trigger = { trait = creature_amazon
		has_character_flag = holding_amazon_ritual }

	is_triggered_only = yes

	option = {
		name = EVTOPTAslizardmen53002
		decadence = 2
		random = { chance = 5
			add_trait = gluttonous }
	}
}

# Taking herbs during the festival and puking
character_event = {
	id = slizardmen.53003
	desc = EVTDESCslizardmen53003
	picture = GFX_evt_amazon_feast

	trigger = { trait = creature_amazon
		has_character_flag = holding_amazon_ritual }

	is_triggered_only = yes

	option = {
		name = EVTOPTAslizardmen53003
		decadence = 2
		random = { chance = 5
			add_trait = addict }
	}
}

# Taking herbs during the festival and having a vision
character_event = {
	id = slizardmen.53004
	desc = EVTDESCslizardmen53004
	picture = GFX_evt_amazon_feast

	trigger = { trait = creature_amazon
		has_character_flag = holding_amazon_ritual }

	is_triggered_only = yes

	option = {
		name = EVTOPTAslizardmen53004
		decadence = -1
		random = { chance = 5
			add_trait = addict }
	}
}

# Had some good time with your Amazon Sisters while drunk
character_event = {
	id = slizardmen.53005
	desc = EVTDESCslizardmen53005
	picture = GFX_evt_amazon_feast

	trigger = { trait = creature_amazon
		has_character_flag = holding_amazon_ritual }

	is_triggered_only = yes

	option = {
		name = EVTOPTAslizardmen53005
		decadence = -1
		prestige = 50
	}
}

# Dancing around the fire
character_event = {
	id = slizardmen.53006
	desc = EVTDESCslizardmen53006
	picture = GFX_evt_amazon_feast

	trigger = { trait = creature_amazon
		has_character_flag = holding_amazon_ritual }

	is_triggered_only = yes

	option = {
		name = EVTOPTAslizardmen53006
		piety = 10
	}
}

# Passing the Snake
long_character_event = {
	id = slizardmen.53007
	desc = EVTDESCslizardmen53007
	picture = GFX_evt_amazon_snake

	trigger = { trait = creature_amazon
		has_character_flag = holding_amazon_ritual }

	is_triggered_only = yes

	option = {
		name = EVTOPTAslizardmen53007
		decadence = -1
		piety = 75
	}
}

# Drinking Contest
character_event = {
	id = slizardmen.54
	hide_window = yes

	trigger = { trait = creature_amazon
		has_character_flag = holding_amazon_ritual }

	is_triggered_only = yes

	immediate = {
		save_event_target_as = am_drinking_1
	if = { limit = { any_courtier = {
					trait = creature_amazon } }
		random_courtier = { limit = {
					trait = creature_amazon }
				character_event = { id = slizardmen.54001 } }
		}
		clr_character_flag = start_feast_contest
	}
}

# Second Amazon: Accept drinking contest?
character_event = {
	id = slizardmen.54001
	desc = EVTDESCslizardmen54001
	picture = GFX_evt_amazon_feast

	trigger = { trait = creature_amazon
		has_character_flag = holding_amazon_ritual }

	is_triggered_only = yes

	option = {
		name = EVTOPTAslizardmen54001
		save_event_target_as = am_drinking_2
		FROM = { character_event = { id = slizardmen.54003 } }
		ai_chance = { factor = 75 }
	}
	option = {
		name = EVTOPTBslizardmen54001
		decadence = 3
		FROM = { character_event = { id = slizardmen.54002 } }
		ai_chance = { factor = 25
			modifier = { factor = 2
				trait = craven }
			}
	}
}

#Second Amazon is too cowardly
character_event = {
	id = slizardmen.54002
	desc = EVTDESCslizardmen54002
	picture = GFX_evt_amazon_feast

	trigger = { trait = creature_amazon }

	is_triggered_only = yes

	option = {
		name = EVTOPTAslizardmen54002
		prestige = 25
		clr_character_flag = feast_contest
		FROM = { clr_character_flag = feast_contest }
		ai_chance = { factor = 1 }
	}
}

#Amazon takes first drink
character_event = {
	id = slizardmen.54003
	desc = EVTDESCslizardmen54003
	picture = GFX_evt_amazon_feast

	trigger = { trait = creature_amazon
		has_character_flag = holding_amazon_ritual }

	is_triggered_only = yes

	option = {
		name = EVTOPTAslizardmen54003
		hidden_tooltip = { random_list = { 90 = { #Drank fine, keep going
							modifier = { factor = 0.65
								trait = fragile
								 }
							modifier = { factor = 0.75
								trait = weak
								 }
							modifier = { factor = 0.85
								trait = soft
								 }
							modifier = { factor = 1.5
								trait = hardy
								 }
							modifier = { factor = 1.65
								trait = tough
								 }
							modifier = { factor = 1.85
								trait = strong
								 }
							modifier = { factor = 0.75
								trait = temperate
								 }
							modifier = { factor = 1.15
								trait = diligent
								 }
							modifier = { factor = 1.5
								trait = drunkard
								 }
							modifier = { factor = 1.25
								trait = addict
								 }
							modifier = { factor = 1.15
								trait = gluttonous
								 }
							modifier = { factor = 1.5
								trait = fat
								 }
							modifier = { factor = 0.75
								trait = undernourished
								 }
							modifier = { factor = 1.5
								trait = ambitious
								 }
							modifier = { factor = 0.85
								trait = content
								 }
							modifier = { factor = 0.85
								check_variable = { which = "drinking_count" value = 5 }
								 }
							modifier = { factor = 0.75
								check_variable = { which = "drinking_count" value = 7 }
								 }
							modifier = { factor = 0.75
								check_variable = { which = "drinking_count" value = 10 }
								 }
							modifier = { factor = 0.75
								check_variable = { which = "drinking_count" value = 13 }
								 }
							modifier = { factor = 0.75
								check_variable = { which = "drinking_count" value = 15 }
								 }
							modifier = { factor = 0.75
								check_variable = { which = "drinking_count" value = 17 }
								 }
							modifier = { factor = 0.75
								check_variable = { which = "drinking_count" value = 20 }
								 }
							modifier = { factor = 0.25
								check_variable = { which = "drinking_count" value = 23 }
								 }
							modifier = { factor = 0.15
								check_variable = { which = "drinking_count" value = 25 }
								 }
							modifier = { factor = 0
								check_variable = { which = "drinking_count" value = 30 }
								 }
							if = { limit = { event_target:am_drinking_1 = { character = ROOT } }
								event_target:am_drinking_2 = { character_event = { id = slizardmen.54006 } } }
							 if = { limit = { event_target:am_drinking_2 = { character = ROOT } }
								event_target:am_drinking_1 = { character_event = { id = slizardmen.54006 } } }
							 } #closes50
						10 = { #Collapsed, declared victor
							if = { limit = { event_target:am_drinking_1 = { character = ROOT } }
								event_target:am_drinking_2 = { character_event = { id = slizardmen.54005 } } #Notify Winner
								event_target:am_drinking_1 = { character_event = { id = slizardmen.54007 } } } #Notify Loser
							 if = { limit = { event_target:am_drinking_2 = { character = ROOT } }
								event_target:am_drinking_1 = { character_event = { id = slizardmen.54005 } } #Notify Winner
								event_target:am_drinking_2 = { character_event = { id = slizardmen.54007 } } } #Notify Loser
							 } #closes50
						}
				 }
		hidden_tooltip = { change_variable = { which = "drinking_count" value = 1 } }
		ai_chance = { factor = 75 }
	}
}

#Other Amazon yields - Notify winner
character_event = {
	id = slizardmen.54004
	desc = EVTDESCslizardmen54004
	picture = GFX_evt_amazon_feast

	trigger = { trait = creature_amazon }

	is_triggered_only = yes

	option = {
		name = EVTOPTAslizardmen54004
		prestige = 50
		decadence = -1
		event_target:am_drinking_1 = { clr_character_flag = feast_contest }
		event_target:am_drinking_2 = { clr_character_flag = feast_contest }
		ai_chance = { factor = 1 }
	}
}

#Other Amazon has been defeated - Notify winner
character_event = {
	id = slizardmen.54005
	desc = EVTDESCslizardmen54005
	picture = GFX_evt_amazon_feast

	trigger = { trait = creature_amazon }

	is_triggered_only = yes

	option = {
		name = EVTOPTAslizardmen54005
		prestige = 50
		if = { limit = { check_variable = { which = "drinking_count" value = 5 } }
			prestige = 50 }
		if = { limit = { check_variable = { which = "drinking_count" value = 10 } }
			prestige = 50 }
		if = { limit = { check_variable = { which = "drinking_count" value = 15 } }
			prestige = 100 }
		if = { limit = { check_variable = { which = "drinking_count" value = 20 } }
			decadence = -1
			prestige = 150 }
		decadence = -2
		hidden_tooltip = { random = { chance = 1
					add_trait = drunkard } }
		event_target:am_drinking_1 = { clr_character_flag = feast_contest }
		event_target:am_drinking_2 = { clr_character_flag = feast_contest }
		ai_chance = { factor = 1 }
	}
}

#Amazon takes drink after opponent
character_event = {
	id = slizardmen.54006
	desc = { text = EVTDESCAslizardmen54006
		trigger = { NOT = { check_variable = { which = "drinking_count" value = 5 } } } }
	desc = { text = EVTDESCBslizardmen54006
		trigger = { check_variable = { which = "drinking_count" value = 5 }
				NOT = { check_variable = { which = "drinking_count" value = 10 } } } }
	desc = { text = EVTDESCCslizardmen54006
		trigger = { check_variable = { which = "drinking_count" value = 10 }
				NOT = { check_variable = { which = "drinking_count" value = 15 } } } }
	desc = { text = EVTDESCDslizardmen54006
		trigger = { check_variable = { which = "drinking_count" value = 15 }
				NOT = { check_variable = { which = "drinking_count" value = 20 } } } }

	picture = GFX_evt_amazon_feast

	trigger = { trait = creature_amazon
		has_character_flag = holding_amazon_ritual }

	is_triggered_only = yes

	option = {
		name = EVTOPTAslizardmen54006
		hidden_tooltip = { random_list = { 85 = { #Drank fine, keep going
							modifier = { factor = 0.65
								trait = fragile
								 }
							modifier = { factor = 0.75
								trait = weak
								 }
							modifier = { factor = 0.85
								trait = soft
								 }
							modifier = { factor = 1.5
								trait = hardy
								 }
							modifier = { factor = 1.65
								trait = tough
								 }
							modifier = { factor = 1.85
								trait = strong
								 }
							modifier = { factor = 0.75
								trait = temperate
								 }
							modifier = { factor = 1.15
								trait = diligent
								 }
							modifier = { factor = 1.5
								trait = drunkard
								 }
							modifier = { factor = 1.25
								trait = addict
								 }
							modifier = { factor = 1.15
								trait = gluttonous
								 }
							modifier = { factor = 1.5
								trait = fat
								 }
							modifier = { factor = 0.75
								trait = undernourished
								 }
							modifier = { factor = 1.5
								trait = ambitious
								 }
							modifier = { factor = 0.85
								trait = content
								 }
							modifier = { factor = 0.85
								check_variable = { which = "drinking_count" value = 5 }
								 }
							modifier = { factor = 0.75
								check_variable = { which = "drinking_count" value = 7 }
								 }
							modifier = { factor = 0.75
								check_variable = { which = "drinking_count" value = 10 }
								 }
							modifier = { factor = 0.75
								check_variable = { which = "drinking_count" value = 13 }
								 }
							modifier = { factor = 0.75
								check_variable = { which = "drinking_count" value = 15 }
								 }
							modifier = { factor = 0.75
								check_variable = { which = "drinking_count" value = 17 }
								 }
							modifier = { factor = 0.75
								check_variable = { which = "drinking_count" value = 20 }
								 }
							modifier = { factor = 0.25
								check_variable = { which = "drinking_count" value = 23 }
								 }
							modifier = { factor = 0.15
								check_variable = { which = "drinking_count" value = 25 }
								 }
							modifier = { factor = 0
								check_variable = { which = "drinking_count" value = 30 }
								 }
							if = { limit = { event_target:am_drinking_1 = { character = ROOT } }
								event_target:am_drinking_2 = { character_event = { id = slizardmen.54006 } } }
							 if = { limit = { event_target:am_drinking_2 = { character = ROOT } }
								event_target:am_drinking_1 = { character_event = { id = slizardmen.54006 } } }
							 } #closes50
						15 = { #Collapsed, declared victor
							if = { limit = { event_target:am_drinking_1 = { character = ROOT } }
								event_target:am_drinking_2 = { character_event = { id = slizardmen.54005 } } #Notify Winner
								event_target:am_drinking_1 = { character_event = { id = slizardmen.54007 } } } #Notify Loser
							 if = { limit = { event_target:am_drinking_2 = { character = ROOT } }
								event_target:am_drinking_1 = { character_event = { id = slizardmen.54005 } } #Notify Winner
								event_target:am_drinking_2 = { character_event = { id = slizardmen.54007 } } } #Notify Loser
							 } #closes50
						}
				 }
		hidden_tooltip = { change_variable = { which = "drinking_count" value = 1 } }
		ai_chance = { factor = 95 }
	}
	option = { #Yield
		name = EVTOPTBslizardmen54006
		decadence = 1
		if = { limit = { event_target:am_drinking_1 = { character = ROOT } }
					event_target:am_drinking_2 = { character_event = { id = slizardmen.54004 } } }
		 if = { limit = { event_target:am_drinking_2 = { character = ROOT } }
					event_target:am_drinking_1 = { character_event = { id = slizardmen.54004 } } }
		ai_chance = { factor = 5
			modifier = { factor = 2
				trait = craven }
			modifier = { factor = 2
				check_variable = { which = "drinking_count" value = 10 } }
			modifier = { factor = 4
				check_variable = { which = "drinking_count" value = 20 } }
			}
	}
}

#You lost
character_event = {
	id = slizardmen.54007
	desc = EVTDESCslizardmen54007
	picture = GFX_evt_amazon_feast

	trigger = { trait = creature_amazon }

	is_triggered_only = yes

	option = {
		name = EVTOPTAslizardmen54007
		if = { limit = { check_variable = { which = "drinking_count" value = 5 } }
			prestige = 50 }
		if = { limit = { check_variable = { which = "drinking_count" value = 10 } }
			prestige = 50 }
		if = { limit = { check_variable = { which = "drinking_count" value = 15 } }
			prestige = 100 }
		if = { limit = { check_variable = { which = "drinking_count" value = 20 } }
			decadence = -1
			prestige = 150 }
		decadence = 1
		hidden_tooltip = { random = { chance = 1
					add_trait = drunkard } }
		event_target:am_drinking_1 = { clr_character_flag = feast_contest }
		event_target:am_drinking_2 = { clr_character_flag = feast_contest }
		ai_chance = { factor = 1 }
	}
}

# Eating Contest
character_event = {
	id = slizardmen.55
	hide_window = yes

	trigger = { trait = creature_amazon
		has_character_flag = holding_amazon_ritual }

	is_triggered_only = yes

	immediate = {
		save_event_target_as = am_eating_1
	if = { limit = { any_courtier = {
					trait = creature_amazon } }
		random_courtier = { limit = {
					trait = creature_amazon }
				character_event = { id = slizardmen.55001 } }
		}
		clr_character_flag = start_feast_contest
	}
}

# Second Amazon: Accept eating contest?
character_event = {
	id = slizardmen.55001
	desc = EVTDESCslizardmen55001
	picture = GFX_evt_amazon_feast

	trigger = { trait = creature_amazon
		has_character_flag = holding_amazon_ritual }

	is_triggered_only = yes

	option = {
		name = EVTOPTAslizardmen55001
		set_character_flag = feast_contest
		save_event_target_as = am_eating_2
		FROM = { character_event = { id = slizardmen.55003 } }
		ai_chance = { factor = 75 }
	}
	option = {
		name = EVTOPTBslizardmen55001
		decadence = 3
		FROM = { character_event = { id = slizardmen.55002 } }
		ai_chance = { factor = 25
			modifier = { factor = 2
				trait = craven }
			}
	}
}

#Second Amazon is too cowardly
character_event = {
	id = slizardmen.55002
	desc = EVTDESCslizardmen55002
	picture = GFX_evt_amazon_feast

	trigger = { trait = creature_amazon }

	is_triggered_only = yes

	option = {
		name = EVTOPTAslizardmen55002
		prestige = 25
		clr_character_flag = feast_contest
		FROM = { clr_character_flag = feast_contest }
		ai_chance = { factor = 1 }
	}
}

#Amazon takes first course
character_event = {
	id = slizardmen.55003
	desc = EVTDESCslizardmen55003
	picture = GFX_evt_amazon_feast

	trigger = { trait = creature_amazon
		has_character_flag = holding_amazon_ritual }

	is_triggered_only = yes

	option = {
		name = EVTOPTAslizardmen55003
		hidden_tooltip = { random_list = { 95 = { #Drank fine, keep going
							modifier = { factor = 0.65
								trait = fragile
								 }
							modifier = { factor = 0.75
								trait = weak
								 }
							modifier = { factor = 0.85
								trait = soft
								 }
							modifier = { factor = 1.5
								trait = hardy
								 }
							modifier = { factor = 1.65
								trait = tough
								 }
							modifier = { factor = 1.85
								trait = strong
								 }
							modifier = { factor = 0.75
								trait = temperate
								 }
							modifier = { factor = 1.15
								trait = diligent
								 }
							modifier = { factor = 1.15
								trait = drunkard
								 }
							modifier = { factor = 1.25
								trait = addict
								 }
							modifier = { factor = 1.5
								trait = gluttonous
								 }
							modifier = { factor = 0.75
								trait = fat
								 }
							modifier = { factor = 1.75
								trait = undernourished
								 }
							modifier = { factor = 1.5
								trait = ambitious
								 }
							modifier = { factor = 0.85
								trait = content
								 }
							modifier = { factor = 0.85
								check_variable = { which = "eating_count" value = 1 }
								 }
							modifier = { factor = 0.75
								check_variable = { which = "eating_count" value = 2 }
								 }
							modifier = { factor = 0.75
								check_variable = { which = "eating_count" value = 3 }
								 }
							modifier = { factor = 0.75
								check_variable = { which = "eating_count" value = 4 }
								 }
							modifier = { factor = 0.75
								check_variable = { which = "eating_count" value = 5 }
								 }
							modifier = { factor = 0.75
								check_variable = { which = "eating_count" value = 6 }
								 }
							modifier = { factor = 0.75
								check_variable = { which = "eating_count" value = 7 }
								 }
							modifier = { factor = 0.25
								check_variable = { which = "eating_count" value = 8 }
								 }
							modifier = { factor = 0.15
								check_variable = { which = "eating_count" value = 9 }
								 }
							modifier = { factor = 0
								check_variable = { which = "eating_count" value = 10 }
								 }
							if = { limit = { event_target:am_eating_1 = { character = ROOT } }
								event_target:am_eating_2 = { character_event = { id = slizardmen.55006 } } }
							 if = { limit = { event_target:am_eating_2 = { character = ROOT } }
								event_target:am_eating_1 = { character_event = { id = slizardmen.55006 } } }
							 } #closes50
						5 = { #Collapsed, declared victor
							if = { limit = { event_target:am_eating_1 = { character = ROOT } }
								event_target:am_eating_2 = { character_event = { id = slizardmen.55005 } } #Notify Winner
								event_target:am_eating_1 = { character_event = { id = slizardmen.55007 } } } #Notify Loser
							 if = { limit = { event_target:am_eating_2 = { character = ROOT } }
								event_target:am_eating_1 = { character_event = { id = slizardmen.55005 } } #Notify Winner
								event_target:am_eating_2 = { character_event = { id = slizardmen.55007 } } } #Notify Loser
							 } #closes50
						}
				 }
		hidden_tooltip = { change_variable = { which = "eating_count" value = 1 } }
		ai_chance = { factor = 75 }
	}
}

#Other Amazon yields - Notify winner
character_event = {
	id = slizardmen.55004
	desc = EVTDESCslizardmen55004
	picture = GFX_evt_amazon_feast

	trigger = { trait = creature_amazon }

	is_triggered_only = yes

	option = {
		name = EVTOPTAslizardmen55004
		prestige = 50
		decadence = -1
		event_target:am_eating_1 = { clr_character_flag = feast_contest }
		event_target:am_eating_2 = { clr_character_flag = feast_contest }
		ai_chance = { factor = 1 }
	}
}

#Other Amazon has been defeated - Notify winner
character_event = {
	id = slizardmen.55005
	desc = EVTDESCslizardmen55005
	picture = GFX_evt_amazon_feast

	trigger = { trait = creature_amazon }

	is_triggered_only = yes

	option = {
		name = EVTOPTAslizardmen55005
		prestige = 50
		if = { limit = { check_variable = { which = "eating_count" value = 2 } }
			prestige = 50 }
		if = { limit = { check_variable = { which = "eating_count" value = 4 } }
			prestige = 50 }
		if = { limit = { check_variable = { which = "eating_count" value = 7 } }
			prestige = 100 }
		if = { limit = { check_variable = { which = "eating_count" value = 10 } }
			decadence = -1
			prestige = 150 }
		decadence = -2
		hidden_tooltip = { random = { chance = 1
					add_trait = gluttonous } }
		event_target:am_eating_1 = { clr_character_flag = feast_contest }
		event_target:am_eating_2 = { clr_character_flag = feast_contest }
		ai_chance = { factor = 1 }
	}
}

#Amazon takes course after opponent
character_event = {
	id = slizardmen.55006
	desc = { text = EVTDESCAslizardmen55006
		trigger = { NOT = { check_variable = { which = "eating_count" value = 2 } } } }
	desc = { text = EVTDESCBslizardmen55006
		trigger = { check_variable = { which = "eating_count" value = 2 }
				NOT = { check_variable = { which = "eating_count" value = 3 } } } }
	desc = { text = EVTDESCCslizardmen55006
		trigger = { check_variable = { which = "eating_count" value = 3 }
				NOT = { check_variable = { which = "eating_count" value = 5 } } } }
	desc = { text = EVTDESCDslizardmen55006
		trigger = { check_variable = { which = "eating_count" value = 5 }
				NOT = { check_variable = { which = "eating_count" value = 10 } } } }

	picture = GFX_evt_amazon_feast

	trigger = { trait = creature_amazon
		has_character_flag = holding_amazon_ritual }

	is_triggered_only = yes


	option = {
		name = EVTOPTAslizardmen55006
		hidden_tooltip = { random_list = { 85 = { #Drank fine, keep going
							modifier = { factor = 0.65
								trait = fragile
								 }
							modifier = { factor = 0.75
								trait = weak
								 }
							modifier = { factor = 0.85
								trait = soft
								 }
							modifier = { factor = 1.5
								trait = hardy
								 }
							modifier = { factor = 1.65
								trait = tough
								 }
							modifier = { factor = 1.85
								trait = strong
								 }
							modifier = { factor = 0.75
								trait = temperate
								 }
							modifier = { factor = 1.15
								trait = diligent
								 }
							modifier = { factor = 1.15
								trait = drunkard
								 }
							modifier = { factor = 1.25
								trait = addict
								 }
							modifier = { factor = 1.5
								trait = gluttonous
								 }
							modifier = { factor = 0.75
								trait = fat
								 }
							modifier = { factor = 1.75
								trait = undernourished
								 }
							modifier = { factor = 1.5
								trait = ambitious
								 }
							modifier = { factor = 0.85
								trait = content
								 }
							modifier = { factor = 0.85
								check_variable = { which = "eating_count" value = 1 }
								 }
							modifier = { factor = 0.75
								check_variable = { which = "eating_count" value = 2 }
								 }
							modifier = { factor = 0.75
								check_variable = { which = "eating_count" value = 3 }
								 }
							modifier = { factor = 0.75
								check_variable = { which = "eating_count" value = 4 }
								 }
							modifier = { factor = 0.75
								check_variable = { which = "eating_count" value = 5 }
								 }
							modifier = { factor = 0.75
								check_variable = { which = "eating_count" value = 6 }
								 }
							modifier = { factor = 0.75
								check_variable = { which = "eating_count" value = 7 }
								 }
							modifier = { factor = 0.25
								check_variable = { which = "eating_count" value = 8 }
								 }
							modifier = { factor = 0.15
								check_variable = { which = "eating_count" value = 9 }
								 }
							modifier = { factor = 0
								check_variable = { which = "eating_count" value = 10 }
								 }
							if = { limit = { event_target:am_eating_1 = { character = ROOT } }
								event_target:am_eating_2 = { character_event = { id = slizardmen.55006 } } }
							 if = { limit = { event_target:am_eating_2 = { character = ROOT } }
								event_target:am_eating_1 = { character_event = { id = slizardmen.55006 } } }
							 } #closes50
						15 = { #Collapsed, declared victor
							if = { limit = { event_target:am_eating_1 = { character = ROOT } }
								event_target:am_eating_2 = { character_event = { id = slizardmen.55005 } } #Notify Winner
								event_target:am_eating_1 = { character_event = { id = slizardmen.55007 } } } #Notify Loser
							 if = { limit = { event_target:am_eating_2 = { character = ROOT } }
								event_target:am_eating_1 = { character_event = { id = slizardmen.55005 } } #Notify Winner
								event_target:am_eating_2 = { character_event = { id = slizardmen.55007 } } } #Notify Loser
							 } #closes50
						}
				 }
		hidden_tooltip = { change_variable = { which = "eating_count" value = 1 } }
		ai_chance = { factor = 90 }
	}
	option = { #Yield
		name = EVTOPTBslizardmen55006
		decadence = 1
		if = { limit = { event_target:am_eating_1 = { character = ROOT } }
					event_target:am_eating_2 = { character_event = { id = slizardmen.55004 } } }
		 if = { limit = { event_target:am_eating_2 = { character = ROOT } }
					event_target:am_eating_1 = { character_event = { id = slizardmen.55004 } } }
		ai_chance = { factor = 10
			modifier = { factor = 2
				trait = craven }
			modifier = { factor = 2
				check_variable = { which = "eating_count" value = 5 } }
			modifier = { factor = 4
				check_variable = { which = "eating_count" value = 10 } }
			}
	}
}

#You lost
character_event = {
	id = slizardmen.55007
	desc = EVTDESCslizardmen55007
	picture = GFX_evt_amazon_feast

	trigger = { trait = creature_amazon }

	is_triggered_only = yes

	option = {
		name = EVTOPTAslizardmen55007
		if = { limit = { check_variable = { which = "eating_count" value = 2 } }
			prestige = 50 }
		if = { limit = { check_variable = { which = "eating_count" value = 4 } }
			prestige = 50 }
		if = { limit = { check_variable = { which = "eating_count" value = 7 } }
			prestige = 100 }
		if = { limit = { check_variable = { which = "eating_count" value = 10 } }
			decadence = -1
			prestige = 150 }
		decadence = 1
		hidden_tooltip = { random = { chance = 1
					add_trait = gluttonous } }
		event_target:am_eating_1 = { clr_character_flag = feast_contest }
		event_target:am_eating_2 = { clr_character_flag = feast_contest }
		ai_chance = { factor = 1 }
	}
}

# Mud Fighting
character_event = {
	id = slizardmen.56
	hide_window = yes

	trigger = { trait = creature_amazon
		has_character_flag = holding_amazon_ritual }

	is_triggered_only = yes

	immediate = {
		save_event_target_as = am_mud_1
	if = { limit = { any_courtier = {
					trait = creature_amazon } }
		random_courtier = { limit = {
					trait = creature_amazon }
				character_event = { id = slizardmen.56001 } }
		}
		clr_character_flag = start_feast_contest
	}
}

# Second Amazon: Accept brawling?
character_event = {
	id = slizardmen.56001
	desc = EVTDESCslizardmen56001
	picture = GFX_evt_amazon_feast

	trigger = { trait = creature_amazon
		has_character_flag = holding_amazon_ritual }

	is_triggered_only = yes

	option = {
		name = EVTOPTAslizardmen56001
		save_event_target_as = am_mud_2
		FROM = { character_event = { id = slizardmen.56102 } }
		ai_chance = { factor = 75 }
	}
	option = {
		name = EVTOPTBslizardmen56001
		decadence = 3
		FROM = { character_event = { id = slizardmen.56002 } }
		ai_chance = { factor = 25
			modifier = { factor = 2
				trait = craven }
			}
	}
}

#Second Amazon is too cowardly
character_event = {
	id = slizardmen.56002
	desc = EVTDESCslizardmen56002
	picture = GFX_evt_amazon_feast

	trigger = { trait = creature_amazon }

	is_triggered_only = yes

	option = {
		name = EVTOPTAslizardmen56002
		prestige = 25
		clr_character_flag = feast_contest
		FROM = { clr_character_flag = feast_contest }
		ai_chance = { factor = 1 }
	}
}

#Second Amazon responds
character_event = {
	id = slizardmen.56102
	desc = EVTDESCslizardmen56102
	picture = GFX_evt_amazon_feast

	trigger = { trait = creature_amazon }

	is_triggered_only = yes

	option = {
		name = EVTOPTAslizardmen56102
		event_target:am_mud_2 = { character_event = { id = slizardmen.56003 } }
		ai_chance = { factor = 1 }
	}
}
#Hidden fighting event to determine winner
character_event = {
	id = slizardmen.56003
	hide_window = yes

	trigger = { trait = creature_amazon
		has_character_flag = holding_amazon_ritual }

	is_triggered_only = yes

	immediate = {
		hidden_tooltip = { random_list = { 50 = { #First contestant wins
							modifier = { factor = 0.65
								event_target:am_mud_1 = { trait = fragile }
								 }
							modifier = { factor = 0.75
								event_target:am_mud_1 = { trait = weak }
								 }
							modifier = { factor = 0.85
								event_target:am_mud_1 = { trait = soft }
								 }
							modifier = { factor = 1.25
								event_target:am_mud_1 = { trait = hardy }
								 }
							modifier = { factor = 1.5
								event_target:am_mud_1 = { trait = tough }
								 }
							modifier = { factor = 1.75
								event_target:am_mud_1 = { trait = strong }
								 }
							modifier = { factor = 0.5
								event_target:am_mud_1 = { trait = craven }
								 }
							modifier = { factor = 1.15
								event_target:am_mud_1 = { trait = diligent }
								 }
							modifier = { factor = 0.85
								event_target:am_mud_1 = { trait = drunkard }
								 }
							modifier = { factor = 0.85
								event_target:am_mud_1 = { trait = addict }
								 }
							modifier = { factor = 1.75
								event_target:am_mud_1 = { trait = brave }
								 }
							modifier = { factor = 0.85
								event_target:am_mud_1 = { trait = fat }
								 }
							modifier = { factor = 0.85
								event_target:am_mud_1 = { trait = undernourished }
								 }
							modifier = { factor = 1.5
								event_target:am_mud_1 = { trait = ambitious }
								 }
							modifier = { factor = 0.85
								event_target:am_mud_1 = { trait = content }
								 }
							modifier = { factor = 1.85
								event_target:am_mud_1 = { trait = duelist }
								 }
							modifier = { factor = 1.5
								event_target:am_mud_1 = { trait = hunter }
								 }
							modifier = { factor = 0.5
								event_target:am_mud_1 = { trait = wounded }
								 }
							modifier = { factor = 0.25
								event_target:am_mud_1 = { trait = maimed }
								 }
							modifier = { factor = 0.75
								event_target:am_mud_1 = { trait = infirm }
								 }
								event_target:am_mud_1 = { long_character_event = { id = slizardmen.56004 } }
							 } #closes50
						50 = { #Second contestant wins

							modifier = { factor = 0.65
								event_target:am_mud_2 = { trait = fragile }
								 }
							modifier = { factor = 0.75
								event_target:am_mud_2 = { trait = weak }
								 }
							modifier = { factor = 0.85
								event_target:am_mud_2 = { trait = soft }
								 }
							modifier = { factor = 1.25
								event_target:am_mud_2 = { trait = hardy }
								 }
							modifier = { factor = 1.5
								event_target:am_mud_2 = { trait = tough }
								 }
							modifier = { factor = 1.75
								event_target:am_mud_2 = { trait = strong }
								 }
							modifier = { factor = 0.5
								event_target:am_mud_2 = { trait = craven }
								 }
							modifier = { factor = 1.15
								event_target:am_mud_2 = { trait = diligent }
								 }
							modifier = { factor = 0.85
								event_target:am_mud_2 = { trait = drunkard }
								 }
							modifier = { factor = 0.85
								event_target:am_mud_2 = { trait = addict }
								 }
							modifier = { factor = 1.75
								event_target:am_mud_2 = { trait = brave }
								 }
							modifier = { factor = 0.85
								event_target:am_mud_2 = { trait = fat }
								 }
							modifier = { factor = 0.85
								event_target:am_mud_2 = { trait = undernourished }
								 }
							modifier = { factor = 1.5
								event_target:am_mud_2 = { trait = ambitious }
								 }
							modifier = { factor = 0.85
								event_target:am_mud_2 = { trait = content }
								 }
							modifier = { factor = 1.85
								event_target:am_mud_2 = { trait = duelist }
								 }
							modifier = { factor = 1.5
								event_target:am_mud_2 = { trait = hunter }
								 }
							modifier = { factor = 0.5
								event_target:am_mud_2 = { trait = wounded }
								 }
							modifier = { factor = 0.25
								event_target:am_mud_2 = { trait = maimed }
								 }
							modifier = { factor = 0.75
								event_target:am_mud_2 = { trait = infirm }
								 }
								event_target:am_mud_2 = { long_character_event = { id = slizardmen.56004 } }
							 } #closes50
						}
				 }
	}
}

#Other Amazon has been defeated - Notify winner
long_character_event = {
	id = slizardmen.56004
	desc = EVTDESCslizardmen56004
	picture = GFX_evt_amazon_feast

	trigger = { trait = creature_amazon }

	is_triggered_only = yes

	option = {
		name = EVTOPTAslizardmen56004
		prestige = 150
		decadence = -2
		hidden_tooltip = { random = { chance = 1
					add_trait = brave } }
		event_target:am_mud_1 = { clr_character_flag = feast_contest }
		event_target:am_mud_2 = { clr_character_flag = feast_contest }
			#Notify Loser
			if = { limit = { event_target:am_mud_1 = { character = ROOT } }
					event_target:am_mud_2 = { long_character_event = { id = slizardmen.56005 } } }
			 if = { limit = { event_target:am_mud_2 = { character = ROOT } }
					event_target:am_mud_1 = { long_character_event = { id = slizardmen.56005 } } }
		ai_chance = { factor = 1 }
	}
}

#Notify Loser
long_character_event = {
	id = slizardmen.56005
	desc = EVTDESCslizardmen56005
	picture = GFX_evt_amazon_feast

	trigger = { trait = creature_amazon }

	immediate = { random = { chance = 50
				add_trait = wounded } }

	is_triggered_only = yes

	option = {
		name = EVTOPTAslizardmen56005
		prestige = -50
		decadence = 2
		event_target:am_mud_1 = { clr_character_flag = feast_contest }
		event_target:am_mud_2 = { clr_character_flag = feast_contest }
		ai_chance = { factor = 1 }
	}
}

# Lesbian love
character_event = {
	id = slizardmen.57
	hide_window = yes

	trigger = { trait = creature_amazon
			trait = homosexual
		has_character_flag = holding_amazon_ritual }

	is_triggered_only = yes

	immediate = {
	if = { limit = { any_courtier = {
					trait = homosexual
					NOT = { is_close_relative = ROOT }
					trait = creature_amazon } }
		random_courtier = { limit = {
					trait = homosexual
					NOT = { is_close_relative = ROOT }
					trait = creature_amazon }
				long_character_event = { id = slizardmen.57001 } }
		}
	}
}

#Scope courtier
long_character_event = {
	id = slizardmen.57001
	desc = EVTDESCslizardmen57001
	picture = GFX_evt_amazon_feast

	trigger = { trait = creature_amazon }

	is_triggered_only = yes

	option = {
		name = EVTOPTAslizardmen57001
		trigger = { NOT = { any_lover = { is_female = yes
						count = 3 } } }
		long_character_event = { id = slizardmen.57002 }
		ai_chance = { factor = 50 }
	}
	option = {
		name = EVTOPTBslizardmen57001
		ai_chance = { factor = 0 }
	}
}

#A drunken Amazon kisses you
long_character_event = {
	id = slizardmen.57002
	desc = EVTDESCslizardmen57002
	picture = GFX_evt_amazon_feast

	trigger = { trait = creature_amazon }

	is_triggered_only = yes

	option = {
		name = EVTOPTAslizardmen57002
		trigger = { NOT = { any_lover = { is_female = yes
						count = 3 } } }
		add_lover = FROM
		FROM = { character_event = { id = slizardmen.57003 } }
		ai_chance = { factor = 0 }
	}
	option = {
		name = EVTOPTBslizardmen57002
		FROM = { character_event = { id = slizardmen.57004 } }
		ai_chance = { factor = 50 }
	}
}

#New Lover
character_event = {
	id = slizardmen.57003
	desc = EVTDESCslizardmen57003
	picture = GFX_evt_amazon_feast

	trigger = { trait = creature_amazon }

	is_triggered_only = yes

	option = {
		name = EVTOPTAslizardmen57003
		ai_chance = { factor = 1 }
	}
}

#Just one night
character_event = {
	id = slizardmen.57004
	desc = EVTDESCslizardmen57004
	picture = GFX_evt_amazon_feast

	trigger = { trait = creature_amazon }

	is_triggered_only = yes

	option = {
		name = EVTOPTAslizardmen57004
		ai_chance = { factor = 1 }
	}
}

####################################################

#The Amazons capture a good specimen
# ROOT is attacker, FROM is province sieged
character_event = {
	id = slizardmen.60
	desc = EVTDESCslizardmen60
	picture = GFX_evt_amazon

	is_triggered_only = yes

	#only_rulers = yes

	trigger = {
		religion = amazon
		is_female = yes
		NOT = { location = { has_province_modifier = province_slave_raid } }
		NOT = { location = { has_province_modifier = province_scourged } }
		NOT = { location = { has_province_modifier = province_slave_raid_chaos_dwarf } }
		FROM = { is_capital = yes
			NOT = { culture = nehekharan }
			owner = {
			any_courtier = { is_ruler = no
						is_female = no
						age = 14
				OR = { trait = creature_human
					trait = creature_amazon
					trait = creature_halfling }
				NOR = { trait = creature_nehekharan
				trait = vampire_necrarch_visible
				trait = vampire_lahmian_visible
				trait = vampire_carstein_visible
				trait = vampire_jade_visible
				trait = vampire_blood_visible
				trait = vampire_mahtmasi_visible
				trait = vampire_strigoi_visible } } } } #only against the living
	}

	option = { #I'll take this.
		name = EVTOPTCslizardmen60
		FROM = { owner = {
			random_courtier =  { limit = { is_ruler = no
						is_female = no
						age = 14
				OR = { trait = creature_human
					trait = creature_amazon
					trait = creature_halfling }
				NOR = { trait = creature_nehekharan
				trait = vampire_necrarch_visible
				trait = vampire_lahmian_visible
				trait = vampire_carstein_visible
				trait = vampire_jade_visible
				trait = vampire_blood_visible
				trait = vampire_mahtmasi_visible
				trait = vampire_strigoi_visible } }
					move_character = ROOT
					add_trait = in_stock }
				}
			 }
		prestige = 25
		decadence = 1
		ai_chance = {
			factor = 50
			modifier = {
				factor = 1.5
				ROOT = { NOR = { trait = possessed
						trait = lunatic_3
						trait = lunatic_2 } }
				}
			modifier = {
				factor = 0.7
				trait = zealous
				}
			}
	}
	option = { #Just keep him in store for sacrifice
		name = EVTOPTBslizardmen60
		change_variable = { which = "sacrifical_victims" value = 1 }
		piety = 25
		decadence = -1
		if = { limit = { trait = cruel }
			random = { chance = 1
				remove_trait = cruel }
			}
		ai_chance = {
			factor = 50
			modifier = {
				factor = 1.2
				ROOT = { NOR = { trait = possessed
						trait = lunatic_3
						trait = lunatic_2 } }
				}
			modifier = {
				factor = 1.2
				trait = kind
				}
			}
	}
}

######################################################
######################################################

##Amazon Brawling Events#############

#Notify Host the event will soon be prepared
character_event = {
	id = slizardmen.61
	desc = EVTDESCslizardmen61
	picture = GFX_evt_amazon

	trigger = { trait = creature_amazon }

	is_triggered_only = yes

	option = {
		name = EVTOPTAslizardmen61
		hidden_tooltip = { long_character_event = { id = slizardmen.62 days = 10 random = 10 } }
		ai_chance = { factor = 1 }
	}
}

#General cleanup event to remove flags and other stuff after the tournament has been completed
character_event = {
	id = slizardmen.61900
	desc = EVTDESCslizardmen61900
	picture = GFX_evt_amazon

	is_triggered_only = yes

	option = {
		name = EVTOPTAslizardmen61900
		remove_trait = questing
		hidden_tooltip = {
		set_variable = { which = "brawl_player" value = 0 }
		diplomatic_immunity = no
		clr_character_flag = do_not_disturb
		clr_character_flag = brawling_participant
		clr_character_flag = brawling_host
		clr_character_flag = brawling_loser
		clr_character_flag = am_fight_1
		clr_character_flag = am_fight_2
		clr_character_flag = am_fight_3
		clr_character_flag = am_fight_4
		clr_character_flag = am_fight_5
		clr_character_flag = am_fight_6
		clr_character_flag = am_fight_7
		clr_character_flag = am_fight_8
		clr_character_flag = am_fight_9
		clr_character_flag = am_fight_10
		clr_character_flag = am_fight_11
		}
	}
}

#Invitation to Brawling contest
letter_event = {
	id = slizardmen.61001
	desc = EVTDESCslizardmen61001

	trigger = { trait = creature_amazon }

	is_triggered_only = yes

	option = {
		name = EVTOPTAslizardmen61001
		decadence = -1
		set_character_flag = brawling_participant
		hidden_tooltip = { FROM = { letter_event = { id = slizardmen.61002 days = 1 random = 1 } } }
		ai_chance = { factor = 70 }
	}
	option = {
		name = EVTOPTBslizardmen61001
		decadence = 1
		hidden_tooltip = { FROM = { letter_event = { id = slizardmen.61003 days = 1 random = 1 } } }
		ai_chance = { factor = 30
				modifier = { factor = 0.5
					trait = ambitious }
				modifier = { factor = 0.5
					trait = brave }
				modifier = { factor = 0.75
					trait = wroth }
				modifier = { factor = 0.75
					trait = proud }
				modifier = { factor = 2
					trait = wounded }
				modifier = { factor = 2.5
					trait = maimed }
				modifier = { factor = 2.5
					trait = blinded }
				modifier = { factor = 2
					trait = craven }
				modifier = { factor = 0.25
					NOT = { FROM = { check_variable = { which = "brawl_player" value = 3 } } }
					 }
				 }
	}
}

#Notify Host guest will participate
letter_event = {
	id = slizardmen.61002
	desc = EVTDESCslizardmen61002

	is_triggered_only = yes

	option = {
		name = EVTOPTAslizardmen61002
		hidden_tooltip = { change_variable = { which = "brawl_player" value = 1 } }
		ai_chance = { factor = 1 }
	}
}

#Notify Host guest will not participate
letter_event = {
	id = slizardmen.61003
	desc = EVTDESCslizardmen61003

	is_triggered_only = yes

	option = {
		name = EVTOPTAslizardmen61003
		ai_chance = { factor = 1 }
	}
}

#The Tournament is about to start
long_character_event = {
	id = slizardmen.62
	desc = { text = EVTDESCAslizardmen62
		trigger = { check_variable = { which = "brawl_player" value = 3 } } #Make sure there's a bare minimum of challengers to start
		 }
	desc = { text = EVTDESCBslizardmen62
		trigger = { NOT = { check_variable = { which = "brawl_player" value = 3 } } } #Make sure there's a bare minimum of challengers to start
		 }
	picture = GFX_evt_amazon_fighter

	trigger = { trait = creature_amazon }

	is_triggered_only = yes

	option = {
		name = EVTOPTAslizardmen62
		trigger = { check_variable = { which = "brawl_player" value = 3 } }
		add_trait = questing
		hidden_tooltip = {
				set_variable = { which = "brawl_player" value = 0 }
				any_realm_character = { limit = { NOT = { has_character_flag = brawling_host }
								has_character_flag = brawling_participant }
						long_character_event = { id = slizardmen.62001 } }
		character_event = { id = slizardmen.62002 }
			 }
		ai_chance = { factor = 1 }
	}
	option = {
		name = EVTOPTBslizardmen62
		trigger = { NOT = { check_variable = { which = "brawl_player" value = 3 } } }
		prestige = -250
		hidden_tooltip = { character_event = { id = slizardmen.61900 } }
		hidden_tooltip = {
				set_variable = { which = "brawl_player" value = 0 }
				any_realm_character = { limit = { NOT = { has_character_flag = brawling_host }
								has_character_flag = brawling_participant }
						character_event = { id = slizardmen.62005 days = 7 random = 10 } }
			 }
		ai_chance = { factor = 1 }
	}
}

#The Tournament is about to start - Notify other Amazons
long_character_event = {
	id = slizardmen.62001
	desc = EVTDESCslizardmen62001
	picture = GFX_evt_amazon_fighter

	trigger = { trait = creature_amazon }

	is_triggered_only = yes

	option = {
		name = EVTOPTAslizardmen62001
		add_trait = questing
		ai_chance = { factor = 1 }
	}
}

#Brawl host starts with first fight
character_event = {
	id = slizardmen.62002
	desc = EVTDESCslizardmen62002
	picture = GFX_evt_amazon_fighter

	trigger = { trait = creature_amazon }

	is_triggered_only = yes

	option = {
		name = EVTOPTAslizardmen62002
		hidden_tooltip = { random_realm_character = { limit = { NOT = { character = ROOT }
								has_character_flag = brawling_participant }
						character_event = { id = slizardmen.62003 } }
				 }
		ai_chance = { factor = 1 }
	}
}

#Second Amazon notified
character_event = {
	id = slizardmen.62003
	desc = EVTDESCslizardmen62003
	picture = GFX_evt_amazon_fighter

	trigger = { trait = creature_amazon }

	is_triggered_only = yes

	option = {
		name = EVTOPTAslizardmen62003
		hidden_tooltip = { FROM = { character_event = { id = slizardmen.62004 } } }
		ai_chance = { factor = 1 }
	}
}

#First Amazon notified of who is the second Amazon
character_event = {
	id = slizardmen.62004
	desc = EVTDESCslizardmen62004
	picture = GFX_evt_amazon_fighter

	trigger = { trait = creature_amazon }

	is_triggered_only = yes

	option = {
		name = EVTOPTAslizardmen62004
		hidden_tooltip = { FROM = { character_event = { id = slizardmen.63 } } }
		ai_chance = { factor = 1 }
	}
}

#Not enough challengers, the tournament is cancelled
character_event = {
	id = slizardmen.62005
	desc = EVTDESCslizardmen62005
	picture = GFX_evt_amazon_fighter

	trigger = { trait = creature_amazon }

	is_triggered_only = yes

	option = {
		name = EVTOPTAslizardmen62005
		decadence = 5
		hidden_tooltip = { character_event = { id = slizardmen.61900 } }
		ai_chance = { factor = 1 }
	}
}

#Hidden fighting event to determine winner
character_event = {
	id = slizardmen.63
	hide_window = yes

	trigger = { trait = creature_amazon }

	is_triggered_only = yes

	immediate = {
		save_event_target_as = am_brawler_2
		FROM = { save_event_target_as = am_brawler_1 }

		hidden_tooltip = {
				#To give random flavour text to the fights
				random_list = { 	15 = { set_character_flag = am_fight_1
								FROM = { set_character_flag = am_fight_1 } }
							15 = { set_character_flag = am_fight_2
								FROM = { set_character_flag = am_fight_2 } }
							15 = { set_character_flag = am_fight_3
								FROM = { set_character_flag = am_fight_3 } }
							15 = { set_character_flag = am_fight_4
								FROM = { set_character_flag = am_fight_4 } }
							15 = { set_character_flag = am_fight_5
								FROM = { set_character_flag = am_fight_5 } }
							15 = { set_character_flag = am_fight_6
								FROM = { set_character_flag = am_fight_6 } }
							10 = { set_character_flag = am_fight_7
								FROM = { set_character_flag = am_fight_7 } }
							10 = { set_character_flag = am_fight_8
								FROM = { set_character_flag = am_fight_8 } }
							10 = { set_character_flag = am_fight_9
								FROM = { set_character_flag = am_fight_9 } }
							10 = { set_character_flag = am_fight_10
								FROM = { set_character_flag = am_fight_10 } }
							10 = { set_character_flag = am_fight_11
								FROM = { set_character_flag = am_fight_11 } }
							 }
			random_list = { 50 = { #First contestant wins
							modifier = { factor = 0.65
								event_target:am_brawler_1 = { trait = fragile }
								 }
							modifier = { factor = 0.75
								event_target:am_brawler_1 = { trait = weak }
								 }
							modifier = { factor = 0.85
								event_target:am_brawler_1 = { trait = soft }
								 }
							modifier = { factor = 1.25
								event_target:am_brawler_1 = { trait = hardy }
								 }
							modifier = { factor = 1.5
								event_target:am_brawler_1 = { trait = tough }
								 }
							modifier = { factor = 1.75
								event_target:am_brawler_1 = { trait = strong }
								 }
							modifier = { factor = 0.5
								event_target:am_brawler_1 = { trait = craven }
								 }
							modifier = { factor = 1.15
								event_target:am_brawler_1 = { trait = diligent }
								 }
							modifier = { factor = 0.85
								event_target:am_brawler_1 = { trait = drunkard }
								 }
							modifier = { factor = 0.85
								event_target:am_brawler_1 = { trait = addict }
								 }
							modifier = { factor = 1.75
								event_target:am_brawler_1 = { trait = brave }
								 }
							modifier = { factor = 0.85
								event_target:am_brawler_1 = { trait = fat }
								 }
							modifier = { factor = 0.85
								event_target:am_brawler_1 = { trait = undernourished }
								 }
							modifier = { factor = 1.5
								event_target:am_brawler_1 = { trait = ambitious }
								 }
							modifier = { factor = 0.85
								event_target:am_brawler_1 = { trait = content }
								 }
							modifier = { factor = 1.85
								event_target:am_brawler_1 = { trait = duelist }
								 }
							modifier = { factor = 1.5
								event_target:am_brawler_1 = { trait = hunter }
								 }
							modifier = { factor = 0.5
								event_target:am_brawler_1 = { trait = wounded }
								 }
							modifier = { factor = 0.25
								event_target:am_brawler_1 = { trait = maimed }
								 }
							modifier = { factor = 0.75
								event_target:am_brawler_1 = { trait = infirm }
								 }
							modifier = { factor = 0.25
								event_target:am_brawler_1 = { trait = blinded }
								 }
							modifier = { factor = 1.25
								event_target:am_brawler_1 = { trait = tall }
								 }
							modifier = { factor = 0.5
								event_target:am_brawler_1 = { trait = dwarf }
								 }
							modifier = { factor = 0.5
								event_target:am_brawler_1 = { trait = hunchback }
								 }
							modifier = { factor = 0.75
								event_target:am_brawler_1 = { trait = clubfooted }
								 }
							modifier = { factor = 0.9
								event_target:am_brawler_1 = { NOT = { age = 18 } }
								 }
							modifier = { factor = 1.25
								event_target:am_brawler_1 = { martial = 15 }
								 }
							modifier = { factor = 0.85
								event_target:am_brawler_1 = { trait = stressed }
								 }
							modifier = { factor = 0.75
								event_target:am_brawler_1 = { trait = depressed }
								 }
							modifier = { factor = 0.95
								event_target:am_brawler_1 = { trait = dim }
								 }
							modifier = { factor = 0.9
								event_target:am_brawler_1 = { trait = dumb }
								 }
							modifier = { factor = 0.85
								event_target:am_brawler_1 = { trait = slow }
								 }
							modifier = { factor = 0.8
								event_target:am_brawler_1 = { trait = idiot }
								 }
							modifier = { factor = 0.75
								event_target:am_brawler_1 = { trait = imbecile }
								 }
							modifier = { factor = 1.15
								event_target:am_brawler_1 = { trait = bright }
								 }
							modifier = { factor = 1.2
								event_target:am_brawler_1 = { trait = smart }
								 }
							modifier = { factor = 1.25
								event_target:am_brawler_1 = { trait = quick }
								 }
							modifier = { factor = 1.3
								event_target:am_brawler_1 = { trait = brilliant }
								 }
							modifier = { factor = 1.35
								event_target:am_brawler_1 = { trait = genius }
								 }
							modifier = { factor = 0.85
								event_target:am_brawler_1 = { trait = slothful }
								 }
							modifier = { factor = 0.9
								event_target:am_brawler_1 = { trait = kind }
								 }
							modifier = { factor = 0.9
								event_target:am_brawler_1 = { trait = humble }
								 }
							modifier = { factor = 0.9
								event_target:am_brawler_1 = { trait = shy }
								 }
							modifier = { factor = 1.1
								event_target:am_brawler_1 = { trait = misguided_warrior }
								 }
							modifier = { factor = 1.35
								event_target:am_brawler_1 = { trait = tough_soldier }
								 }
							modifier = { factor = 1.5
								event_target:am_brawler_1 = { trait = skilled_tactician }
								 }
							modifier = { factor = 1.75
								event_target:am_brawler_1 = { trait = brilliant_strategist }
								 }
							modifier = { factor = 1.35
								event_target:am_brawler_1 = { trait = zealous }
								 }
							modifier = { factor = 1.15
								event_target:am_brawler_1 = { trait = cruel }
								 }
							modifier = { factor = 0.95
								event_target:am_brawler_1 = { trait = just }
								 }
							modifier = { factor = 0.85
								event_target:am_brawler_1 = { trait = complacent }
								 }
							modifier = { factor = 0.9
								event_target:am_brawler_1 = { any_child = { count = 3 } }
								 }
							modifier = { factor = 0.9
								event_target:am_brawler_1 = { any_child = { count = 5 } }
								 }
							modifier = { factor = 1.15
								event_target:am_brawler_1 = { trait = deceitful }
								 }
							modifier = { factor = 0.95
								event_target:am_brawler_1 = { trait = honest }
								 }
							modifier = { factor = 1.15
								event_target:am_brawler_1 = { trait = paranoid }
								 }
							modifier = { factor = 0.95
								event_target:am_brawler_1 = { trait = trusting }
								 }
							modifier = { factor = 0.85
								event_target:am_brawler_1 = { trait = ill }
								 }
							modifier = { factor = 0.5
								event_target:am_brawler_1 = { trait = has_nurgles_rot }
								 }
							modifier = { factor = 1.25
								event_target:am_brawler_1 = { trait = aggressive_leader }
								 }
							modifier = { factor = 1.15
								event_target:am_brawler_1 = { trait = experimenter }
								 }
							modifier = { factor = 1.35
								event_target:am_brawler_1 = { trait = trickster }
								 }
							modifier = { factor = 1.15
								event_target:am_brawler_1 = { trait = lunatic_1 }
								 }
							modifier = { factor = 0.95
								event_target:am_brawler_1 = { trait = lunatic_2 }
								 }
							modifier = { factor = 0.85
								event_target:am_brawler_1 = { trait = lunatic_3 }
								 }
							modifier = { factor = 0.75
								event_target:am_brawler_1 = { trait = disfigured }
								 }
							modifier = { factor = 1.65
								event_target:am_brawler_1 = { age = 150
												has_artifact = elixir_of_eternal_youth }
								 }
							modifier = { factor = 0.5
								event_target:am_brawler_1 = { age = 40
												NOT = { has_artifact = elixir_of_eternal_youth } }
								 }
							modifier = { factor = 0.95
								event_target:am_brawler_1 = { trait = wroth }
								 }
							modifier = { factor = 1.15
								event_target:am_brawler_1 = { trait = patient }
								 }
							modifier = { factor = 1.15
								event_target:am_brawler_1 = { trait = strategist }
								 }
							modifier = { factor = 1.15
								event_target:am_brawler_1 = { OR = { trait = amateurish_plotter
													trait = flamboyant_schemer
													trait = intricate_webweaver
													trait = elusive_shadow } }
								 }
							modifier = { factor = 0.8
								event_target:am_brawler_1 = { OR = { trait = naive_appeaser
													trait = underhanded_rogue
													trait = charismatic_negotiator
													trait = grey_eminence } }
								 }
							modifier = { factor = 0.9
								event_target:am_brawler_1 = { OR = { trait = indulgent_wastrel
													trait = thrifty_clerk
													trait = fortune_builder
													trait = midas_touched } }
								 }
								event_target:am_brawler_1 = { long_character_event = { id = slizardmen.63001 } }
							 } #closes50
						50 = { #Second contestant wins

							modifier = { factor = 0.65
								event_target:am_brawler_2 = { trait = fragile }
								 }
							modifier = { factor = 0.75
								event_target:am_brawler_2 = { trait = weak }
								 }
							modifier = { factor = 0.85
								event_target:am_brawler_2 = { trait = soft }
								 }
							modifier = { factor = 1.25
								event_target:am_brawler_2 = { trait = hardy }
								 }
							modifier = { factor = 1.5
								event_target:am_brawler_2 = { trait = tough }
								 }
							modifier = { factor = 1.75
								event_target:am_brawler_2 = { trait = strong }
								 }
							modifier = { factor = 0.5
								event_target:am_brawler_2 = { trait = craven }
								 }
							modifier = { factor = 1.15
								event_target:am_brawler_2 = { trait = diligent }
								 }
							modifier = { factor = 0.85
								event_target:am_brawler_2 = { trait = drunkard }
								 }
							modifier = { factor = 0.85
								event_target:am_brawler_2 = { trait = addict }
								 }
							modifier = { factor = 1.75
								event_target:am_brawler_2 = { trait = brave }
								 }
							modifier = { factor = 0.85
								event_target:am_brawler_2 = { trait = fat }
								 }
							modifier = { factor = 0.85
								event_target:am_brawler_2 = { trait = undernourished }
								 }
							modifier = { factor = 1.5
								event_target:am_brawler_2 = { trait = ambitious }
								 }
							modifier = { factor = 0.85
								event_target:am_brawler_2 = { trait = content }
								 }
							modifier = { factor = 1.85
								event_target:am_brawler_2 = { trait = duelist }
								 }
							modifier = { factor = 1.5
								event_target:am_brawler_2 = { trait = hunter }
								 }
							modifier = { factor = 0.5
								event_target:am_brawler_2 = { trait = wounded }
								 }
							modifier = { factor = 0.25
								event_target:am_brawler_2 = { trait = maimed }
								 }
							modifier = { factor = 0.75
								event_target:am_brawler_2 = { trait = infirm }
								 }
							modifier = { factor = 0.25
								event_target:am_brawler_2 = { trait = blinded }
								 }
							modifier = { factor = 1.25
								event_target:am_brawler_2 = { trait = tall }
								 }
							modifier = { factor = 0.5
								event_target:am_brawler_2 = { trait = dwarf }
								 }
							modifier = { factor = 0.5
								event_target:am_brawler_2 = { trait = hunchback }
								 }
							modifier = { factor = 0.75
								event_target:am_brawler_2 = { trait = clubfooted }
								 }
							modifier = { factor = 0.9
								event_target:am_brawler_2 = { NOT = { age = 18 } }
								 }
							modifier = { factor = 1.25
								event_target:am_brawler_2 = { martial = 15 }
								 }
							modifier = { factor = 0.85
								event_target:am_brawler_2 = { trait = stressed }
								 }
							modifier = { factor = 0.75
								event_target:am_brawler_2 = { trait = depressed }
								 }
							modifier = { factor = 0.95
								event_target:am_brawler_2 = { trait = dim }
								 }
							modifier = { factor = 0.9
								event_target:am_brawler_2 = { trait = dumb }
								 }
							modifier = { factor = 0.85
								event_target:am_brawler_2 = { trait = slow }
								 }
							modifier = { factor = 0.8
								event_target:am_brawler_2 = { trait = idiot }
								 }
							modifier = { factor = 0.75
								event_target:am_brawler_2 = { trait = imbecile }
								 }
							modifier = { factor = 1.15
								event_target:am_brawler_2 = { trait = bright }
								 }
							modifier = { factor = 1.2
								event_target:am_brawler_2 = { trait = smart }
								 }
							modifier = { factor = 1.25
								event_target:am_brawler_2 = { trait = quick }
								 }
							modifier = { factor = 1.3
								event_target:am_brawler_2 = { trait = brilliant }
								 }
							modifier = { factor = 1.35
								event_target:am_brawler_2 = { trait = genius }
								 }
							modifier = { factor = 0.85
								event_target:am_brawler_2 = { trait = slothful }
								 }
							modifier = { factor = 0.9
								event_target:am_brawler_2 = { trait = kind }
								 }
							modifier = { factor = 0.9
								event_target:am_brawler_2 = { trait = humble }
								 }
							modifier = { factor = 0.9
								event_target:am_brawler_2 = { trait = shy }
								 }
							modifier = { factor = 1.1
								event_target:am_brawler_2 = { trait = misguided_warrior }
								 }
							modifier = { factor = 1.35
								event_target:am_brawler_2 = { trait = tough_soldier }
								 }
							modifier = { factor = 1.5
								event_target:am_brawler_2 = { trait = skilled_tactician }
								 }
							modifier = { factor = 1.75
								event_target:am_brawler_2 = { trait = brilliant_strategist }
								 }
							modifier = { factor = 1.35
								event_target:am_brawler_2 = { trait = zealous }
								 }
							modifier = { factor = 1.15
								event_target:am_brawler_2 = { trait = cruel }
								 }
							modifier = { factor = 0.95
								event_target:am_brawler_2 = { trait = just }
								 }
							modifier = { factor = 0.85
								event_target:am_brawler_2 = { trait = complacent }
								 }
							modifier = { factor = 0.9
								event_target:am_brawler_2 = { any_child = { count = 3 } }
								 }
							modifier = { factor = 0.9
								event_target:am_brawler_2 = { any_child = { count = 5 } }
								 }
							modifier = { factor = 1.15
								event_target:am_brawler_2 = { trait = deceitful }
								 }
							modifier = { factor = 0.95
								event_target:am_brawler_2 = { trait = honest }
								 }
							modifier = { factor = 1.15
								event_target:am_brawler_2 = { trait = paranoid }
								 }
							modifier = { factor = 0.95
								event_target:am_brawler_2 = { trait = trusting }
								 }
							modifier = { factor = 0.85
								event_target:am_brawler_2 = { trait = ill }
								 }
							modifier = { factor = 0.5
								event_target:am_brawler_2 = { trait = has_nurgles_rot }
								 }
							modifier = { factor = 1.25
								event_target:am_brawler_2 = { trait = aggressive_leader }
								 }
							modifier = { factor = 1.15
								event_target:am_brawler_2 = { trait = experimenter }
								 }
							modifier = { factor = 1.35
								event_target:am_brawler_2 = { trait = trickster }
								 }
							modifier = { factor = 1.15
								event_target:am_brawler_2 = { trait = lunatic_1 }
								 }
							modifier = { factor = 0.95
								event_target:am_brawler_2 = { trait = lunatic_2 }
								 }
							modifier = { factor = 0.85
								event_target:am_brawler_2 = { trait = lunatic_3 }
								 }
							modifier = { factor = 0.75
								event_target:am_brawler_2 = { trait = disfigured }
								 }
							modifier = { factor = 1.65
								event_target:am_brawler_2 = { age = 150
												has_artifact = elixir_of_eternal_youth }
								 }
							modifier = { factor = 0.5
								event_target:am_brawler_2 = { age = 40
												NOT = { has_artifact = elixir_of_eternal_youth } }
								 }
							modifier = { factor = 0.95
								event_target:am_brawler_2 = { trait = wroth }
								 }
							modifier = { factor = 1.15
								event_target:am_brawler_2 = { trait = patient }
								 }
							modifier = { factor = 1.15
								event_target:am_brawler_2 = { trait = strategist }
								 }
							modifier = { factor = 1.15
								event_target:am_brawler_2 = { OR = { trait = amateurish_plotter
													trait = flamboyant_schemer
													trait = intricate_webweaver
													trait = elusive_shadow } }
								 }
							modifier = { factor = 0.8
								event_target:am_brawler_2 = { OR = { trait = naive_appeaser
													trait = underhanded_rogue
													trait = charismatic_negotiator
													trait = grey_eminence } }
								 }
							modifier = { factor = 0.9
								event_target:am_brawler_2 = { OR = { trait = indulgent_wastrel
													trait = thrifty_clerk
													trait = fortune_builder
													trait = midas_touched } }
								 }
								event_target:am_brawler_2 = { long_character_event = { id = slizardmen.63001 } }
							 } #closes50
						}
				 }
	}
}

#Winning Brawler event
long_character_event = {
	id = slizardmen.63001
	desc = { text = EVTDESCAslizardmen63001
		trigger = { event_target:am_brawler_1 = { character = ROOT
							has_character_flag = am_fight_1 } } #Opponent is FROM
		 }
	desc = { text = EVTDESCBslizardmen63001
		trigger = { event_target:am_brawler_1 = { character = ROOT
							has_character_flag = am_fight_2 } } #Opponent is FROM
		 }
	desc = { text = EVTDESCCslizardmen63001
		trigger = { event_target:am_brawler_1 = { character = ROOT
							has_character_flag = am_fight_3 } } #Opponent is FROM
		 }
	desc = { text = EVTDESCDslizardmen63001
		trigger = { event_target:am_brawler_2 = { character = ROOT
							has_character_flag = am_fight_1 } } #Opponent is FROMFROM
		 }
	desc = { text = EVTDESCEslizardmen63001
		trigger = { event_target:am_brawler_2 = { character = ROOT
							has_character_flag = am_fight_2 } } #Opponent is FROMFROM
		 }
	desc = { text = EVTDESCFslizardmen63001
		trigger = { event_target:am_brawler_2 = { character = ROOT
							has_character_flag = am_fight_3 } } #Opponent is FROMFROM
		 }


	desc = { text = EVTDESCGslizardmen63001
		trigger = { event_target:am_brawler_1 = { character = ROOT
							has_character_flag = am_fight_4 } } #Opponent is FROM
		 }
	desc = { text = EVTDESCHslizardmen63001
		trigger = { event_target:am_brawler_1 = { character = ROOT
							has_character_flag = am_fight_5 } } #Opponent is FROM
		 }
	desc = { text = EVTDESCIslizardmen63001
		trigger = { event_target:am_brawler_1 = { character = ROOT
							has_character_flag = am_fight_6 } } #Opponent is FROM
		 }
	desc = { text = EVTDESCLslizardmen63001
		trigger = { event_target:am_brawler_1 = { character = ROOT
							has_character_flag = am_fight_7 } } #Opponent is FROM
		 }
	desc = { text = EVTDESCMslizardmen63001
		trigger = { event_target:am_brawler_2 = { character = ROOT
							has_character_flag = am_fight_4 } } #Opponent is FROMFROM
		 }
	desc = { text = EVTDESCNslizardmen63001
		trigger = { event_target:am_brawler_2 = { character = ROOT
							has_character_flag = am_fight_5 } } #Opponent is FROMFROM
		 }
	desc = { text = EVTDESCOslizardmen63001
		trigger = { event_target:am_brawler_2 = { character = ROOT
							has_character_flag = am_fight_6 } } #Opponent is FROMFROM
		 }
	desc = { text = EVTDESCPslizardmen63001
		trigger = { event_target:am_brawler_2 = { character = ROOT
							has_character_flag = am_fight_7 } } #Opponent is FROMFROM
		 }



	desc = { text = EVTDESCQslizardmen63001
		trigger = { event_target:am_brawler_1 = { character = ROOT
							has_character_flag = am_fight_8 } } #Opponent is FROM
		 }

	desc = { text = EVTDESCRslizardmen63001
		trigger = { event_target:am_brawler_1 = { character = ROOT
							has_character_flag = am_fight_9 } } #Opponent is FROM
		 }

	desc = { text = EVTDESCSslizardmen63001
		trigger = { event_target:am_brawler_1 = { character = ROOT
							has_character_flag = am_fight_10 } } #Opponent is FROM
		 }
	desc = { text = EVTDESCTslizardmen63001
		trigger = { event_target:am_brawler_1 = { character = ROOT
							has_character_flag = am_fight_11 } } #Opponent is FROM
		 }
	desc = { text = EVTDESCUslizardmen63001
		trigger = { event_target:am_brawler_2 = { character = ROOT
							has_character_flag = am_fight_8 } } #Opponent is FROMFROM
		 }
	desc = { text = EVTDESCVslizardmen63001
		trigger = { event_target:am_brawler_2 = { character = ROOT
							has_character_flag = am_fight_9 } } #Opponent is FROMFROM
		 }
	desc = { text = EVTDESCWslizardmen63001
		trigger = { event_target:am_brawler_2 = { character = ROOT
							has_character_flag = am_fight_10 } } #Opponent is FROMFROM
		 }
	desc = { text = EVTDESCXslizardmen63001
		trigger = { event_target:am_brawler_2 = { character = ROOT
							has_character_flag = am_fight_11 } } #Opponent is FROMFROM
		 }
	picture = GFX_evt_amazon_fighter

	trigger = { trait = creature_amazon }

	immediate = { random = { chance = 5
				add_trait = wounded } }
	is_triggered_only = yes

	option = {
		name = EVTOPTAslizardmen63001
		prestige = 25
		hidden_tooltip = {
 				if = { limit = { event_target:am_brawler_1 = { character = ROOT } }
						event_target:am_brawler_2 = { long_character_event = { id = slizardmen.63002 } }
						 }
 				if = { limit = { event_target:am_brawler_2 = { character = ROOT } }
						event_target:am_brawler_1 = { long_character_event = { id = slizardmen.63002 } }
						 }
		 }
		ai_chance = { factor = 1 }
	}
}

#Loser Brawler event
long_character_event = {
	id = slizardmen.63002
	desc = { text = EVTDESCAslizardmen63002
		trigger = { FROM = { has_character_flag = am_fight_1 } }
		 }
	desc = { text = EVTDESCBslizardmen63002
		trigger = { FROM = { has_character_flag = am_fight_2 } }
		 }
	desc = { text = EVTDESCCslizardmen63002
		trigger = { FROM = { has_character_flag = am_fight_3 } }
		 }
	desc = { text = EVTDESCDslizardmen63002
		trigger = { FROM = { has_character_flag = am_fight_4 } }
		 }
	desc = { text = EVTDESCEslizardmen63002
		trigger = { FROM = { has_character_flag = am_fight_5 } }
		 }
	desc = { text = EVTDESCFslizardmen63002
		trigger = { FROM = { has_character_flag = am_fight_6 } }
		 }
	desc = { text = EVTDESCGslizardmen63002
		trigger = { FROM = { has_character_flag = am_fight_7 } }
		 }
	desc = { text = EVTDESCHslizardmen63002
		trigger = { FROM = { has_character_flag = am_fight_8 } }
		 }
	desc = { text = EVTDESCIslizardmen63002
		trigger = { FROM = { has_character_flag = am_fight_9 } }
		 }
	desc = { text = EVTDESCLslizardmen63002
		trigger = { FROM = { has_character_flag = am_fight_10 } }
		 }
	desc = { text = EVTDESCMslizardmen63002
		trigger = { FROM = { has_character_flag = am_fight_11 } }
		 }
	picture = GFX_evt_amazon_fighter

	trigger = { trait = creature_amazon }

	immediate = { random = { chance = 50
				add_trait = wounded }
			random = { chance = 5
				add_trait = maimed } }
	is_triggered_only = yes

	option = {
		name = EVTOPTAslizardmen63002
		decadence = 2
		clr_character_flag = brawling_participant
		set_character_flag = brawling_loser
		hidden_tooltip = {
 				if = { limit = { event_target:am_brawler_2 = { character = ROOT } }
						clear_event_target = am_brawler_2
						FROM =  { clear_event_target = am_brawler_1 }
						 }
 				if = { limit = { event_target:am_brawler_1 = { character = ROOT } }
						clear_event_target = am_brawler_1
						FROM =  { clear_event_target = am_brawler_2 }
						 }
				FROM = { clr_character_flag = am_fight_1
					clr_character_flag = am_fight_2
					clr_character_flag = am_fight_3
					clr_character_flag = am_fight_4
					clr_character_flag = am_fight_5
					clr_character_flag = am_fight_6
					clr_character_flag = am_fight_7
					clr_character_flag = am_fight_8
					clr_character_flag = am_fight_9
					clr_character_flag = am_fight_10
					clr_character_flag = am_fight_11 }
				clr_character_flag = am_fight_1
				clr_character_flag = am_fight_2
				clr_character_flag = am_fight_3
				clr_character_flag = am_fight_4
				clr_character_flag = am_fight_5
				clr_character_flag = am_fight_6
				clr_character_flag = am_fight_7
				clr_character_flag = am_fight_8
				clr_character_flag = am_fight_9
				clr_character_flag = am_fight_10
				clr_character_flag = am_fight_11

				#If only FROM is left, she is the winner, inform her
 				if = { limit = { top_liege = { any_realm_character = { NOT = { has_character_flag = brawling_loser }
											has_character_flag = brawling_participant
											NOT = { character = FROM }
											NOT = { character = ROOT } }
							 	}
						}
					FROM = { character_event = { id = slizardmen.63003 } }
					break = yes
					}
				#If only FROM is left, she is the winner, inform her
					FROM = { long_character_event = { id = slizardmen.64 } }
		 }
		ai_chance = { factor = 1 }
	}
}

#You won, but there are other challengers
character_event = {
	id = slizardmen.63003
	desc = EVTDESCslizardmen63003
	picture = GFX_evt_amazon_fighter

	trigger = { trait = creature_amazon }

	is_triggered_only = yes

	option = {
		name = EVTOPTAslizardmen63003
		decadence = -1
		hidden_tooltip = {
 			 random_realm_character = { limit = { has_character_flag = brawling_participant
								NOT = { character = ROOT }
								NOT = { has_character_flag = brawling_loser } }
						character_event = { id = slizardmen.62003 } #scope to second Amazon
						 }
				}
		ai_chance = { factor = 1 }
	}
}

#You won the tournament
long_character_event = {
	id = slizardmen.64
	desc = { text = EVTDESCAslizardmen64
		trigger = { NOT = { has_character_flag = brawling_host } } #Winner is not the Queen
		 }
	desc = { text = EVTDESCBslizardmen64
		trigger = { has_character_flag = brawling_host } #Winner is the Queen
		 }
	picture = GFX_evt_amazon_fighter

	trigger = { trait = creature_amazon }

	is_triggered_only = yes

	option = {
		name = EVTOPTAslizardmen64
		decadence = -5
		wealth = 45
		prestige = 750
		piety = 250
		hidden_tooltip = {
				random = { chance = 50
					remove_trait = complacent }
 				if = { limit = { any_realm_character = { has_character_flag = brawling_host
									NOT = { character = ROOT } }
						 }
					random_realm_character = { limit = { has_character_flag = brawling_host
										NOT = { character = ROOT } }
								long_character_event = { id = slizardmen.64001 } }
					}
					any_realm_character = { limit = { has_character_flag = brawling_loser
									NOT = { character = ROOT }
									NOT = { has_character_flag = brawling_host } }
								long_character_event = { id = slizardmen.64002 } }

				random_list = { 15 = { character_event = { id = slizardmen.65001 days = 6 random = 6 } } #Became Brave
						6 = { character_event = { id = slizardmen.65002 days = 6 random = 6 } } #Became Stronger
						6 = { character_event = { id = slizardmen.65003 days = 6 random = 6 } } #Became Wroth
						72 = {  } #Nothing
						1 = {  character_event = { id = slizardmen.65004 days = 1 random = 2 } } #Rigg's favour
						 }
				}
		ai_chance = { factor = 1 }
	}
}

#Notify Queen who didn't win about who did win
long_character_event = {
	id = slizardmen.64001
	desc = EVTDESCAslizardmen64001
	picture = GFX_evt_amazon_fighter

	trigger = { trait = creature_amazon }

	is_triggered_only = yes

	option = {
		name = EVTOPTAslizardmen64001
		if = { limit = { NOT = { any_rival = { count = 4 } } }
			random = { chance = 5
				add_rival = FROM } }
		prestige = 150
		piety = 50
		ai_chance = { factor = 1 }
	}
}

#Notify all the losers about who won
long_character_event = {
	id = slizardmen.64002
	desc = { text = EVTDESCAslizardmen64002
		trigger = { FROM = { NOT = { has_character_flag = brawling_host } } } #Winner is not the Queen
		 }
	desc = { text = EVTDESCBslizardmen64002
		trigger = { FROM = { has_character_flag = brawling_host } } #Winner is the Queen
		 }
	picture = GFX_evt_amazon_fighter

	trigger = { trait = creature_amazon }

	is_triggered_only = yes

	option = {
		name = EVTOPTAslizardmen64002
		ai_chance = { factor = 1 }
	}
}

#Became brave during the tournament
character_event = {
	id = slizardmen.65001
	desc = EVTDESCAslizardmen65001
	picture = GFX_evt_amazon_fighter

	trigger = { trait = creature_amazon }

	is_triggered_only = yes

	option = {
		name = EVTOPTAslizardmen65001
		if = { limit = { trait = brave }
			change_martial = 1 }
		if = { limit = { NOT = { trait = brave } }
			add_trait = brave }
		ai_chance = { factor = 1 }
	}
}

#Became stronger during the tournament
character_event = {
	id = slizardmen.65002
	desc = EVTDESCAslizardmen65002
	picture = GFX_evt_amazon_fighter

	trigger = { trait = creature_amazon }

	is_triggered_only = yes

	option = {
		name = EVTOPTAslizardmen65002
		if = { limit = { trait = strong }
			change_martial = 1 }
		if = { limit = { trait = tough }
			remove_trait = tough
			add_trait = strong }
		if = { limit = { trait = hardy }
			remove_trait = hardy
			add_trait = tough }
		if = { limit = { trait = soft }
			remove_trait = soft }
		if = { limit = { trait = fragile }
			remove_trait = fragile
			add_trait = soft }
		if = { limit = { trait = weak }
			remove_trait = weak
			add_trait = fragile }
		if = { limit = { NOT = { trait = fragile }
				NOT = { trait = soft }
				NOT = { trait = weak }
				NOT = { trait = hardy }
				NOT = { trait = tough }
				NOT = { trait = strong } }
			add_trait = hardy }
		ai_chance = { factor = 1 }
	}
}

#Became wroth during the tournament
character_event = {
	id = slizardmen.65003
	desc = EVTDESCAslizardmen65003
	picture = GFX_evt_amazon_fighter

	trigger = { trait = creature_amazon }

	is_triggered_only = yes

	option = {
		name = EVTOPTAslizardmen65003
		if = { limit = { trait = wroth }
			change_martial = 1 }
		if = { limit = { NOT = { trait = wroth } }
			add_trait = wroth }
		ai_chance = { factor = 1 }
	}
}

#Received Rigg's favour for your prowess
character_event = {
	id = slizardmen.65004
	desc = EVTDESCAslizardmen65004
	picture = GFX_evt_amazon_fighter

	trigger = { trait = creature_amazon }

	is_triggered_only = yes

	option = {
		name = EVTOPTAslizardmen65004
		 add_character_modifier = { name = favour_rigg
						duration = 1200 }
		ai_chance = { factor = 1 }
	}
}

########################################################################
########################################################################
################## SEARCHING THE LOST FOUNTAIN OF YOUTH#################

#You wish to embark in a great journey for the recovery of the ancient fountain of youth.
character_event = {
	id = slizardmen.70
	desc = { text = EVTDESCAslizardmen70
		trigger = { trait = creature_skink }
		 }
	desc = { text = EVTDESCBslizardmen70
		trigger = { trait = creature_amazon }
		 }
	desc = { text = EVTDESCCslizardmen70
		trigger = { trait = creature_human }
		 }
	picture = GFX_evt_questing_lustria

	is_triggered_only = yes

	option = {
		name = EVTOPTAslizardmen70
		hidden_tooltip = { add_trait = questing
				random_list = { 50 = { character_event = { id = slizardmen.71 days = 1500 random = 750 } }
						50 = { character_event = { id = slizardmen.72 days = 1500 random = 750 } }
						 }
				 }
		ai_chance = { factor = 1 }
	}
}

#Pygmies attack on the river
character_event = {
	id = slizardmen.71
	desc = { text = EVTDESCAslizardmen71
		trigger = { trait = creature_skink }
		 }
	desc = { text = EVTDESCBslizardmen71
		trigger = { trait = creature_amazon }
		 }
	desc = { text = EVTDESCCslizardmen71
		trigger = { trait = creature_human }
		 }
	picture = GFX_evt_lustria_jungle

	is_triggered_only = yes

	option = { #Amazon tries to speak
		name = EVTOPTBslizardmen71
		tooltip_info = creature_amazon
		trigger = { trait = creature_amazon }
		hidden_tooltip = { character_event = { id = mutation.1005 } } #lunacy
		hidden_tooltip = {
				random_list = { 60 = { character_event = { id = slizardmen.71004 } } #Pygmies let you pass
						40 = { modifier = { factor = 0.75
								trait = deceitful }
							modifier = { factor = 0.75
								trait = gregarious }
							modifier = { factor = 0.75
								trait = naive_appeaser }
							modifier = { factor = 0.5
								trait = underhanded_rogue }
							modifier = { factor = 0.35
								trait = grey_eminence }
							character_event = { id = slizardmen.71005 } } #Forced to fight
						 }
				 }
		ai_chance = { factor = 1 }
	}
	option = {
		name = EVTOPTAslizardmen71
		hidden_tooltip = { character_event = { id = mutation.1005 } } #lunacy
		hidden_tooltip = {

				random_list = { 25 = { character_event = { id = slizardmen.71001 } } #Victory
						25 = { character_event = { id = slizardmen.71002 } } #Victory, but maimed
						50 = { modifier = { factor = 0.75
								trait = brave }
							modifier = { factor = 0.75
								trait = duelist }
							modifier = { factor = 0.75
								trait = tough_soldier }
							modifier = { factor = 0.5
								trait = skilled_tactician }
							modifier = { factor = 0.35
								trait = brilliant_strategist }
							character_event = { id = slizardmen.71003 } } #Defeated and killed
						 }
				 }
		ai_chance = { factor = 1 }
	}
}

#Pygmies killed
character_event = {
	id = slizardmen.71001
	desc = { text = EVTDESCAslizardmen71001
		trigger = { trait = creature_skink }
		 }
	desc = { text = EVTDESCBslizardmen71001
		trigger = { trait = creature_amazon }
		 }
	desc = { text = EVTDESCCslizardmen71001
		trigger = { trait = creature_human }
		 }
	picture = GFX_evt_lustria_jungle

	is_triggered_only = yes

	option = { #Keep going
		name = EVTOPTAslizardmen71001
		hidden_tooltip = {
				random_list = { 10 = { character_event = { id = slizardmen.73 days = 500 random = 750 } } #Lizardmen Ambush in canyon
						10 = { character_event = { id = slizardmen.74 days = 500 random = 750 } } #Reached the Temple
						80 = { character_event = { id = slizardmen.75 days = 500 random = 750 } } #Quest over
						 }
				 }
		ai_chance = { factor = 70 }
	}
	option = { #Abandon Quest
		name = EVTOPTBslizardmen71001
		remove_trait = questing
		ai_chance = { factor = 30 }
	}
}

#Pygmies killed, but wounded
character_event = {
	id = slizardmen.71002
	desc = { text = EVTDESCAslizardmen71002
		trigger = { trait = creature_skink }
		 }
	desc = { text = EVTDESCBslizardmen71002
		trigger = { trait = creature_amazon }
		 }
	desc = { text = EVTDESCCslizardmen71002
		trigger = { trait = creature_human }
		 }
	picture = GFX_evt_lustria_jungle

	is_triggered_only = yes

	option = { #Keep going
		name = EVTOPTAslizardmen71002
		add_trait = wounded
		random = { chance = 5
			add_trait = maimed }
		hidden_tooltip = {
				random_list = { 10 = { character_event = { id = slizardmen.73 days = 500 random = 750 } } #Lizardmen Ambush in canyon
						10 = { character_event = { id = slizardmen.74 days = 500 random = 750 } } #Reached the Temple
						80 = { character_event = { id = slizardmen.75 days = 500 random = 750 } } #Quest over
						 }
				 }
		ai_chance = { factor = 70 }
	}
	option = { #Abandon Quest
		name = EVTOPTBslizardmen71002
		add_trait = wounded
		random = { chance = 5
			add_trait = maimed }
		remove_trait = questing
		ai_chance = { factor = 30 }
	}
}

#Killed by Pygmies
character_event = {
	id = slizardmen.71003
	desc = { text = EVTDESCAslizardmen71003
		trigger = { trait = creature_skink }
		 }
	desc = { text = EVTDESCBslizardmen71003
		trigger = { trait = creature_amazon }
		 }
	desc = { text = EVTDESCCslizardmen71003
		trigger = { trait = creature_human }
		 }
	picture = GFX_evt_lustria_jungle

	is_triggered_only = yes

	option = {
		name = EVTOPTAslizardmen71003
		if = {
 limit = {
 is_invincible_trigger = yes
 }

			antideath_effect = yes
			break = yes
			}
		death = { death_reason = death_battle }
		ai_chance = { factor = 1 }
	}
}

#Amazon - Convinced Pygmies to stand down
character_event = {
	id = slizardmen.71004
	desc = EVTDESCAslizardmen71004

	picture = GFX_evt_lustria_jungle

	is_triggered_only = yes

	option = {
		name = EVTOPTAslizardmen71004
		decadence = 2
		hidden_tooltip = {
				random_list = { 10 = { character_event = { id = slizardmen.73 days = 500 random = 750 } } #Lizardmen Ambush in canyon
						20 = { character_event = { id = slizardmen.74 days = 500 random = 750 } } #Reached the Temple
						70 = { character_event = { id = slizardmen.75 days = 500 random = 750 } } #Quest over
						 }
				 }
		ai_chance = { factor = 1 }
	}
}


#Pygmies attack Amazon anyway
character_event = {
	id = slizardmen.71005
	desc = EVTDESCAslizardmen71005
	picture = GFX_evt_lustria_jungle

	is_triggered_only = yes

	option = {
		name = EVTOPTAslizardmen71005
		decadence = 1
		hidden_tooltip = {

				random_list = { 25 = { character_event = { id = slizardmen.71001 } } #Victory
						25 = { character_event = { id = slizardmen.71002 } } #Victory, but maimed
						50 = { modifier = { factor = 0.75
								trait = brave }
							modifier = { factor = 0.75
								trait = duelist }
							modifier = { factor = 0.75
								trait = tough_soldier }
							modifier = { factor = 0.5
								trait = skilled_tactician }
							modifier = { factor = 0.35
								trait = brilliant_strategist }
							character_event = { id = slizardmen.71003 } } #Defeated and killed
						 }
				 }
		ai_chance = { factor = 1 }
	}
}

#Dinosaurs attack in the jungle
character_event = {
	id = slizardmen.72
	desc = { text = EVTDESCAslizardmen72
		trigger = { trait = creature_skink }
		 }
	desc = { text = EVTDESCBslizardmen72
		trigger = { trait = creature_amazon }
		 }
	desc = { text = EVTDESCCslizardmen72
		trigger = { trait = creature_human }
		 }
	picture = GFX_evt_questing_lustria

	is_triggered_only = yes

	option = {
		name = EVTOPTAslizardmen72
		hidden_tooltip = { character_event = { id = mutation.1005 } } #lunacy
		hidden_tooltip = {

				random_list = { 25 = { character_event = { id = slizardmen.72001 } } #Victory
						25 = { character_event = { id = slizardmen.72002 } } #Victory, but maimed
						50 = { modifier = { factor = 0.75
								trait = brave }
							modifier = { factor = 0.75
								trait = hunter }
							modifier = { factor = 0.75
								trait = tough_soldier }
							modifier = { factor = 0.5
								trait = skilled_tactician }
							modifier = { factor = 0.35
								trait = brilliant_strategist }
							character_event = { id = slizardmen.72003 } } #Defeated and killed
						 }
				 }
		ai_chance = { factor = 1 }
	}
}

#Dinosaurs eluded
character_event = {
	id = slizardmen.72001
	desc = { text = EVTDESCAslizardmen72001
		trigger = { trait = creature_skink }
		 }
	desc = { text = EVTDESCBslizardmen72001
		trigger = { trait = creature_amazon }
		 }
	desc = { text = EVTDESCCslizardmen72001
		trigger = { trait = creature_human }
		 }
	picture = GFX_evt_lustria_dinosaur

	is_triggered_only = yes

	option = { #Keep going
		name = EVTOPTAslizardmen72001
		hidden_tooltip = {
				random_list = { 20 = { character_event = { id = slizardmen.73 days = 500 random = 750 } } #Lizardmen Ambush in canyon
						40 = { character_event = { id = slizardmen.74 days = 500 random = 750 } } #Reached the Temple
						40 = { character_event = { id = slizardmen.75 days = 500 random = 750 } } #Quest over
						 }
				 }
		ai_chance = { factor = 70 }
	}
	option = { #Abandon Quest
		name = EVTOPTBslizardmen72001
		remove_trait = questing
		ai_chance = { factor = 30 }
	}
}

#Dinosaurs eluded, but wounded
character_event = {
	id = slizardmen.72002
	desc = { text = EVTDESCAslizardmen72002
		trigger = { trait = creature_skink }
		 }
	desc = { text = EVTDESCBslizardmen72002
		trigger = { trait = creature_amazon }
		 }
	desc = { text = EVTDESCCslizardmen72002
		trigger = { trait = creature_human }
		 }
	picture = GFX_evt_lustria_dinosaur

	is_triggered_only = yes

	option = { #Keep going
		name = EVTOPTAslizardmen72002
		add_trait = wounded
		random = { chance = 10
			add_trait = maimed }
		hidden_tooltip = {
				random_list = { 25 = { character_event = { id = slizardmen.73 days = 500 random = 750 } } #Lizardmen Ambush in canyon
						25 = { character_event = { id = slizardmen.74 days = 500 random = 750 } } #Reached the Temple
						50 = { character_event = { id = slizardmen.75 days = 500 random = 750 } } #Quest over
						 }
				 }
		ai_chance = { factor = 70 }
	}
	option = { #Abandon Quest
		name = EVTOPTBslizardmen72002
		add_trait = wounded
		random = { chance = 5
			add_trait = maimed }
		remove_trait = questing
		ai_chance = { factor = 30 }
	}
}

#Killed by Stegadon
character_event = {
	id = slizardmen.72003
	desc = { text = EVTDESCAslizardmen72003
		trigger = { trait = creature_skink }
		 }
	desc = { text = EVTDESCBslizardmen72003
		trigger = { trait = creature_amazon }
		 }
	desc = { text = EVTDESCCslizardmen72003
		trigger = { trait = creature_human }
		 }
	picture = GFX_evt_lustria_dinosaur

	is_triggered_only = yes

	option = {
		name = EVTOPTAslizardmen72003
		if = {
 limit = {
 is_invincible_trigger = yes
 }

			antideath_effect = yes
			break = yes
			}
		death = { death_reason = death_battle }
		ai_chance = { factor = 1 }
	}
}

#Lizardmen attack in the canyon
character_event = {
	id = slizardmen.73
	desc = { text = EVTDESCAslizardmen73
		trigger = { trait = creature_skink }
		 }
	desc = { text = EVTDESCBslizardmen73
		trigger = { trait = creature_amazon }
		 }
	desc = { text = EVTDESCCslizardmen73
		trigger = { trait = creature_human }
		 }
	picture = GFX_evt_lizardmen_saurus

	is_triggered_only = yes

	option = { #Skink tries to speak
		name = EVTOPTAslizardmen73
		tooltip_info = creature_skink
		trigger = { trait = creature_skink }
		hidden_tooltip = { character_event = { id = mutation.1005 } } #lunacy
		hidden_tooltip = {
				random_list = { 70 = { character_event = { id = slizardmen.73004 } } #Lizardmen let you pass
						30 = { modifier = { factor = 0.75
								trait = skink_priest }
							modifier = { factor = 0.75
								trait = gregarious }
							modifier = { factor = 0.75
								trait = naive_appeaser }
							modifier = { factor = 0.5
								trait = underhanded_rogue }
							modifier = { factor = 0.35
								trait = grey_eminence }
							character_event = { id = slizardmen.73005 } } #Forced to fight
						 }
				 }
		ai_chance = { factor = 1 }
	}
	option = {
		name = EVTOPTBslizardmen73
		hidden_tooltip = { character_event = { id = mutation.1005 } } #lunacy
		hidden_tooltip = {

				random_list = { 20 = { character_event = { id = slizardmen.73001 } } #Victory
						20 = { character_event = { id = slizardmen.73002 } } #Victory, but maimed
						60 = { modifier = { factor = 0.75
								trait = brave }
							modifier = { factor = 0.75
								trait = duelist }
							modifier = { factor = 0.75
								trait = tough_soldier }
							modifier = { factor = 0.5
								trait = skilled_tactician }
							modifier = { factor = 0.35
								trait = brilliant_strategist }
							character_event = { id = slizardmen.73003 } } #Defeated and killed
						 }
				 }
		ai_chance = { factor = 1 }
	}
}

#Lizardmen killed
character_event = {
	id = slizardmen.73001
	desc = { text = EVTDESCAslizardmen73001
		trigger = { trait = creature_skink }
		 }
	desc = { text = EVTDESCBslizardmen73001
		trigger = { trait = creature_amazon }
		 }
	desc = { text = EVTDESCCslizardmen73001
		trigger = { trait = creature_human }
		 }
	picture = GFX_evt_lizardmen_saurus

	is_triggered_only = yes

	option = { #Keep going
		name = EVTOPTAslizardmen73001
		if = { limit = { trait = creature_skink }
			decadence = 5 }
		hidden_tooltip = {
				random_list = { 5 = { character_event = { id = slizardmen.71 days = 500 random = 750 } } #Lizardmen Ambush in canyon
						1 = { character_event = { id = slizardmen.74 days = 500 random = 750 } } #Reached the Temple
						94 = { character_event = { id = slizardmen.75 days = 500 random = 750 } } #Quest over
						 }
				 }
		ai_chance = { factor = 70 }
	}
	option = { #Abandon Quest
		name = EVTOPTBslizardmen73001
		if = { limit = { trait = creature_skink }
			decadence = 5 }
		remove_trait = questing
		ai_chance = { factor = 30 }
	}
}

#Lizardmen killed, but wounded
character_event = {
	id = slizardmen.73002
	desc = { text = EVTDESCAslizardmen73002
		trigger = { trait = creature_skink }
		 }
	desc = { text = EVTDESCBslizardmen73002
		trigger = { trait = creature_amazon }
		 }
	desc = { text = EVTDESCCslizardmen73002
		trigger = { trait = creature_human }
		 }
	picture = GFX_evt_lizardmen_saurus

	is_triggered_only = yes

	option = { #Keep going
		name = EVTOPTAslizardmen73002
		add_trait = wounded
		if = { limit = { trait = creature_skink }
			decadence = 5 }
		random = { chance = 5
			add_trait = maimed }
		hidden_tooltip = {
				random_list = { 5 = { character_event = { id = slizardmen.71 days = 500 random = 750 } } #Lizardmen Ambush in canyon
						1 = { character_event = { id = slizardmen.74 days = 500 random = 750 } } #Reached the Temple
						94 = { character_event = { id = slizardmen.75 days = 500 random = 750 } } #Quest over
						 }
				 }
		ai_chance = { factor = 70 }
	}
	option = { #Abandon Quest
		name = EVTOPTBslizardmen73002
		if = { limit = { trait = creature_skink }
			decadence = 5 }
		add_trait = wounded
		random = { chance = 5
			add_trait = maimed }
		remove_trait = questing
		ai_chance = { factor = 30 }
	}
}

#Killed by Lizardmen
character_event = {
	id = slizardmen.73003
	desc = { text = EVTDESCAslizardmen73003
		trigger = { trait = creature_skink }
		 }
	desc = { text = EVTDESCBslizardmen73003
		trigger = { trait = creature_amazon }
		 }
	desc = { text = EVTDESCCslizardmen73003
		trigger = { trait = creature_human }
		 }
	picture = GFX_evt_lizardmen_saurus

	is_triggered_only = yes

	option = {
		name = EVTOPTAslizardmen73003
		if = {
 limit = {
 is_invincible_trigger = yes
 }

			antideath_effect = yes
			break = yes
			}
		death = { death_reason = death_battle }
		ai_chance = { factor = 1 }
	}
}

#Skink - Convinced Lizardmen to stand down
character_event = {
	id = slizardmen.73004
	desc = EVTDESCAslizardmen73004

	picture = GFX_evt_lizardmen_saurus

	is_triggered_only = yes

	option = {
		name = EVTOPTAslizardmen73004
		decadence = -5
		hidden_tooltip = {
				random_list = { 5 = { character_event = { id = slizardmen.71 days = 500 random = 750 } } #Lizardmen Ambush in canyon
						10 = { character_event = { id = slizardmen.74 days = 500 random = 750 } } #Reached the Temple
						85 = { character_event = { id = slizardmen.75 days = 500 random = 750 } } #Quest over
						 }
				 }
		ai_chance = { factor = 1 }
	}
}

#Lizardmen attack anyway
character_event = {
	id = slizardmen.73005
	desc = EVTDESCAslizardmen73005
	picture = GFX_evt_lizardmen_saurus

	is_triggered_only = yes

	option = {
		name = EVTOPTAslizardmen73005
		decadence = 1
		hidden_tooltip = {

				random_list = { 25 = { character_event = { id = slizardmen.73001 } } #Victory
						25 = { character_event = { id = slizardmen.73002 } } #Victory, but maimed
						50 = { modifier = { factor = 0.75
								trait = brave }
							modifier = { factor = 0.75
								trait = duelist }
							modifier = { factor = 0.75
								trait = tough_soldier }
							modifier = { factor = 0.5
								trait = skilled_tactician }
							modifier = { factor = 0.35
								trait = brilliant_strategist }
							character_event = { id = slizardmen.73003 } } #Defeated and killed
						 }
				 }
		ai_chance = { factor = 1 }
	}
}

#No sight of the fountain - Keep going?
character_event = {
	id = slizardmen.75
	desc = EVTDESCAslizardmen75
	picture = GFX_evt_questing_lustria

	is_triggered_only = yes

	option = {
		name = EVTOPTAslizardmen75
		trigger = { wealth = 150 }
		hidden_tooltip = { character_event = { id = mutation.1005 } } #lunacy
		wealth = -150
		hidden_tooltip = {
				random_list = { 33 = { character_event = { id = slizardmen.71 days = 500 random = 750 } } #Pygmy
						34 = { character_event = { id = slizardmen.72 days = 500 random = 750 } } #Dinosaurs
						33 = { character_event = { id = slizardmen.73 days = 500 random = 750 } } #Lizardmen
						 }
				 }
		ai_chance = { factor = 30 }
	}
	option = { #Abandon Quest
		name = EVTOPTBslizardmen75
		remove_trait = questing
		ai_chance = { factor = 70 }
	}
}

#YOU'VE REACHED THE TEMPLE
character_event = {
	id = slizardmen.74
	desc = EVTDESCAslizardmen74
	picture = GFX_evt_lustria_jungle

	is_triggered_only = yes

	option = { #Check for traps
		name = EVTOPTAslizardmen74
		tooltip_info = hunter
		 trigger = { trait = hunter }
		hidden_tooltip = { character_event = { id = slizardmen.74004 } } #Avoided traps
		ai_chance = { factor = 90 }
	}
	option = { #Enter
		name = EVTOPTBslizardmen74
		hidden_tooltip = {
				random_list = { 33 = { character_event = { id = slizardmen.74001 } } #Saved
						34 = { character_event = { id = slizardmen.74002 } } #Wounded
						33 = { character_event = { id = slizardmen.74003 } } #Killed by trap
						 }
				 }
		ai_chance = { factor = 10 }
	}
}

character_event = {
	id = slizardmen.74001
	desc = EVTDESCAslizardmen74001
	picture = GFX_evt_lustria_jungle

	is_triggered_only = yes

	option = { #Proceed
		name = EVTOPTAslizardmen74001
		hidden_tooltip = { long_character_event = { id = slizardmen.76 } }
		ai_chance = { factor = 1 }
	}
}

character_event = {
	id = slizardmen.74002
	desc = EVTDESCAslizardmen74002
	picture = GFX_evt_lustria_jungle

	is_triggered_only = yes

	option = { #Proceed
		name = EVTOPTAslizardmen74002
		add_trait = wounded
		hidden_tooltip = { long_character_event = { id = slizardmen.76 } }
		ai_chance = { factor = 1 }
	}
}

character_event = {
	id = slizardmen.74003
	desc = EVTDESCAslizardmen74003
	picture = GFX_evt_lustria_jungle

	is_triggered_only = yes

	option = { #Proceed
		name = EVTOPTAslizardmen74003
		if = {
 limit = {
 is_invincible_trigger = yes
 }

			antideath_effect = yes
			break = yes
			}
		death = { death_reason = death_accident }
		ai_chance = { factor = 1 }
	}
}

character_event = {
	id = slizardmen.74004
	desc = EVTDESCAslizardmen74004
	picture = GFX_evt_lustria_jungle

	is_triggered_only = yes

	option = { #Proceed
		name = EVTOPTAslizardmen74004
		prestige = 50
		hidden_tooltip = { long_character_event = { id = slizardmen.76 } }
		ai_chance = { factor = 1 }
	}
}

#INSIDE THE TEMPLE, MEET THE COATL GUARDIAN
long_character_event = {
	id = slizardmen.76
	desc = { text = EVTDESCAslizardmen76
		trigger = { trait = creature_skink }
		 }
	desc = { text = EVTDESCBslizardmen76
		trigger = { trait = creature_amazon }
		 }
	desc = { text = EVTDESCCslizardmen76
		trigger = { trait = creature_human }
		 }
	picture = GFX_evt_lizardmen_coatl

	is_triggered_only = yes

	option = { #Speak as Skink
		name = EVTOPTAslizardmen76
		tooltip_info = creature_skink
		trigger = { trait = creature_skink }
		hidden_tooltip = { long_character_event = { id = slizardmen.77 } }
		ai_chance = { factor = 1 }
	}
	option = { #Speak as learned Amazon
		name = EVTOPTBslizardmen76
		tooltip_info = creature_amazon
		trigger = { trait = creature_amazon
				OR = { trait = scholar
					trait = mystic
					trait = detached_priest
					trait = martial_cleric
					trait = scholarly_theologian
					trait = mastermind_theologian } }
		hidden_tooltip = { long_character_event = { id = slizardmen.78 } }
		ai_chance = { factor = 1 }
	}
	option = { #Attack!
		name = EVTOPTCslizardmen76
		if = { limit = { trait = creature_skink }
			decadence = 20 }
		hidden_tooltip = { long_character_event = { id = slizardmen.79 } }
		ai_chance = { factor = 1
				modifier = { factor = 0
					trait = creature_skink }
			 }
	}
}

#Coatl vs Skink
long_character_event = {
	id = slizardmen.77
	desc = { text = EVTDESCAslizardmen77
		trigger = { trait = skink_priest }
		 }
	desc = { text = EVTDESCBslizardmen77
		trigger = { NOT = { trait = skink_priest } }
		 }
	picture = GFX_evt_lizardmen_coatl

	is_triggered_only = yes

	option = { #All clear: you can proceed
		name = EVTOPTAslizardmen77
		tooltip_info = skink_priest
		trigger = { trait = skink_priest }
		hidden_tooltip = { long_character_event = { id = slizardmen.80 } } #The Fountain of Youth
		ai_chance = { factor = 1 }
	}
	option = { #Not worthy, still wanting to go
		name = EVTOPTBslizardmen77
		trigger = { NOT = { trait = skink_priest } }
		hidden_tooltip = { long_character_event = { id = slizardmen.79 } } #The Coatl attacks
		ai_chance = { factor = 0 }
	}
	option = { #Not worthy, leave the quest
		name = EVTOPTCslizardmen77
		trigger = { NOT = { trait = skink_priest } }
		hidden_tooltip = { character_event = { id = slizardmen.77001 days = 15 } } #Quest over
		ai_chance = { factor = 1 }
	}
}

character_event = {
	id = slizardmen.77001
	desc = EVTDESCAslizardmen77001
	picture = GFX_evt_questing_lustria

	is_triggered_only = yes

	option = {
		name = EVTOPTAslizardmen77001
		prestige = 50
		remove_trait = questing
		ai_chance = { factor = 1 }
	}
}


#Coatl vs Amazon
long_character_event = {
	id = slizardmen.78
	desc = EVTDESCAslizardmen78
	picture = GFX_evt_lizardmen_coatl

	is_triggered_only = yes

	option = { #Pretend to offer yourself
		name = EVTOPTAslizardmen78
		tooltip_info = deceitful
		trigger = { OR = { trait = deceitful
				trait = bright
				trait = smart
				trait = quick
				trait = brilliant
				trait = genius } }
		hidden_tooltip = { long_character_event = { id = slizardmen.78001 } } #The Fountain of Youth
		ai_chance = { factor = 1 }
	}
	option = { #Attack!
		name = EVTOPTBslizardmen78
		hidden_tooltip = { long_character_event = { id = slizardmen.79 } } #The Coatl attacks
		ai_chance = { factor = 0 }
	}
	option = { #Not worthy, leave the quest
		name = EVTOPTCslizardmen78
		hidden_tooltip = { character_event = { id = slizardmen.77001 days = 15 } } #Quest over
		ai_chance = { factor = 1 }
	}
}

#Coatl swallows you
long_character_event = {
	id = slizardmen.78001
	desc = EVTDESCAslizardmen78001
	picture = GFX_evt_lizardmen_coatl

	is_triggered_only = yes

	option = { #Cut from within
		name = EVTOPTAslizardmen78001
		hidden_tooltip = {
				random_list = { 50 = { character_event = { id = slizardmen.78002 } } #Died
						50 = { modifier = { factor = 0.75
								trait = undernourished }
							modifier = { factor = 0.65
								trait = fragile }
							modifier = { factor = 0.75
								trait = soft }
							modifier = { factor = 0.5
								trait = weak }
							modifier = { factor = 1.25
								trait = hardy }
							modifier = { factor = 1.5
								trait = tough }
							modifier = { factor = 1.75
								trait = strong }
							modifier = { factor = 1.25
								trait = fat }
							modifier = { factor = 1.75
								trait = brave }
							modifier = { factor = 0.5
								trait = wounded }
							modifier = { factor = 0.25
								trait = maimed }
							character_event = { id = slizardmen.78003 } } #Killed the coatl
						 }
				 }
		ai_chance = { factor = 1 }
	}
}

#Coatl eats you
character_event = {
	id = slizardmen.78002
	desc = EVTDESCAslizardmen78002
	picture = GFX_evt_lizardmen_coatl

	is_triggered_only = yes

	option = {
		name = EVTOPTAslizardmen78002
		if = {
 limit = {
 is_invincible_trigger = yes
 }

			antideath_effect = yes
			break = yes
}
		death = { death_reason = death_battle }
		ai_chance = { factor = 1 }
	}
}

#Coatl chokes
character_event = {
	id = slizardmen.78003
	desc = EVTDESCAslizardmen78003
	picture = GFX_evt_lizardmen_coatl

	is_triggered_only = yes

	option = {
		name = EVTOPTAslizardmen78003
			prestige = 200
		hidden_tooltip = { long_character_event = { id = slizardmen.80 } } #The Fountain of Youth
		ai_chance = { factor = 1 }
	}
}

#Duel against the Coatl
long_character_event = {
	id = slizardmen.79
	desc = EVTDESCAslizardmen79
	picture = GFX_evt_lizardmen_coatl

	is_triggered_only = yes

	option = {
		name = EVTOPTAslizardmen79
		hidden_tooltip = {
				random_list = { 80 = { character_event = { id = slizardmen.79001 } } #Died
						20 = { modifier = { factor = 0.75
								trait = undernourished }
							modifier = { factor = 0.65
								trait = fragile }
							modifier = { factor = 0.75
								trait = soft }
							modifier = { factor = 0.5
								trait = weak }
							modifier = { factor = 1.25
								trait = hardy }
							modifier = { factor = 1.5
								trait = tough }
							modifier = { factor = 1.75
								trait = strong }
							modifier = { factor = 1.75
								trait = brave }
							modifier = { factor = 0.75
								trait = wounded }
							modifier = { factor = 0.5
								trait = maimed }
							modifier = { factor = 1.15
								trait = misguided_warrior }
							modifier = { factor = 1.25
								trait = tough_soldier }
							modifier = { factor = 1.5
								trait = skilled_tactician }
							modifier = { factor = 1.75
								trait = brilliant_strategist }
							modifier = { factor = 1.5
								trait = duelist }
							modifier = { factor = 1.75
								trait = hunter }
							modifier = { factor = 1.75
								has_character_modifier = magic_power_1 }
							modifier = { factor = 1.95
								has_character_modifier = magic_power_2 }
							modifier = { factor = 2
								has_character_modifier = magic_power_3 }
							modifier = { factor = 2.5
								has_character_modifier = magic_power_4 }
							modifier = { factor = 3.95
									has_artifact = black_dragon_mount }
							modifier = { factor = 3.95
									has_artifact = blue_dragon_mount }
							modifier = { factor = 3.95
									has_artifact = chaos_dragon_mount }
							modifier = { factor = 3.95
									has_artifact = gold_dragon_mount }
							modifier = { factor = 3.95
									has_artifact = white_dragon_mount }
							modifier = { factor = 3.95
									has_artifact = red_dragon_mount }
							modifier = { factor = 3.95
									has_artifact = green_dragon_mount }
							modifier = { factor = 2
									has_artifact = wyvern_mount }
							modifier = { factor = 2
									has_artifact = abyssal_terror_mount }
							modifier = { factor = 1.75
									has_artifact = pegasus_mount }
							modifier = { factor = 1.95
									has_artifact = nightmare_mount }
							modifier = { factor = 1.25
									martial = 15 }
							modifier = { factor = 1.25
									martial = 25 }
							modifier = { factor = 1.25
									martial = 35 }
							modifier = { factor = 1.25
									martial = 45 }
							modifier = { factor = 1.25
									martial = 55 }
							modifier = { factor = 1.5
									combat_rating = 2 }
							modifier = { factor = 1.5
									combat_rating = 4 }
							modifier = { factor = 1.5
									combat_rating = 6 }
							character_event = { id = slizardmen.79002 } } #Killed the coatl
						 }
				 }
		ai_chance = { factor = 1 }
	}
}

#Coatl kills you
character_event = {
	id = slizardmen.79001
	desc = EVTDESCAslizardmen79001
	picture = GFX_evt_lizardmen_coatl

	is_triggered_only = yes

	option = {
		name = EVTOPTAslizardmen79001
		if = {
 limit = {
 is_invincible_trigger = yes
 }

			antideath_effect = yes
			break = yes
			}
		death = { death_reason = death_battle }
		ai_chance = { factor = 1 }
	}
}

#Coatl is killed
character_event = {
	id = slizardmen.79002
	desc = EVTDESCAslizardmen79002
	picture = GFX_evt_lizardmen_coatl

	is_triggered_only = yes

	option = {
		name = EVTOPTAslizardmen79002
		prestige = 500
		if = { limit = { trait = creature_skink }
			decadence = 10 }
		if = { limit = { trait = creature_amazon }
			decadence = -10 }
		hidden_tooltip = { long_character_event = { id = slizardmen.80 } } #The Fountain of Youth
		ai_chance = { factor = 1 }
	}
}

#THE FOUNTAIN ITSELF
long_character_event = {
	id = slizardmen.80
	desc = EVTDESCAslizardmen80
	picture = GFX_evt_amazon_pool

	is_triggered_only = yes

	option = {
		name = EVTOPTAslizardmen80
		prestige = 500
		add_artifact = elixir_of_eternal_youth
		remove_trait = questing
		if = { limit = { trait = creature_skink }
			piety = 150
			decadence = -10 }
		if = { limit = { trait = creature_amazon }
			piety = 150
			decadence = -10 }
		ai_chance = { factor = 1 }
	}
}

#Lowborn debug
character_event = {
	id = slizardmen.81
	hide_window = yes
	is_triggered_only = yes

	immediate = {
			dynasty = father_bastard
	}
}

#################################################################
####################### AMAZON COURTIERS Bothering the Player ###

#Fire for the Player, check if courtier Amazons available
character_event = {
	id = slizardmen.82
	hide_window = yes

	only_women = yes
	min_age = 16
	max_age = 350
	capable_only = yes
	prisoner = no
	only_rulers = yes
	religion = amazon
	ai = no

	trigger = { war = no
		 trait = creature_amazon
		NOR = { trait = complacent
			trait = questing
			trait = pregnant
			trait = hard_pregnancy
			trait = troubled_pregnancy }
		any_courtier = { trait = creature_amazon
				age = 16
			NOR = { trait = complacent
				trait = questing
				trait = pregnant
				trait = disinherited_amazon
				trait = hard_pregnancy
				trait = troubled_pregnancy
				trait = infirm
				trait = incapable
				trait = maimed
				trait = craven } }
		}

	is_triggered_only = yes

	immediate = {
		random_courtier = { limit = { trait = creature_amazon
						age = 16
					NOR = { trait = complacent
						trait = questing
						trait = pregnant
						trait = disinherited_amazon
						trait = hard_pregnancy
						trait = troubled_pregnancy
						trait = infirm
						trait = incapable
						trait = maimed
						trait = craven } }
				character_event = { id = slizardmen.82001 } }
	}
}

#Ping Huntress
character_event = {
	id = slizardmen.82001
	desc = EVTDESCAslizardmen82001
	picture = GFX_evt_amazon_huntress

	is_triggered_only = yes

	option = {
		name = EVTOPTAslizardmen82001
		decadence = -1
		FROM = { character_event = { id = slizardmen.82002 } }
		ai_chance = { factor = 100 }
	}
	option = {
		name = EVTOPTBslizardmen82001
		ai_chance = { factor = 0 }
	}
}

#Want to go to hunt?
character_event = {
	id = slizardmen.82002
	desc = EVTDESCAslizardmen82002
	picture = GFX_evt_amazon_huntress

	is_triggered_only = yes

	option = {
		name = EVTOPTAslizardmen82002
		trigger = { NOR = { trait = questing
				 trait = pregnant
				 trait = in_hiding
				 trait = studying_magic
				 trait = disinherited_amazon
				 trait = hard_pregnancy
				 trait = troubled_pregnancy
				 trait = incapable } }
		add_trait = questing
		FROM = { add_trait = questing }
		hidden_tooltip = {
				FROM = { clr_character_flag = am_hunt_1
					clr_character_flag = am_hunt_2
					clr_character_flag = am_hunt_3
					clr_character_flag = am_hunt_4
					clr_character_flag = am_hunt_5
					clr_character_flag = am_hunt_6
					clr_character_flag = am_hunt_7
					clr_character_flag = am_hunt_8
					clr_character_flag = am_hunt_9
					clr_character_flag = am_hunt_10
					clr_character_flag = am_hunt_11 }
				clr_character_flag = am_hunt_1
				clr_character_flag = am_hunt_2
				clr_character_flag = am_hunt_3
				clr_character_flag = am_hunt_4
				clr_character_flag = am_hunt_5
				clr_character_flag = am_hunt_6
				clr_character_flag = am_hunt_7
				clr_character_flag = am_hunt_8
				clr_character_flag = am_hunt_9
				clr_character_flag = am_hunt_10
				clr_character_flag = am_hunt_11

				random_list = { 10 = { modifier = { factor = 1.5
									trait = brave }
							modifier = { factor = 1.5
									trait = tough_soldier }
							modifier = { factor = 1.65
									trait = skilled_tactician }
							modifier = { factor = 1.75
									trait = brilliant_strategist }
							modifier = { factor = 1.65
									trait = strong }
							modifier = { factor = 1.4
									trait = hardy }
							modifier = { factor = 1.5
									trait = tough }
							modifier = { factor = 1.25
									trait = tall }
							modifier = { factor = 1.5
									trait = hunter }
							modifier = { factor = 1.25
									trait = duelist }
							modifier = { factor = 1.25
									trait = quick }
							modifier = { factor = 1.3
									trait = brilliant }
							modifier = { factor = 1.5
									trait = genius }
							modifier = { factor = 1.25
									trait = gregarious }
							modifier = { factor = 1.3
									trait = temperate }
							modifier = { factor = 1.3
									trait = deceitful }
								character_event = { id = slizardmen.87 days = 13 random = 15 } } #Had great time, return home
						 80 = { FROM = { character_event = { id = slizardmen.88 days = 13 random = 7 } } } #Challenging the other huntress
						 10 = { modifier = { factor = 1.5
									trait = craven }
							modifier = { factor = 1.5
									trait = wounded }
							modifier = { factor = 1.75
									trait = maimed }
							modifier = { factor = 1.75
									trait = blinded }
							modifier = { factor = 1.5
									trait = fragile }
							modifier = { factor = 1.4
									trait = soft }
							modifier = { factor = 1.65
									trait = weak }
							modifier = { factor = 1.45
									trait = hunchback }
							modifier = { factor = 1.5
									trait = dwarf }
							modifier = { factor = 1.25
									trait = clubfooted }
							modifier = { factor = 1.25
									trait = slow }
							modifier = { factor = 1.3
									trait = idiot }
							modifier = { factor = 1.5
									trait = imbecile }
							modifier = { factor = 1.25
									trait = shy }
							modifier = { factor = 1.3
									trait = fat }
							modifier = { factor = 1.3
									trait = undernourished }
							modifier = { factor = 1.5
									trait = addict }
							modifier = { factor = 1.45
									trait = drunkard }
								character_event = { id = slizardmen.89 days = 13 random = 15 } } #Utter failure
						}
					}
		ai_chance = { factor = 100 }
	}
	option = {
		name = EVTOPTBslizardmen82002
		decadence = 10
		hidden_tooltip = { random_list = { 30 = { modifier = { factor = 1.5
									trait = diligent }
								modifier = { factor = 1.25
									trait = wroth }
								modifier = { factor = 1.65
									trait = temperate }
								modifier = { factor = 1.5
									trait = strong }
								modifier = { factor = 1.45
									trait = tough }
								modifier = { factor = 1.35
									trait = hardy }
								modifier = { factor = 1.45
									in_command = yes }
							}
						 20 = { modifier = { factor = 1.5
									trait = gregarious }
							modifier = { factor = 1.5
									trait = hedonist }
							modifier = { factor = 1.5
									trait = addict }
							modifier = { factor = 0
									trait = drunkard }
							character_event = { id = slizardmen.83 days = 90 random = 70 } } #Drunk
						 20 = { modifier = { factor = 1.5
									trait = slothful }
							modifier = { factor = 1.5
									trait = gluttonous }
							modifier = { factor = 0
									trait = fat }
							character_event = { id = slizardmen.84 days = 90 random = 70 } } #Fat
						 20 = { modifier = { factor = 1.5
									trait = paranoid }
							modifier = { factor = 1.5
									trait = depressed }
							modifier = { factor = 1.5
									trait = craven }
							modifier = { factor = 0
									trait = undernourished }
							character_event = { id = slizardmen.85 days = 90 random = 70 } } #Undernourished
						 10 = {
							modifier = { factor = 0
									NOR = { trait = slothful
										trait = drunkard
										trait = gluttonous
										trait = addict
										trait = fat } }
							modifier = { factor = 0
									trait = hedonist }
							character_event = { id = slizardmen.86 days = 90 random = 70 } } #Hedonist
						}
					}
		ai_chance = { factor = 0 }
	}
}

#Drunkard
character_event = {
	id = slizardmen.83
	desc = { text = EVTDESCAslizardmen83
		trigger = { NOT = { trait = gregarious } } }
	desc = { text = EVTDESCBslizardmen83
		trigger = { trait = gregarious } }

	picture = GFX_evt_slaanesh_tempt

	is_triggered_only = yes

	option = {
		name = EVTOPTAslizardmen83
		decadence = 3
		if = { limit = { NOT = { trait = gregarious } }
			random = { chance = 60
				add_trait = drunkard
				decadence = 8 }
			 }
		if = { limit = { trait = gregarious }
			random = { chance = 40
				add_trait = drunkard
				decadence = 3 }
			 }
		ai_chance = { factor = 1 }
	}
}

#Fat
character_event = {
	id = slizardmen.84
	desc = { text = EVTDESCAslizardmen84
		trigger = { NOT = { trait = gluttonous } } }
	desc = { text = EVTDESCBslizardmen84
		trigger = { trait = gluttonous } }

	picture = GFX_evt_slaanesh_tempt

	is_triggered_only = yes

	option = {
		name = EVTOPTAslizardmen84
		decadence = 4
		if = { limit = { NOT = { trait = gluttonous } }
			random = { chance = 40
				add_trait = gluttonous
				decadence = 2 }
			 }
		if = { limit = { trait = gluttonous }
			random = { chance = 30
				add_trait = fat
				decadence = 10 }
			 }
		ai_chance = { factor = 1 }
	}
}

#Undernourished
character_event = {
	id = slizardmen.85
	desc = { text = EVTDESCAslizardmen85
		trigger = { NOT = { trait = depressed } } }
	desc = { text = EVTDESCBslizardmen85
		trigger = { trait = depressed } }

	picture = GFX_evt_slaanesh_tempt

	is_triggered_only = yes

	option = {
		name = EVTOPTAslizardmen85
		decadence = 4
		if = { limit = { NOT = { trait = depressed } }
			random = { chance = 30
				add_trait = undernourished
				decadence = 10 }
			 }
		if = { limit = { trait = depressed }
			random = { chance = 60
				add_trait = undernourished
				decadence = 10 }
			 }
		ai_chance = { factor = 1 }
	}
}

#Hedonist
character_event = {
	id = slizardmen.86
	desc = { text = EVTDESCAslizardmen86
		trigger = { NOT = { trait = gregarious } } }
	desc = { text = EVTDESCBslizardmen86
		trigger = { trait = gregarious } }

	picture = GFX_evt_slaanesh_tempt

	is_triggered_only = yes

	option = {
		name = EVTOPTAslizardmen86
		decadence = 4
		if = { limit = { NOT = { trait = gregarious } }
			random = { chance = 30
				add_trait = hedonist
				decadence = 7 }
			 }
		if = { limit = { trait = gregarious }
			random = { chance = 60
				add_trait = hedonist
				decadence = 7 }
			 }
		ai_chance = { factor = 1 }
	}
}

#Excellent hunting
character_event = {
	id = slizardmen.87
	desc = EVTDESCAslizardmen87
	picture = GFX_evt_amazon_huntress

	is_triggered_only = yes

	option = {
		name = EVTOPTAslizardmen87
		decadence = -1
		prestige = 75
		remove_trait = questing
		random = { chance = 30
				add_trait = wounded }
		FROMFROM = { character_event = { id = slizardmen.87001 } }
	}
}

#Excellent hunting - Notify huntress
character_event = {
	id = slizardmen.87001
	desc = EVTDESCAslizardmen87001
	picture = GFX_evt_amazon_huntress

	is_triggered_only = yes

	option = {
		name = EVTOPTAslizardmen87001
		decadence = -2
		prestige = 75
		remove_trait = questing
		random = { chance = 30
				add_trait = wounded }
	}
}

#Bad hunting
character_event = {
	id = slizardmen.89
	desc = EVTDESCAslizardmen89
	picture = GFX_evt_amazon_huntress

	is_triggered_only = yes

	option = {
		name = EVTOPTAslizardmen89
		decadence = -5
		prestige = -75
		remove_trait = questing
		random = { chance = 60
				add_trait = wounded }
		random = { chance = 30
				add_trait = maimed }
		random = { chance = 2
		if = {
 limit = {
 is_invincible_trigger = yes
 }

			antideath_effect = yes
			break = yes
			}
				death = { death_reason = death_accident } }
		FROMFROM = { character_event = { id = slizardmen.89001 } }
	}
}

#Bad hunting - Notify huntress
character_event = {
	id = slizardmen.89001
	desc = EVTDESCAslizardmen89001
	picture = GFX_evt_amazon_huntress

	is_triggered_only = yes

	option = {
		name = EVTOPTAslizardmen89001
		decadence = 1
		remove_trait = questing
		random = { chance = 60
				add_trait = wounded }
		random = { chance = 30
				add_trait = maimed }
		random = { chance = 2
		if = {
 limit = {
 is_invincible_trigger = yes
 }

			antideath_effect = yes
			break = yes
			}
				death = { death_reason = death_accident } }
	}
}

#Hunting competition - Huntress event first
character_event = {
	id = slizardmen.88
	desc = EVTDESCAslizardmen88
	picture = GFX_evt_amazon_huntress

	is_triggered_only = yes

	option = {
		name = EVTOPTAslizardmen88
		save_event_target_as = am_huntress_2
		FROM = { save_event_target_as = am_huntress_1 }

		hidden_tooltip = {
				#To give random flavour text to the fights
				random_list = { 	15 = { set_character_flag = am_hunt_1
								FROM = { set_character_flag = am_hunt_1 } }
							15 = { set_character_flag = am_hunt_2
								FROM = { set_character_flag = am_hunt_2 } }
							15 = { set_character_flag = am_hunt_3
								FROM = { set_character_flag = am_hunt_3 } }
							15 = { set_character_flag = am_hunt_4
								FROM = { set_character_flag = am_hunt_4 } }
							15 = { set_character_flag = am_hunt_5
								FROM = { set_character_flag = am_hunt_5 } }
							15 = { set_character_flag = am_hunt_6
								FROM = { set_character_flag = am_hunt_6 } }
							10 = { set_character_flag = am_hunt_7
								FROM = { set_character_flag = am_hunt_7 } }
							10 = { set_character_flag = am_hunt_8
								FROM = { set_character_flag = am_hunt_8 } }
							10 = { set_character_flag = am_hunt_9
								FROM = { set_character_flag = am_hunt_9 } }
							10 = { set_character_flag = am_hunt_10
								FROM = { set_character_flag = am_hunt_10 } }
							10 = { set_character_flag = am_hunt_11
								FROM = { set_character_flag = am_hunt_11 } }
							 }
			random_list = { 50 = { #First contestant wins
							modifier = { factor = 0.65
								event_target:am_huntress_1 = { trait = fragile }
								 }
							modifier = { factor = 0.75
								event_target:am_huntress_1 = { trait = weak }
								 }
							modifier = { factor = 0.85
								event_target:am_huntress_1 = { trait = soft }
								 }
							modifier = { factor = 1.25
								event_target:am_huntress_1 = { trait = hardy }
								 }
							modifier = { factor = 1.5
								event_target:am_huntress_1 = { trait = tough }
								 }
							modifier = { factor = 1.75
								event_target:am_huntress_1 = { trait = strong }
								 }
							modifier = { factor = 0.5
								event_target:am_huntress_1 = { trait = craven }
								 }
							modifier = { factor = 1.15
								event_target:am_huntress_1 = { trait = diligent }
								 }
							modifier = { factor = 0.85
								event_target:am_huntress_1 = { trait = drunkard }
								 }
							modifier = { factor = 0.85
								event_target:am_huntress_1 = { trait = addict }
								 }
							modifier = { factor = 1.75
								event_target:am_huntress_1 = { trait = brave }
								 }
							modifier = { factor = 0.85
								event_target:am_huntress_1 = { trait = fat }
								 }
							modifier = { factor = 0.85
								event_target:am_huntress_1 = { trait = undernourished }
								 }
							modifier = { factor = 1.5
								event_target:am_huntress_1 = { trait = ambitious }
								 }
							modifier = { factor = 0.85
								event_target:am_huntress_1 = { trait = content }
								 }
							modifier = { factor = 1.5
								event_target:am_huntress_1 = { trait = duelist }
								 }
							modifier = { factor = 1.85
								event_target:am_huntress_1 = { trait = hunter }
								 }
							modifier = { factor = 0.5
								event_target:am_huntress_1 = { trait = wounded }
								 }
							modifier = { factor = 0.25
								event_target:am_huntress_1 = { trait = maimed }
								 }
							modifier = { factor = 0.75
								event_target:am_huntress_1 = { trait = infirm }
								 }
							modifier = { factor = 0.25
								event_target:am_huntress_1 = { trait = blinded }
								 }
							modifier = { factor = 1.25
								event_target:am_huntress_1 = { trait = tall }
								 }
							modifier = { factor = 0.5
								event_target:am_huntress_1 = { trait = dwarf }
								 }
							modifier = { factor = 0.5
								event_target:am_huntress_1 = { trait = hunchback }
								 }
							modifier = { factor = 0.75
								event_target:am_huntress_1 = { trait = clubfooted }
								 }
							modifier = { factor = 0.9
								event_target:am_huntress_1 = { NOT = { age = 18 } }
								 }
							modifier = { factor = 1.25
								event_target:am_huntress_1 = { martial = 15 }
								 }
							modifier = { factor = 0.85
								event_target:am_huntress_1 = { trait = stressed }
								 }
							modifier = { factor = 0.75
								event_target:am_huntress_1 = { trait = depressed }
								 }
							modifier = { factor = 0.95
								event_target:am_huntress_1 = { trait = dim }
								 }
							modifier = { factor = 0.9
								event_target:am_huntress_1 = { trait = dumb }
								 }
							modifier = { factor = 0.85
								event_target:am_huntress_1 = { trait = slow }
								 }
							modifier = { factor = 0.8
								event_target:am_huntress_1 = { trait = idiot }
								 }
							modifier = { factor = 0.75
								event_target:am_huntress_1 = { trait = imbecile }
								 }
							modifier = { factor = 1.15
								event_target:am_huntress_1 = { trait = bright }
								 }
							modifier = { factor = 1.2
								event_target:am_huntress_1 = { trait = smart }
								 }
							modifier = { factor = 1.25
								event_target:am_huntress_1 = { trait = quick }
								 }
							modifier = { factor = 1.3
								event_target:am_huntress_1 = { trait = brilliant }
								 }
							modifier = { factor = 1.35
								event_target:am_huntress_1 = { trait = genius }
								 }
							modifier = { factor = 0.85
								event_target:am_huntress_1 = { trait = slothful }
								 }
							modifier = { factor = 0.9
								event_target:am_huntress_1 = { trait = kind }
								 }
							modifier = { factor = 0.9
								event_target:am_huntress_1 = { trait = humble }
								 }
							modifier = { factor = 0.9
								event_target:am_huntress_1 = { trait = shy }
								 }
							modifier = { factor = 1.1
								event_target:am_huntress_1 = { trait = misguided_warrior }
								 }
							modifier = { factor = 1.35
								event_target:am_huntress_1 = { trait = tough_soldier }
								 }
							modifier = { factor = 1.5
								event_target:am_huntress_1 = { trait = skilled_tactician }
								 }
							modifier = { factor = 1.75
								event_target:am_huntress_1 = { trait = brilliant_strategist }
								 }
							modifier = { factor = 1.35
								event_target:am_huntress_1 = { trait = zealous }
								 }
							modifier = { factor = 1.15
								event_target:am_huntress_1 = { trait = cruel }
								 }
							modifier = { factor = 0.95
								event_target:am_huntress_1 = { trait = just }
								 }
							modifier = { factor = 0.85
								event_target:am_huntress_1 = { trait = complacent }
								 }
							modifier = { factor = 0.9
								event_target:am_huntress_1 = { any_child = { count = 3 } }
								 }
							modifier = { factor = 0.9
								event_target:am_huntress_1 = { any_child = { count = 5 } }
								 }
							modifier = { factor = 1.15
								event_target:am_huntress_1 = { trait = deceitful }
								 }
							modifier = { factor = 0.95
								event_target:am_huntress_1 = { trait = honest }
								 }
							modifier = { factor = 1.15
								event_target:am_huntress_1 = { trait = paranoid }
								 }
							modifier = { factor = 0.95
								event_target:am_huntress_1 = { trait = trusting }
								 }
							modifier = { factor = 0.85
								event_target:am_huntress_1 = { trait = ill }
								 }
							modifier = { factor = 0.5
								event_target:am_huntress_1 = { trait = has_nurgles_rot }
								 }
							modifier = { factor = 1.25
								event_target:am_huntress_1 = { trait = aggressive_leader }
								 }
							modifier = { factor = 1.15
								event_target:am_huntress_1 = { trait = experimenter }
								 }
							modifier = { factor = 1.35
								event_target:am_huntress_1 = { trait = trickster }
								 }
							modifier = { factor = 1.15
								event_target:am_huntress_1 = { trait = lunatic_1 }
								 }
							modifier = { factor = 0.95
								event_target:am_huntress_1 = { trait = lunatic_2 }
								 }
							modifier = { factor = 0.85
								event_target:am_huntress_1 = { trait = lunatic_3 }
								 }
							modifier = { factor = 0.75
								event_target:am_huntress_1 = { trait = disfigured }
								 }
							modifier = { factor = 1.65
								event_target:am_huntress_1 = { age = 150
												has_artifact = elixir_of_eternal_youth }
								 }
							modifier = { factor = 0.5
								event_target:am_huntress_1 = { age = 40
												NOT
												=
												{
												has_artifact = elixir_of_eternal_youth } }
								 }
							modifier = { factor = 0.95
								event_target:am_huntress_1 = { trait = wroth }
								 }
							modifier = { factor = 1.15
								event_target:am_huntress_1 = { trait = patient }
								 }
							modifier = { factor = 1.15
								event_target:am_huntress_1 = { trait = strategist }
								 }
							modifier = { factor = 1.15
								event_target:am_huntress_1 = { OR = { trait = amateurish_plotter
													trait = flamboyant_schemer
													trait = intricate_webweaver
													trait = elusive_shadow } }
								 }
							modifier = { factor = 0.8
								event_target:am_huntress_1 = { OR = { trait = naive_appeaser
													trait = underhanded_rogue
													trait = charismatic_negotiator
													trait = grey_eminence } }
								 }
							modifier = { factor = 0.9
								event_target:am_huntress_1 = { OR = { trait = indulgent_wastrel
													trait = thrifty_clerk
													trait = fortune_builder
													trait = midas_touched } }
								 }
								event_target:am_huntress_1 = { long_character_event = { id = slizardmen.88001 } }
							 } #closes50
						50 = { #Second contestant wins

							modifier = { factor = 0.65
								event_target:am_huntress_2 = { trait = fragile }
								 }
							modifier = { factor = 0.75
								event_target:am_huntress_2 = { trait = weak }
								 }
							modifier = { factor = 0.85
								event_target:am_huntress_2 = { trait = soft }
								 }
							modifier = { factor = 1.25
								event_target:am_huntress_2 = { trait = hardy }
								 }
							modifier = { factor = 1.5
								event_target:am_huntress_2 = { trait = tough }
								 }
							modifier = { factor = 1.75
								event_target:am_huntress_2 = { trait = strong }
								 }
							modifier = { factor = 0.5
								event_target:am_huntress_2 = { trait = craven }
								 }
							modifier = { factor = 1.15
								event_target:am_huntress_2 = { trait = diligent }
								 }
							modifier = { factor = 0.85
								event_target:am_huntress_2 = { trait = drunkard }
								 }
							modifier = { factor = 0.85
								event_target:am_huntress_2 = { trait = addict }
								 }
							modifier = { factor = 1.75
								event_target:am_huntress_2 = { trait = brave }
								 }
							modifier = { factor = 0.85
								event_target:am_huntress_2 = { trait = fat }
								 }
							modifier = { factor = 0.85
								event_target:am_huntress_2 = { trait = undernourished }
								 }
							modifier = { factor = 1.5
								event_target:am_huntress_2 = { trait = ambitious }
								 }
							modifier = { factor = 0.85
								event_target:am_huntress_2 = { trait = content }
								 }
							modifier = { factor = 1.5
								event_target:am_huntress_2 = { trait = duelist }
								 }
							modifier = { factor = 1.95
								event_target:am_huntress_2 = { trait = hunter }
								 }
							modifier = { factor = 0.5
								event_target:am_huntress_2 = { trait = wounded }
								 }
							modifier = { factor = 0.25
								event_target:am_huntress_2 = { trait = maimed }
								 }
							modifier = { factor = 0.75
								event_target:am_huntress_2 = { trait = infirm }
								 }
							modifier = { factor = 0.25
								event_target:am_huntress_2 = { trait = blinded }
								 }
							modifier = { factor = 1.25
								event_target:am_huntress_2 = { trait = tall }
								 }
							modifier = { factor = 0.5
								event_target:am_huntress_2 = { trait = dwarf }
								 }
							modifier = { factor = 0.5
								event_target:am_huntress_2 = { trait = hunchback }
								 }
							modifier = { factor = 0.75
								event_target:am_huntress_2 = { trait = clubfooted }
								 }
							modifier = { factor = 0.9
								event_target:am_huntress_2 = { NOT = { age = 18 } }
								 }
							modifier = { factor = 1.25
								event_target:am_huntress_2 = { martial = 15 }
								 }
							modifier = { factor = 0.85
								event_target:am_huntress_2 = { trait = stressed }
								 }
							modifier = { factor = 0.75
								event_target:am_huntress_2 = { trait = depressed }
								 }
							modifier = { factor = 0.95
								event_target:am_huntress_2 = { trait = dim }
								 }
							modifier = { factor = 0.9
								event_target:am_huntress_2 = { trait = dumb }
								 }
							modifier = { factor = 0.85
								event_target:am_huntress_2 = { trait = slow }
								 }
							modifier = { factor = 0.8
								event_target:am_huntress_2 = { trait = idiot }
								 }
							modifier = { factor = 0.75
								event_target:am_huntress_2 = { trait = imbecile }
								 }
							modifier = { factor = 1.15
								event_target:am_huntress_2 = { trait = bright }
								 }
							modifier = { factor = 1.2
								event_target:am_huntress_2 = { trait = smart }
								 }
							modifier = { factor = 1.25
								event_target:am_huntress_2 = { trait = quick }
								 }
							modifier = { factor = 1.3
								event_target:am_huntress_2 = { trait = brilliant }
								 }
							modifier = { factor = 1.35
								event_target:am_huntress_2 = { trait = genius }
								 }
							modifier = { factor = 0.85
								event_target:am_huntress_2 = { trait = slothful }
								 }
							modifier = { factor = 0.9
								event_target:am_huntress_2 = { trait = kind }
								 }
							modifier = { factor = 0.9
								event_target:am_huntress_2 = { trait = humble }
								 }
							modifier = { factor = 0.9
								event_target:am_huntress_2 = { trait = shy }
								 }
							modifier = { factor = 1.1
								event_target:am_huntress_2 = { trait = misguided_warrior }
								 }
							modifier = { factor = 1.35
								event_target:am_huntress_2 = { trait = tough_soldier }
								 }
							modifier = { factor = 1.5
								event_target:am_huntress_2 = { trait = skilled_tactician }
								 }
							modifier = { factor = 1.75
								event_target:am_huntress_2 = { trait = brilliant_strategist }
								 }
							modifier = { factor = 1.35
								event_target:am_huntress_2 = { trait = zealous }
								 }
							modifier = { factor = 1.15
								event_target:am_huntress_2 = { trait = cruel }
								 }
							modifier = { factor = 0.95
								event_target:am_huntress_2 = { trait = just }
								 }
							modifier = { factor = 0.85
								event_target:am_huntress_2 = { trait = complacent }
								 }
							modifier = { factor = 0.9
								event_target:am_huntress_2 = { any_child = { count = 3 } }
								 }
							modifier = { factor = 0.9
								event_target:am_huntress_2 = { any_child = { count = 5 } }
								 }
							modifier = { factor = 1.15
								event_target:am_huntress_2 = { trait = deceitful }
								 }
							modifier = { factor = 0.95
								event_target:am_huntress_2 = { trait = honest }
								 }
							modifier = { factor = 1.15
								event_target:am_huntress_2 = { trait = paranoid }
								 }
							modifier = { factor = 0.95
								event_target:am_huntress_2 = { trait = trusting }
								 }
							modifier = { factor = 0.85
								event_target:am_huntress_2 = { trait = ill }
								 }
							modifier = { factor = 0.5
								event_target:am_huntress_2 = { trait = has_nurgles_rot }
								 }
							modifier = { factor = 1.25
								event_target:am_huntress_2 = { trait = aggressive_leader }
								 }
							modifier = { factor = 1.15
								event_target:am_huntress_2 = { trait = experimenter }
								 }
							modifier = { factor = 1.35
								event_target:am_huntress_2 = { trait = trickster }
								 }
							modifier = { factor = 1.15
								event_target:am_huntress_2 = { trait = lunatic_1 }
								 }
							modifier = { factor = 0.95
								event_target:am_huntress_2 = { trait = lunatic_2 }
								 }
							modifier = { factor = 0.85
								event_target:am_huntress_2 = { trait = lunatic_3 }
								 }
							modifier = { factor = 0.75
								event_target:am_huntress_2 = { trait = disfigured }
								 }
							modifier = { factor = 1.65
								event_target:am_huntress_2 = { age = 150
												has_artifact = elixir_of_eternal_youth }
								 }
							modifier = { factor = 0.5
								event_target:am_huntress_2 = { age = 40
												NOT
												=
												{
												has_artifact = elixir_of_eternal_youth } }
								 }
							modifier = { factor = 0.95
								event_target:am_huntress_2 = { trait = wroth }
								 }
							modifier = { factor = 1.15
								event_target:am_huntress_2 = { trait = patient }
								 }
							modifier = { factor = 1.15
								event_target:am_huntress_2 = { trait = strategist }
								 }
							modifier = { factor = 1.15
								event_target:am_huntress_2 = { OR = { trait = amateurish_plotter
													trait = flamboyant_schemer
													trait = intricate_webweaver
													trait = elusive_shadow } }
								 }
							modifier = { factor = 0.8
								event_target:am_huntress_2 = { OR = { trait = naive_appeaser
													trait = underhanded_rogue
													trait = charismatic_negotiator
													trait = grey_eminence } }
								 }
							modifier = { factor = 0.9
								event_target:am_huntress_2 = { OR = { trait = indulgent_wastrel
													trait = thrifty_clerk
													trait = fortune_builder
													trait = midas_touched } }
								 }
								event_target:am_huntress_2 = { long_character_event = { id = slizardmen.88001 } }
							 } #closes50
						} #closesrandomlist
				 } #closeshiddentooltip
	}
}

#Winning Hunt event
long_character_event = {
	id = slizardmen.88001
	desc = { text = EVTDESCAslizardmen88001
		trigger = { event_target:am_huntress_1 = { character = ROOT
							has_character_flag = am_hunt_1 } } #Opponent is FROM
		 }
	desc = { text = EVTDESCBslizardmen88001
		trigger = { event_target:am_huntress_1 = { character = ROOT
							has_character_flag = am_hunt_2 } } #Opponent is FROM
		 }
	desc = { text = EVTDESCCslizardmen88001
		trigger = { event_target:am_huntress_1 = { character = ROOT
							has_character_flag = am_hunt_3 } } #Opponent is FROM
		 }
	desc = { text = EVTDESCDslizardmen88001
		trigger = { event_target:am_huntress_2 = { character = ROOT
							has_character_flag = am_hunt_1 } } #Opponent is FROMFROM
		 }
	desc = { text = EVTDESCEslizardmen88001
		trigger = { event_target:am_huntress_2 = { character = ROOT
							has_character_flag = am_hunt_2 } } #Opponent is FROMFROM
		 }
	desc = { text = EVTDESCFslizardmen88001
		trigger = { event_target:am_huntress_2 = { character = ROOT
							has_character_flag = am_hunt_3 } } #Opponent is FROMFROM
		 }


	desc = { text = EVTDESCGslizardmen88001
		trigger = { event_target:am_huntress_1 = { character = ROOT
							has_character_flag = am_hunt_4 } } #Opponent is FROM
		 }
	desc = { text = EVTDESCHslizardmen88001
		trigger = { event_target:am_huntress_1 = { character = ROOT
							has_character_flag = am_hunt_5 } } #Opponent is FROM
		 }
	desc = { text = EVTDESCIslizardmen88001
		trigger = { event_target:am_huntress_1 = { character = ROOT
							has_character_flag = am_hunt_6 } } #Opponent is FROM
		 }
	desc = { text = EVTDESCLslizardmen88001
		trigger = { event_target:am_huntress_1 = { character = ROOT
							has_character_flag = am_hunt_7 } } #Opponent is FROM
		 }
	desc = { text = EVTDESCMslizardmen88001
		trigger = { event_target:am_huntress_2 = { character = ROOT
							has_character_flag = am_hunt_4 } } #Opponent is FROMFROM
		 }
	desc = { text = EVTDESCNslizardmen88001
		trigger = { event_target:am_huntress_2 = { character = ROOT
							has_character_flag = am_hunt_5 } } #Opponent is FROMFROM
		 }
	desc = { text = EVTDESCOslizardmen88001
		trigger = { event_target:am_huntress_2 = { character = ROOT
							has_character_flag = am_hunt_6 } } #Opponent is FROMFROM
		 }
	desc = { text = EVTDESCPslizardmen88001
		trigger = { event_target:am_huntress_2 = { character = ROOT
							has_character_flag = am_hunt_7 } } #Opponent is FROMFROM
		 }



	desc = { text = EVTDESCQslizardmen88001
		trigger = { event_target:am_huntress_1 = { character = ROOT
							has_character_flag = am_hunt_8 } } #Opponent is FROM
		 }

	desc = { text = EVTDESCRslizardmen88001
		trigger = { event_target:am_huntress_1 = { character = ROOT
							has_character_flag = am_hunt_9 } } #Opponent is FROM
		 }

	desc = { text = EVTDESCSslizardmen88001
		trigger = { event_target:am_huntress_1 = { character = ROOT
							has_character_flag = am_hunt_10 } } #Opponent is FROM
		 }
	desc = { text = EVTDESCTslizardmen88001
		trigger = { event_target:am_huntress_1 = { character = ROOT
							has_character_flag = am_hunt_11 } } #Opponent is FROM
		 }
	desc = { text = EVTDESCUslizardmen88001
		trigger = { event_target:am_huntress_2 = { character = ROOT
							has_character_flag = am_hunt_8 } } #Opponent is FROMFROM
		 }
	desc = { text = EVTDESCVslizardmen88001
		trigger = { event_target:am_huntress_2 = { character = ROOT
							has_character_flag = am_hunt_9 } } #Opponent is FROMFROM
		 }
	desc = { text = EVTDESCWslizardmen88001
		trigger = { event_target:am_huntress_2 = { character = ROOT
							has_character_flag = am_hunt_10 } } #Opponent is FROMFROM
		 }
	desc = { text = EVTDESCXslizardmen88001
		trigger = { event_target:am_huntress_2 = { character = ROOT
							has_character_flag = am_hunt_11 } } #Opponent is FROMFROM
		 }
	picture = GFX_evt_amazon_huntress

	trigger = { trait = creature_amazon }

	is_triggered_only = yes

	immediate = { random = { chance = 30
				add_trait = wounded }
			random = { chance = 1
				add_trait = maimed } }

	option = {
		name = EVTOPTAslizardmen88001
		prestige = 75
		hidden_tooltip = { character_event = { id = slizardmen.88003 days = 5 random = 5 } #Had great time, return home
 				if = { limit = { event_target:am_huntress_1 = { character = ROOT } }
						event_target:am_huntress_2 = { long_character_event = { id = slizardmen.88002 } }
						 }
 				if = { limit = { event_target:am_huntress_2 = { character = ROOT } }
						event_target:am_huntress_1 = { long_character_event = { id = slizardmen.88002 } }
						 }
		 }
		ai_chance = { factor = 1 }
	}
}

#Loser Hunter event
long_character_event = {
	id = slizardmen.88002
	desc = { text = EVTDESCAslizardmen88002
		trigger = { FROM = { has_character_flag = am_hunt_1 } }
		 }
	desc = { text = EVTDESCBslizardmen88002
		trigger = { FROM = { has_character_flag = am_hunt_2 } }
		 }
	desc = { text = EVTDESCCslizardmen88002
		trigger = { FROM = { has_character_flag = am_hunt_3 } }
		 }
	desc = { text = EVTDESCDslizardmen88002
		trigger = { FROM = { has_character_flag = am_hunt_4 } }
		 }
	desc = { text = EVTDESCEslizardmen88002
		trigger = { FROM = { has_character_flag = am_hunt_5 } }
		 }
	desc = { text = EVTDESCFslizardmen88002
		trigger = { FROM = { has_character_flag = am_hunt_6 } }
		 }
	desc = { text = EVTDESCGslizardmen88002
		trigger = { FROM = { has_character_flag = am_hunt_7 } }
		 }
	desc = { text = EVTDESCHslizardmen88002
		trigger = { FROM = { has_character_flag = am_hunt_8 } }
		 }
	desc = { text = EVTDESCIslizardmen88002
		trigger = { FROM = { has_character_flag = am_hunt_9 } }
		 }
	desc = { text = EVTDESCLslizardmen88002
		trigger = { FROM = { has_character_flag = am_hunt_10 } }
		 }
	desc = { text = EVTDESCMslizardmen88002
		trigger = { FROM = { has_character_flag = am_hunt_11 } }
		 }
	picture = GFX_evt_amazon_huntress

	trigger = { trait = creature_amazon }

	immediate = { random = { chance = 50
				add_trait = wounded }
			random = { chance = 5
				add_trait = maimed } }
	is_triggered_only = yes

	option = {
		name = EVTOPTAslizardmen88002
		decadence = 2
		hidden_tooltip = { character_event = { id = slizardmen.88004 days = 5 random = 5 } #A little hard, return home
 				if = { limit = { event_target:am_huntress_2 = { character = ROOT } }
						clear_event_target = am_huntress_2
						FROM =  { clear_event_target = am_huntress_1 }
						 }
 				if = { limit = { event_target:am_huntress_1 = { character = ROOT } }
						clear_event_target = am_huntress_1
						FROM =  { clear_event_target = am_huntress_2 }
						 }
				FROM = { clr_character_flag = am_hunt_1
					clr_character_flag = am_hunt_2
					clr_character_flag = am_hunt_3
					clr_character_flag = am_hunt_4
					clr_character_flag = am_hunt_5
					clr_character_flag = am_hunt_6
					clr_character_flag = am_hunt_7
					clr_character_flag = am_hunt_8
					clr_character_flag = am_hunt_9
					clr_character_flag = am_hunt_10
					clr_character_flag = am_hunt_11 }
				clr_character_flag = am_hunt_1
				clr_character_flag = am_hunt_2
				clr_character_flag = am_hunt_3
				clr_character_flag = am_hunt_4
				clr_character_flag = am_hunt_5
				clr_character_flag = am_hunt_6
				clr_character_flag = am_hunt_7
				clr_character_flag = am_hunt_8
				clr_character_flag = am_hunt_9
				clr_character_flag = am_hunt_10
				clr_character_flag = am_hunt_11
			}
		ai_chance = { factor = 1 }
	}
}

#Had a great time
character_event = {
	id = slizardmen.88003
	desc = EVTDESCAslizardmen88003
	picture = GFX_evt_amazon_huntress

	is_triggered_only = yes

	option = {
		name = EVTOPTAslizardmen88003
		remove_trait = questing
	}
}

#Not so much
character_event = {
	id = slizardmen.88004
	desc = EVTDESCAslizardmen88004
	picture = GFX_evt_amazon_huntress

	is_triggered_only = yes

	option = {
		name = EVTOPTAslizardmen88004
		remove_trait = questing
	}
}

namespace = gslizard

# MERGE WITH S_lizardmen_event
character_event = {
    id = gslizard.0
	desc = EVTDESCgslizard.0
	picture = "GFX_evt_lizardmen_temple_fire"

	only_rulers = yes

	is_triggered_only = yes

	option = {
	name = EVTOPTgslizard.0 #Ok
	immediate = {

	    d_tulwark = { de_jure_liege = k_tlanqua }
		d_dhahab = { de_jure_liege = k_tlanqua }
		d_olimen = { de_jure_liege = k_tlanqua }
		d_talatine = { de_jure_liege = k_tlanqua }
		d_tar = { de_jure_liege = k_tlanqua }

		k_tulwark = { destroy_landed_title = k_tulwark }
	    }
	}
}


narrative_event = {
    id = gslizard.1
	desc = EVTDESCgslizard.1
	picture = "GFX_evt_lizardmen_saurus_slann"

	only_rulers = yes

	is_triggered_only = yes

	immediate = {

	    k_tlanqua = { de_jure_liege = e_southlands }
		k_sudenburg = { de_jure_liege = e_southlands }
		k_durbaita = { de_jure_liege = e_southlands }

		e_southlands = {
		    grant_title = ROOT
		}
	}

	option = {
		name = "EVTOPTAgslizard.1"
		trigger = {
			OR = {
				character = ROOT
				trait = creature_skink
				trait = creature_saurus
				trait = creature_slann
				top_liege = { character = ROOT }
			}
		}
	}
	option = {
		name = "EVTOPTBgslizard.1"
		trigger = {
			NOR = {
				character = ROOT
				trait = creature_goblin
			    trait = creature_orc
			    trait = creature_snotling
				trait = creature_skink
				trait = creature_saurus
				trait = creature_slann
				top_liege = { character = ROOT }
			}
		}
	}
	option = {
		name = "EVTOPTCgslizard.1"
		trigger = {
			NOR = {
				character = ROOT
				top_liege = { character = ROOT }
			}
			trait = creature_goblin
			trait = creature_orc
			trait = creature_snotling
		}
	}
}
